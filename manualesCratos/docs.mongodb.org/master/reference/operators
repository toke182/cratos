<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Operator Reference &mdash; MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico" />
    <meta name="robots" content="index" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="canonical" href="http://docs.mongodb.org/master/reference/operators" />

    
    
    <link rel="stylesheet" href="../../_static/mongodb-docs.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
      
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.2',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="../../_static/jquery.js"></script>
    <script type="text/javascript" src="../../_static/underscore.js"></script>
    <script type="text/javascript" src="../../_static/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help"/>
<link rel="author" title="About these documents" href="../../about/" />
<link rel="top" title="MongoDB Manual" href="../../" />
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  </head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Events">Events</a></li>
                <li class="normal last"><a class="last" href="http://www.mongodb.org/display/DOCS/International+Documentation">International</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="../../"><img src="../../_static/logo-mongodb.png" width="190" height="55" alt="mongoDB" /></a></div>
                </div>
        </div>
<div class="search-db"><gcse:searchbox></gcse:searchbox></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/reference/operators.txt" target="_blank" title="Edit reference/operators.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails!init.jspa?pid=10380&issuetype=4&priority=4&summary=Comment+on%3a+%22reference/operators%2Etxt%22" target="_blank" title="Report a problem with reference/operators.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><gcse:searchresults></gcse:searchresults></div>
            
  <div class="section" id="operator-reference">
<h1>Operator Reference<a class="headerlink" href="#operator-reference" title="Permalink to this headline">¶</a></h1>
<p>This document contains a reference to all <a class="reference internal" href="../glossary/#term-operator"><em class="xref std std-term">operators</em></a>
used with MongoDB in version 2.2.2. See <a class="reference internal" href="../../crud/"><em>CRUD</em></a> for a higher
level overview of the operations that use these operators, and
<a class="reference internal" href="../operator/"><em>Query, Update, Projection, and Aggregation Operators</em></a> for a more condensed index of these operators.</p>
<div class="section" id="query-selectors">
<span id="index-0"></span><span id="id1"></span><h2>Query Selectors<a class="headerlink" href="#query-selectors" title="Permalink to this headline">¶</a></h2>
<div class="section" id="comparison">
<span id="query-selectors-comparison"></span><span id="index-1"></span><h3>Comparison<a class="headerlink" href="#comparison" title="Permalink to this headline">¶</a></h3>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>To express <tt class="docutils literal"><span class="pre">equal</span> <span class="pre">to</span></tt> (e.g. <tt class="docutils literal"><span class="pre">=</span></tt>) in the MongoDB query language,
use JSON <tt class="docutils literal"><span class="pre">{</span> <span class="pre">key:value</span> <span class="pre">}</span></tt> structure. Consider the following
prototype:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>For example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">a</span><span class="o">:</span> <span class="mi">42</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p class="last">This query selects all the documents the where the <tt class="docutils literal"><span class="pre">a</span></tt> field
holds a value of <tt class="docutils literal"><span class="pre">42</span></tt>.</p>
</div>
<dl class="operator">
<dt id="_S_ne">
<tt class="descname">$ne</tt><a class="headerlink" href="#_S_ne" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{field:</span> <span class="pre">{$ne:</span> <span class="pre">value}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_ne" title="$ne"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$ne</span></tt></a> selects the documents where the value of the
<tt class="docutils literal"><span class="pre">field</span></tt> is not equal (i.e. <tt class="docutils literal"><span class="pre">!=</span></tt>) to the specified <tt class="docutils literal"><span class="pre">value</span></tt>.
This includes documents that do not contain the <tt class="docutils literal"><span class="pre">field</span></tt>.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$ne</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value does not equal <tt class="docutils literal"><span class="pre">20</span></tt>,
including those documents that do not contain the <tt class="docutils literal"><span class="pre">qty</span></tt> field.</p>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_ne" title="$ne"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$ne</span></tt></a>
operator with a field from an embedded document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;carrier.state&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$ne</span><span class="o">:</span> <span class="s2">&quot;NY&quot;</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the <tt class="docutils literal"><span class="pre">qty</span></tt> field value in the documents that contains the embedded
document <tt class="docutils literal"><span class="pre">carrier</span></tt> whose <tt class="docutils literal"><span class="pre">state</span></tt> field value does not equal &#8220;NY&#8221;,
or where the <tt class="docutils literal"><span class="pre">state</span></tt> field or the <tt class="docutils literal"><span class="pre">carrier</span></tt> embedded document
does not exist.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_lt">
<tt class="descname">$lt</tt><a class="headerlink" href="#_S_lt" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{field:</span> <span class="pre">{$lt:</span> <span class="pre">value}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_lt" title="$lt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lt</span></tt></a> selects the documents where the value of the
<tt class="docutils literal"><span class="pre">field</span></tt> is less than (i.e. <tt class="docutils literal"><span class="pre">&lt;</span></tt>) the specified <tt class="docutils literal"><span class="pre">value</span></tt>.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is less than <tt class="docutils literal"><span class="pre">20</span></tt>.</p>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_lt" title="$lt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lt</span></tt></a>
operator with a field from an embedded document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;carrier.fee&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">9.99</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the <tt class="docutils literal"><span class="pre">price</span></tt> field value in the documents that contain the
embedded document <tt class="docutils literal"><span class="pre">carrier</span></tt> whose <tt class="docutils literal"><span class="pre">fee</span></tt> field value is less
than <tt class="docutils literal"><span class="pre">20</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_lte">
<tt class="descname">$lte</tt><a class="headerlink" href="#_S_lte" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$lte:</span> <span class="pre">value}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_lte" title="$lte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lte</span></tt></a> selects the documents where the value of the
<tt class="docutils literal"><span class="pre">field</span></tt> is less than or equal to (i.e. <tt class="docutils literal"><span class="pre">&lt;=</span></tt>) the specified
<tt class="docutils literal"><span class="pre">value</span></tt>.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lte</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is less than or equal to <tt class="docutils literal"><span class="pre">20</span></tt>.</p>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_lt" title="$lt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lt</span></tt></a>
operator with a field from an embedded document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;carrier.fee&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lte</span><span class="o">:</span> <span class="mi">5</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">9.99</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the <tt class="docutils literal"><span class="pre">price</span></tt> field value in the documents that contain the embedded
document <tt class="docutils literal"><span class="pre">carrier</span></tt> whose <tt class="docutils literal"><span class="pre">fee</span></tt> field value is less than or equal
to <tt class="docutils literal"><span class="pre">5</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_gt">
<tt class="descname">$gt</tt><a class="headerlink" href="#_S_gt" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{field:</span> <span class="pre">{$gt:</span> <span class="pre">value}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_gt" title="$gt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gt</span></tt></a> selects those documents where the value of the
<tt class="docutils literal"><span class="pre">field</span></tt> is greater than (i.e. <tt class="docutils literal"><span class="pre">&gt;</span></tt>) the specified <tt class="docutils literal"><span class="pre">value</span></tt>.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is greater than <tt class="docutils literal"><span class="pre">20</span></tt>.</p>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_gt" title="$gt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gt</span></tt></a>
operator with a field from an embedded document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;carrier.fee&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="mi">2</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">9.99</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the value of the <tt class="docutils literal"><span class="pre">price</span></tt> field in the documents that contain the
embedded document <tt class="docutils literal"><span class="pre">carrier</span></tt> whose <tt class="docutils literal"><span class="pre">fee</span></tt> field value is
greater than <tt class="docutils literal"><span class="pre">2</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_gte">
<tt class="descname">$gte</tt><a class="headerlink" href="#_S_gte" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{field:</span> <span class="pre">{$gte:</span> <span class="pre">value}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_gte" title="$gte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gte</span></tt></a> selects the documents where the value of the
<tt class="docutils literal"><span class="pre">field</span></tt> is greater than or equal to (i.e. <tt class="docutils literal"><span class="pre">&gt;=</span></tt>) a specified
value (e.g. <tt class="docutils literal"><span class="pre">value</span></tt>.)</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gte</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query would select all documents in <tt class="docutils literal"><span class="pre">inventory</span></tt> where
the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is greater than or equal to <tt class="docutils literal"><span class="pre">20</span></tt>.</p>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_gte" title="$gte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gte</span></tt></a>
operator with a field from an embedded document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;carrier.fee&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gte</span><span class="o">:</span> <span class="mi">2</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">9.99</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the value of the <tt class="docutils literal"><span class="pre">price</span></tt> field that contain the embedded document
<tt class="docutils literal"><span class="pre">carrier</span></tt> whose``fee`` field value is greater than or equal to
<tt class="docutils literal"><span class="pre">2</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_in">
<tt class="descname">$in</tt><a class="headerlink" href="#_S_in" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$in:</span> <span class="pre">[&lt;value1&gt;,</span> <span class="pre">&lt;value2&gt;,</span> <span class="pre">...</span> <span class="pre">&lt;valueN&gt;</span> <span class="pre">]</span> <span class="pre">}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a> selects the documents where the <tt class="docutils literal"><span class="pre">field</span></tt> value
equals any value in the specified array (e.g. <tt class="docutils literal"><span class="pre">&lt;value1&gt;</span></tt>,
<tt class="docutils literal"><span class="pre">&lt;value2&gt;</span></tt>, etc.)</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$in</span><span class="o">:</span> <span class="p">[</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">15</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select to select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is either <tt class="docutils literal"><span class="pre">5</span></tt> or
<tt class="docutils literal"><span class="pre">15</span></tt>. Although you can express this query using the
<a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator, choose the <a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a> operator rather
than the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator when performing equality checks on
the same field.</p>
<p>If the <tt class="docutils literal"><span class="pre">field</span></tt> holds an array, then the <a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a> operator
selects the documents whose <tt class="docutils literal"><span class="pre">field</span></tt> holds an array that contains
at least one element that matches a value in the specified array
(e.g. <tt class="docutils literal"><span class="pre">&lt;value1&gt;</span></tt>, <tt class="docutils literal"><span class="pre">&lt;value2&gt;</span></tt>, etc.)</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">tags</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$in</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;appliances&quot;</span><span class="p">,</span> <span class="s2">&quot;school&quot;</span><span class="p">]</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span><span class="kc">true</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the <tt class="docutils literal"><span class="pre">sale</span></tt> field value in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection where the
<tt class="docutils literal"><span class="pre">tags</span></tt> field holds an array with at least one element matching an
element in the array <tt class="docutils literal"><span class="pre">[&quot;appliances&quot;,</span> <span class="pre">&quot;school&quot;]</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_nin">
<tt class="descname">$nin</tt><a class="headerlink" href="#_S_nin" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$nin:</span> <span class="pre">[</span> <span class="pre">&lt;value1&gt;,</span> <span class="pre">&lt;value2&gt;</span> <span class="pre">...</span> <span class="pre">&lt;valueN&gt;</span> <span class="pre">]}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_nin" title="$nin"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nin</span></tt></a> selects the documents where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">field</span></tt> value is not in the specified <tt class="docutils literal"><span class="pre">array</span></tt> <strong>or</strong></li>
<li>the <tt class="docutils literal"><span class="pre">field</span></tt> does not exist.</li>
</ul>
<p>Consider the following query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$nin</span><span class="o">:</span> <span class="p">[</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">15</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value does <strong>not</strong> equal <tt class="docutils literal"><span class="pre">5</span></tt> nor
<tt class="docutils literal"><span class="pre">15</span></tt>. The selected documents will include those documents that do
<em>not</em> contain the <tt class="docutils literal"><span class="pre">qty</span></tt> field.</p>
<p>If the <tt class="docutils literal"><span class="pre">field</span></tt> holds an array, then the <a class="reference internal" href="#_S_nin" title="$nin"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nin</span></tt></a> operator
selects the documents whose <tt class="docutils literal"><span class="pre">field</span></tt> holds an array with <strong>no</strong>
element equal to a value in the specified array (e.g. <tt class="docutils literal"><span class="pre">&lt;value1&gt;</span></tt>,
<tt class="docutils literal"><span class="pre">&lt;value2&gt;</span></tt>, etc.).</p>
<p>Consider the following query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">tags</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$nin</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;appliances&quot;</span><span class="p">,</span> <span class="s2">&quot;school&quot;</span> <span class="p">]</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the <tt class="docutils literal"><span class="pre">sale</span></tt> field value in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection where the
<tt class="docutils literal"><span class="pre">tags</span></tt> field holds an array with <strong>no</strong> elements matching an
element in the array <tt class="docutils literal"><span class="pre">[&quot;appliances&quot;,</span> <span class="pre">&quot;school&quot;]</span></tt> or where a
document does not contain the <tt class="docutils literal"><span class="pre">tags</span></tt> field.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_all">
<tt class="descname">$all</tt><a class="headerlink" href="#_S_all" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$all:</span> <span class="pre">[</span> <span class="pre">&lt;value&gt;</span> <span class="pre">,</span> <span class="pre">&lt;value1&gt;</span> <span class="pre">...</span> <span class="pre">]</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_all" title="$all"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$all</span></tt></a> selects the documents where the <tt class="docutils literal"><span class="pre">field</span></tt> holds an
array and contains all elements (e.g. <tt class="docutils literal"><span class="pre">&lt;value&gt;</span></tt>, <tt class="docutils literal"><span class="pre">&lt;value1&gt;</span></tt>, etc.)
in the array.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">tags</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$all</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;appliances&quot;</span><span class="p">,</span> <span class="s2">&quot;school&quot;</span><span class="p">,</span> <span class="s2">&quot;book&quot;</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query selects all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">tags</span></tt> field contains an array with the elements,
<tt class="docutils literal"><span class="pre">appliances</span></tt>, <tt class="docutils literal"><span class="pre">school</span></tt>, and <tt class="docutils literal"><span class="pre">technology</span></tt>.</p>
<p>Therefore, the above query will match documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection that have a <tt class="docutils literal"><span class="pre">tags</span></tt> field that hold <em>either</em> of the
following arrays:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">[</span> <span class="s2">&quot;school&quot;</span><span class="p">,</span> <span class="s2">&quot;book&quot;</span><span class="p">,</span> <span class="s2">&quot;bag&quot;</span><span class="p">,</span> <span class="s2">&quot;headphone&quot;</span><span class="p">,</span> <span class="s2">&quot;appliances&quot;</span> <span class="p">]</span>
<span class="p">[</span> <span class="s2">&quot;appliances&quot;</span><span class="p">,</span> <span class="s2">&quot;school&quot;</span><span class="p">,</span> <span class="s2">&quot;book&quot;</span> <span class="p">]</span>
</pre></div>
</div>
<p>The <a class="reference internal" href="#_S_all" title="$all"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$all</span></tt></a> operator exists to describe and specify arrays
in MongoDB queries. However, you may use the <a class="reference internal" href="#_S_all" title="$all"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$all</span></tt></a>
operator to select against a non-array <tt class="docutils literal"><span class="pre">field</span></tt>, as in the
following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$all</span><span class="o">:</span> <span class="p">[</span> <span class="mi">50</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p><strong>However</strong>, use the following form to express the same query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">50</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Both queries will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection where the value of the <tt class="docutils literal"><span class="pre">qty</span></tt> field equals <tt class="docutils literal"><span class="pre">50</span></tt>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>In most cases, MongoDB does not treat arrays as sets. This
operator provides a notable exception to this approach.</p>
<p class="last">In the current release queries that use the <a class="reference internal" href="#_S_all" title="$all"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$all</span></tt></a>
operator must scan all the documents that match the first element in
the query array. As a result, even with an index to support the
query, the operation may be long running, particularly when the
first element in the array is not very selective.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, and <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<p>You may combine comparison operators to specify ranges:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="nx">value1</span><span class="p">,</span> <span class="nx">$lt</span><span class="o">:</span> <span class="nx">value2</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<dl class="docutils">
<dt>This statement returns all documents with <tt class="docutils literal"><span class="pre">field</span></tt> between</dt>
<dd><tt class="docutils literal"><span class="pre">value1</span></tt> and <tt class="docutils literal"><span class="pre">value2</span></tt>.</dd>
</dl>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Fields containing arrays match conditional operators, if only one
item matches. Therefore, the following query:</p>
</div>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span> <span class="nx">$lt</span><span class="o">:</span><span class="mi">2</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Will match a document that contains the following field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="logical">
<span id="query-selectors-logical"></span><span id="index-3"></span><h3>Logical<a class="headerlink" href="#logical" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_and">
<tt class="descname">$and</tt><a class="headerlink" href="#_S_and" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 2.0.</span></p>
<p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$and:</span> <span class="pre">[</span> <span class="pre">{</span> <span class="pre">&lt;expression1&gt;</span> <span class="pre">},</span> <span class="pre">{</span> <span class="pre">&lt;expression2&gt;</span> <span class="pre">}</span> <span class="pre">,</span> <span class="pre">...</span> <span class="pre">,</span> <span class="pre">{</span> <span class="pre">&lt;expressionN&gt;</span> <span class="pre">}</span> <span class="pre">]</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_and" title="$and"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$and</span></tt></a> performs a logical <tt class="docutils literal"><span class="pre">AND</span></tt> operation on an array
of <em>two or more</em> expressions (e.g. <tt class="docutils literal"><span class="pre">&lt;expression1&gt;</span></tt>,
<tt class="docutils literal"><span class="pre">&lt;expression2&gt;</span></tt>, etc.) and selects the documents that satisfy
<em>all</em> the expressions in the array. The <a class="reference internal" href="#_S_and" title="$and"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$and</span></tt></a> operator
uses <em>short-circuit evaluation</em>. If the first expression
(e.g. <tt class="docutils literal"><span class="pre">&lt;expression1&gt;</span></tt>) evaluates to <tt class="docutils literal"><span class="pre">false</span></tt>, MongoDB will not
evaluate the remaining expressions.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="nx">$and</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection where:</p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">price</span></tt> field value equals <tt class="docutils literal"><span class="pre">1.99</span></tt> <strong>and</strong></li>
<li><tt class="docutils literal"><span class="pre">qty</span></tt> field value is less than <tt class="docutils literal"><span class="pre">20</span></tt> <strong>and</strong></li>
<li><tt class="docutils literal"><span class="pre">sale</span></tt> field value is equal to <tt class="docutils literal"><span class="pre">true</span></tt>.</li>
</ul>
<p>MongoDB provides an implicit <tt class="docutils literal"><span class="pre">AND</span></tt> operation when specifying a
comma separated list of expressions. For example, you may write the
above query as:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span><span class="p">,</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">,</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>If, however, a query requires an <tt class="docutils literal"><span class="pre">AND</span></tt> operation on the same field
such as <tt class="docutils literal"><span class="pre">{</span> <span class="pre">price:</span> <span class="pre">{</span> <span class="pre">$ne:</span> <span class="pre">1.99</span> <span class="pre">}</span> <span class="pre">}</span> <span class="pre">AND</span> <span class="pre">{</span> <span class="pre">price:</span> <span class="pre">{</span> <span class="pre">$exists:</span> <span class="pre">true</span> <span class="pre">}</span>
<span class="pre">}</span></tt>, then either use the <a class="reference internal" href="#_S_and" title="$and"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$and</span></tt></a> operator for the two
separate expressions or combine the operator expressions for the
field <tt class="docutils literal"><span class="pre">{</span> <span class="pre">price:</span> <span class="pre">{</span> <span class="pre">$ne:</span> <span class="pre">1.99,</span> <span class="pre">$exists:</span> <span class="pre">true</span> <span class="pre">}</span> <span class="pre">}</span></tt>.</p>
<p>Consider the following examples:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$and</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$ne</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">}</span> <span class="p">]</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$ne</span><span class="o">:</span> <span class="mf">1.99</span><span class="p">,</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">}</span> <span class="p">,</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="mi">15</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Both <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operations will set
the value of the <tt class="docutils literal"><span class="pre">qty</span></tt> field in documents where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field value does not equal <tt class="docutils literal"><span class="pre">1.99</span></tt> <strong>and</strong></li>
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field exists.</li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_ne" title="$ne"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$ne</span></tt></a>, <a class="reference internal" href="#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a>,
<a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_or">
<tt class="descname">$or</tt><a class="headerlink" href="#_S_or" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.6.</span></p>
<p class="versionchanged">
<span class="versionmodified">Changed in version 2.0: </span>You may nest <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operations; however, these
expressions are not as efficiently optimized as top-level.</p>
<p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$or:</span> <span class="pre">[</span> <span class="pre">{</span> <span class="pre">&lt;expression1&gt;</span> <span class="pre">},</span> <span class="pre">{</span> <span class="pre">&lt;expression2&gt;</span> <span class="pre">},</span> <span class="pre">...</span> <span class="pre">,</span> <span class="pre">{</span> <span class="pre">&lt;expressionN&gt;</span> <span class="pre">}</span> <span class="pre">]</span> <span class="pre">}</span></tt></p>
<p>The <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator performs a logical <tt class="docutils literal"><span class="pre">OR</span></tt> operation on an array of
<em>two or more</em> <tt class="docutils literal"><span class="pre">&lt;expressions&gt;</span></tt> and selects the documents that satisfy
<em>at least</em> one of the <tt class="docutils literal"><span class="pre">&lt;expressions&gt;</span></tt>.</p>
<p>Consider the following query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span><span class="mf">1.99</span><span class="p">,</span> <span class="nx">$or</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field value equals <tt class="docutils literal"><span class="pre">1.99</span></tt> <em>and</em></li>
<li>either the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is less than <tt class="docutils literal"><span class="pre">20</span></tt> <strong>or</strong> the
<tt class="docutils literal"><span class="pre">sale</span></tt> field value is <tt class="docutils literal"><span class="pre">true</span></tt>.</li>
</ul>
<p>Consider the following example which uses the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator to select
fields from embedded documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$or</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span><span class="mf">10.99</span> <span class="p">},</span> <span class="p">{</span> <span class="s2">&quot;carrier.state&quot;</span><span class="o">:</span> <span class="s2">&quot;NY&quot;</span><span class="p">}</span> <span class="p">]</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> operation will set
the value of the <tt class="docutils literal"><span class="pre">sale</span></tt> field in the documents in the
<tt class="docutils literal"><span class="pre">inventory</span></tt> collection where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field value equals <tt class="docutils literal"><span class="pre">10.99</span></tt> <strong>or</strong></li>
<li>the <tt class="docutils literal"><span class="pre">carrier</span></tt> embedded document contains a field <tt class="docutils literal"><span class="pre">state</span></tt> whose
value equals <tt class="docutils literal"><span class="pre">NY</span></tt>.</li>
</ul>
<p>When using <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> with <tt class="docutils literal"><span class="pre">&lt;expressions&gt;</span></tt> that are equality
checks for the value of the same field, choose the <a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a>
operator over the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator.</p>
<p>Consider the query to select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection where:</p>
<ul class="simple">
<li>either <tt class="docutils literal"><span class="pre">price</span></tt> field value equals <tt class="docutils literal"><span class="pre">1.99</span></tt> <em>or</em> the <tt class="docutils literal"><span class="pre">sale</span></tt>
field value equals <tt class="docutils literal"><span class="pre">true</span></tt>, <strong>and</strong></li>
<li>either <tt class="docutils literal"><span class="pre">qty</span></tt> field value equals <tt class="docutils literal"><span class="pre">20</span></tt> <em>or</em> <tt class="docutils literal"><span class="pre">qty</span></tt> field value
equals <tt class="docutils literal"><span class="pre">50</span></tt>,</li>
</ul>
<p>The most effective query would be:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span> <span class="p">(</span> <span class="p">{</span> <span class="nx">$or</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">],</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$in</span><span class="o">:</span> <span class="p">[</span><span class="mi">20</span><span class="p">,</span> <span class="mi">50</span><span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Consider the following behaviors when using the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a>
operator:</p>
<ul>
<li><p class="first">When using indexes with <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> queries, remember that
each clause of an <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> query will execute in parallel.
These clauses can each use their own index. Consider the following
query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span> <span class="p">(</span> <span class="p">{</span> <span class="nx">$or</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>For this query, you would create one index on <tt class="docutils literal"><span class="pre">price</span></tt> (
<tt class="docutils literal"><span class="pre">db.inventory.ensureIndex(</span> <span class="pre">{</span> <span class="pre">price:</span> <span class="pre">1</span> <span class="pre">}</span> <span class="pre">)</span></tt> ) and another index
on <tt class="docutils literal"><span class="pre">sale</span></tt> ( <tt class="docutils literal"><span class="pre">db.inventory.ensureIndex(</span> <span class="pre">{</span> <span class="pre">sale:</span> <span class="pre">1</span> <span class="pre">}</span> <span class="pre">)</span></tt> ) rather
than a compound index.</p>
</li>
<li><p class="first">Also, when using the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> operator with the
<a class="reference internal" href="../method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">sort()</span></tt></a> method in a query, the query will
<strong>not</strong> use the indexes on the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> fields. Consider the following
query which adds a <a class="reference internal" href="../method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">sort()</span></tt></a> method to the above query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span> <span class="p">(</span> <span class="p">{</span> <span class="nx">$or</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">).</span><span class="nx">sort</span><span class="p">({</span><span class="nx">item</span><span class="o">:</span><span class="mi">1</span><span class="p">})</span>
</pre></div>
</div>
<p>This modified query will not use the index on <tt class="docutils literal"><span class="pre">price</span></tt> nor the
index on <tt class="docutils literal"><span class="pre">sale</span></tt>.</p>
</li>
<li><p class="first">You cannot use the <a class="reference internal" href="#_S_or" title="$or"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$or</span></tt></a> with <tt class="docutils literal"><span class="pre">2d</span></tt> <a class="reference internal" href="../../core/geospatial-indexes/"><em>geospatial
queries</em></a>.</p>
</li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>,
<a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>,
<a class="reference internal" href="#_S_and" title="$and"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$and</span></tt></a>, <a class="reference internal" href="../method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">sort()</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_nor">
<tt class="descname">$nor</tt><a class="headerlink" href="#_S_nor" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$nor:</span> <span class="pre">[</span> <span class="pre">{</span> <span class="pre">&lt;expression1&gt;</span> <span class="pre">},</span> <span class="pre">{</span> <span class="pre">&lt;expression2&gt;</span> <span class="pre">},</span> <span class="pre">...</span>&nbsp; <span class="pre">{</span> <span class="pre">&lt;expressionN&gt;</span> <span class="pre">}</span> <span class="pre">]</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_nor" title="$nor"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nor</span></tt></a> performs a logical <tt class="docutils literal"><span class="pre">NOR</span></tt> operation on an array of
<em>two or more</em> <tt class="docutils literal"><span class="pre">&lt;expressions&gt;</span></tt> and selects the documents that
<strong>fail</strong> all the <tt class="docutils literal"><span class="pre">&lt;expressions&gt;</span></tt> in the array.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$nor</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$lt</span><span class="o">:</span> <span class="mi">20</span> <span class="p">}</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field value does <em>not</em> equal <tt class="docutils literal"><span class="pre">1.99</span></tt> <strong>and</strong></li>
<li>the <tt class="docutils literal"><span class="pre">qty</span></tt> field value is <em>not</em> less than <tt class="docutils literal"><span class="pre">20</span></tt> <strong>and</strong></li>
<li>the <tt class="docutils literal"><span class="pre">sale</span></tt> field value is <em>not</em> equal to <tt class="docutils literal"><span class="pre">true</span></tt></li>
</ul>
<p>including those documents that do not contain these field(s).</p>
<p>The exception in returning documents that do not contain the field
in the <a class="reference internal" href="#_S_nor" title="$nor"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nor</span></tt></a> expression is when the <a class="reference internal" href="#_S_nor" title="$nor"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nor</span></tt></a> operator is
used with the <a class="reference internal" href="#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a> operator.</p>
<p>Consider the following query which uses only the <a class="reference internal" href="#_S_nor" title="$nor"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nor</span></tt></a> operator:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$nor</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">]</span>  <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will return all documents that:</p>
<ul class="simple">
<li>contain the <tt class="docutils literal"><span class="pre">price</span></tt> field whose value is <em>not</em> equal to <tt class="docutils literal"><span class="pre">1.99</span></tt>
and contain the <tt class="docutils literal"><span class="pre">sale</span></tt> field whose value <em>is not</em> equal to
<tt class="docutils literal"><span class="pre">true</span></tt> <strong>or</strong></li>
<li>contain the <tt class="docutils literal"><span class="pre">price</span></tt> field whose value is <em>not</em> equal to <tt class="docutils literal"><span class="pre">1.99</span></tt>
<em>but</em> do <em>not</em> contain the <tt class="docutils literal"><span class="pre">sale</span></tt> field <strong>or</strong></li>
<li>do <em>not</em> contain the <tt class="docutils literal"><span class="pre">price</span></tt> field <em>but</em> contain the <tt class="docutils literal"><span class="pre">sale</span></tt>
field whose value <em>is not</em> equal to <tt class="docutils literal"><span class="pre">true</span></tt> <strong>or</strong></li>
<li>do <em>not</em> contain the <tt class="docutils literal"><span class="pre">price</span></tt> field <em>and</em> do <em>not</em> contain the
<tt class="docutils literal"><span class="pre">sale</span></tt> field</li>
</ul>
<p>Compare that with the following query which uses the
<a class="reference internal" href="#_S_nor" title="$nor"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nor</span></tt></a> operator with the <a class="reference internal" href="#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a> operator:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$nor</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span> <span class="p">},</span>
                             <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">sale</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will return all documents that:</p>
<ul class="simple">
<li>contain the <tt class="docutils literal"><span class="pre">price</span></tt> field whose value is <em>not</em> equal to <tt class="docutils literal"><span class="pre">1.99</span></tt>
and contain the <tt class="docutils literal"><span class="pre">sale</span></tt> field whose value <em>is not</em> equal to
<tt class="docutils literal"><span class="pre">true</span></tt></li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>, <a class="reference internal" href="#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a>.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_not">
<tt class="descname">$not</tt><a class="headerlink" href="#_S_not" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$not:</span> <span class="pre">{</span> <span class="pre">&lt;operator-expression&gt;</span> <span class="pre">}</span> <span class="pre">}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a> performs a logical <tt class="docutils literal"><span class="pre">NOT</span></tt> operation on the
specified <tt class="docutils literal"><span class="pre">&lt;operator-expression&gt;</span></tt> and selects the documents that
do <em>not</em> match the <tt class="docutils literal"><span class="pre">&lt;operator-expression&gt;</span></tt>. This includes
documents that do not contain the <tt class="docutils literal"><span class="pre">field</span></tt>.</p>
<p>Consider the following query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$not</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="mf">1.99</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection where:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field value is less than or equal to <tt class="docutils literal"><span class="pre">1.99</span></tt> <strong>or</strong></li>
<li>the <tt class="docutils literal"><span class="pre">price</span></tt> field does not exist</li>
</ul>
<p><tt class="docutils literal"><span class="pre">{</span> <span class="pre">$not:</span> <span class="pre">{</span> <span class="pre">$gt:</span> <span class="pre">1.99</span> <span class="pre">}</span> <span class="pre">}</span></tt> is different from the <a class="reference internal" href="#_S_lte" title="$lte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lte</span></tt></a>
operator. <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$lt:</span> <span class="pre">1.99</span> <span class="pre">}</span></tt> returns <em>only</em> the documents where
<tt class="docutils literal"><span class="pre">price</span></tt> field exists and its value is less than or equal to
<tt class="docutils literal"><span class="pre">1.99</span></tt>.</p>
<p>Remember that the <a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a> operator only affects <em>other
operators</em> and cannot check fields and documents independently. So,
use the <a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a> operator for logical disjunctions and the
<a class="reference internal" href="#_S_ne" title="$ne"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$ne</span></tt></a> operator to test the contents of fields directly.</p>
<p>Consider the following behaviors when using the <a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a>
operator:</p>
<ul>
<li><p class="first">The operation of the <a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a> operator is consistent with
the behavior of other operators but may yield unexpected results
with some data types like arrays.</p>
</li>
<li><p class="first">The <a class="reference internal" href="#_S_not" title="$not"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$not</span></tt></a> operator does <strong>not</strong> support operations with
the <a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> operator. Instead use <tt class="docutils literal"><span class="pre">//</span></tt> or in your
driver interfaces, use your language&#8217;s regular expression
capability to create regular expression objects.</p>
<p>Consider the following example which uses the pattern match expression <tt class="docutils literal"><span class="pre">//</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">item</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$not</span><span class="o">:</span> <span class="sr">/^p.*/</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt>
collection where the <tt class="docutils literal"><span class="pre">item</span></tt> field value does <em>not</em> start with
the letter <tt class="docutils literal"><span class="pre">p</span></tt>.</p>
<p>If using PyMongo&#8217;s <tt class="docutils literal"><span class="pre">re.compile()</span></tt>, you can write
the above query as:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">re</span>
<span class="k">for</span> <span class="n">noMatch</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">inventory</span><span class="o">.</span><span class="n">find</span><span class="p">(</span> <span class="p">{</span> <span class="s">&quot;item&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&quot;$not&quot;</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;^p.*&quot;</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span> <span class="p">):</span>
    <span class="k">print</span> <span class="n">noMatch</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>, <a class="reference internal" href="#_S_gt" title="$gt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gt</span></tt></a>,
<a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a>, <a class="reference external" href="http://api.mongodb.org/pythoncurrent">PyMongo</a>,
<a class="reference internal" href="../glossary/#term-driver"><em class="xref std std-term">driver</em></a>.</p>
</div>
</dd></dl>

</div>
<div class="section" id="element">
<span id="query-selectors-element"></span><span id="index-4"></span><h3>Element<a class="headerlink" href="#element" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_exists">
<tt class="descname">$exists</tt><a class="headerlink" href="#_S_exists" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$exists:</span> <span class="pre">&lt;boolean&gt;</span> <span class="pre">}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a> selects the documents that contain the field if
<tt class="docutils literal"><span class="pre">&lt;boolean&gt;</span></tt> is <tt class="docutils literal"><span class="pre">true</span></tt>. If <tt class="docutils literal"><span class="pre">&lt;boolean&gt;</span></tt> is <tt class="docutils literal"><span class="pre">false</span></tt>, the query
only returns the documents that do not contain the field. Documents
that contain the field but has the value <tt class="docutils literal"><span class="pre">null</span></tt> are <em>not</em> returned.</p>
<p>MongoDB <cite>$exists</cite> does <strong>not</strong> correspond to SQL operator
<tt class="docutils literal"><span class="pre">exists</span></tt>. For SQL <tt class="docutils literal"><span class="pre">exists</span></tt>, refer to the <a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a>
operator.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">$nin</span><span class="o">:</span> <span class="p">[</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">15</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field exists <em>and</em> its value does not equal either
<tt class="docutils literal"><span class="pre">5</span></tt> nor <tt class="docutils literal"><span class="pre">15</span></tt>.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<ul class="last simple">
<li><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a></li>
<li><a class="reference internal" href="#_S_nin" title="$nin"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nin</span></tt></a></li>
<li><a class="reference internal" href="#_S_and" title="$and"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$and</span></tt></a></li>
<li><a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a></li>
<li><a class="reference internal" href="../../faq/developers/#faq-developers-query-for-nulls"><em>How do I query for fields that have null values?</em></a></li>
</ul>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_type">
<tt class="descname">$type</tt><a class="headerlink" href="#_S_type" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$type:</span> <span class="pre">&lt;BSON</span> <span class="pre">type&gt;</span> <span class="pre">}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> selects the documents where the <em>value</em> of the
<tt class="docutils literal"><span class="pre">field</span></tt> is the specified <a class="reference internal" href="../glossary/#term-bson"><em class="xref std std-term">BSON</em></a> type.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">price</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$type</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">price</span></tt> field value is a Double.</p>
<p>If the <tt class="docutils literal"><span class="pre">field</span></tt> holds an array, the <a class="reference internal" href="#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> operator
performs the type check against the array elements and <strong>not</strong> the
<tt class="docutils literal"><span class="pre">field</span></tt>.</p>
<p>Consider the following example where the <tt class="docutils literal"><span class="pre">tags</span></tt> field holds an array:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">tags</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$type</span> <span class="o">:</span> <span class="mi">4</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">tags</span></tt> array contains an element that is itself an array.</p>
<p>If instead you want to determine whether the <tt class="docutils literal"><span class="pre">tags</span></tt> field is an
array type, use the <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span> <span class="o">:</span> <span class="s2">&quot;Array.isArray(this.tags)&quot;</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>See the <a class="reference external" href="https://jira.mongodb.org/browse/SERVER-1475">SERVER-1475</a> for more information about the
array type.</p>
<p>Refer to the following table for the available <a class="reference internal" href="../glossary/#term-bson"><em class="xref std std-term">BSON</em></a> types
and their corresponding numbers.</p>
<table border="1" class="docutils">
<colgroup>
<col width="70%" />
<col width="30%" />
</colgroup>
<tbody valign="top">
<tr class="row-odd"><td><strong>Type</strong></td>
<td><strong>Number</strong></td>
</tr>
<tr class="row-even"><td>Double</td>
<td>1</td>
</tr>
<tr class="row-odd"><td>String</td>
<td>2</td>
</tr>
<tr class="row-even"><td>Object</td>
<td>3</td>
</tr>
<tr class="row-odd"><td>Array</td>
<td>4</td>
</tr>
<tr class="row-even"><td>Binary data</td>
<td>5</td>
</tr>
<tr class="row-odd"><td>Object id</td>
<td>7</td>
</tr>
<tr class="row-even"><td>Boolean</td>
<td>8</td>
</tr>
<tr class="row-odd"><td>Date</td>
<td>9</td>
</tr>
<tr class="row-even"><td>Null</td>
<td>10</td>
</tr>
<tr class="row-odd"><td>Regular Expression</td>
<td>11</td>
</tr>
<tr class="row-even"><td>JavaScript</td>
<td>13</td>
</tr>
<tr class="row-odd"><td>Symbol</td>
<td>14</td>
</tr>
<tr class="row-even"><td>JavaScript (with scope)</td>
<td>15</td>
</tr>
<tr class="row-odd"><td>32-bit integer</td>
<td>16</td>
</tr>
<tr class="row-even"><td>Timestamp</td>
<td>17</td>
</tr>
<tr class="row-odd"><td>64-bit integer</td>
<td>18</td>
</tr>
<tr class="row-even"><td>Min key</td>
<td>255</td>
</tr>
<tr class="row-odd"><td>Max key</td>
<td>127</td>
</tr>
</tbody>
</table>
<p><tt class="docutils literal"><span class="pre">MinKey</span></tt> and <tt class="docutils literal"><span class="pre">MaxKey</span></tt> compare less than and greater than all
other possible <a class="reference internal" href="../glossary/#term-bson"><em class="xref std std-term">BSON</em></a> element values, respectively, and exist
primarily for internal use.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>To query if a field value is a <tt class="docutils literal"><span class="pre">MinKey</span></tt>, you must use the <a class="reference internal" href="#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> with
<tt class="docutils literal"><span class="pre">-1</span></tt> as in the following example:</p>
<div class="last highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$type</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
</div>
<div class="admonition-example admonition">
<p class="first admonition-title">Example</p>
<p>Consider the following example operation sequence that
demonstrates both type comparison <em>and</em> the special <tt class="docutils literal"><span class="pre">MinKey</span></tt>
and <tt class="docutils literal"><span class="pre">MaxKey</span></tt> values:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="mi">3</span><span class="p">});</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="mf">2.9</span><span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="nx">MaxKey</span> <span class="p">}</span> <span class="p">)</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="nx">MinKey</span> <span class="p">}</span> <span class="p">)</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">sort</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">1</span><span class="p">})</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b04094b7c65b846e2090112&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$minKey</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b03155dce8de6586fb002c7&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="mf">2.9</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b03154cce8de6586fb002c6&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="mi">3</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b031566ce8de6586fb002c9&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="kc">true</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b031563ce8de6586fb002c8&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="s2">&quot;Tue Jul 25 2012 18:42:03 GMT-0500 (EST)&quot;</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b0409487c65b846e2090111&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$maxKey</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span>
</pre></div>
</div>
<p>To query for the minimum value of a <a class="reference internal" href="../glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a> of a
<a class="reference internal" href="../glossary/#term-sharded-cluster"><em class="xref std std-term">sharded cluster</em></a>, use the following operation when
connected to the <a class="reference internal" href="../config-database/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a>:</p>
<div class="last highlight-javascript"><div class="highlight"><pre><span class="nx">use</span> <span class="nx">config</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">chunks</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;min.shardKey&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$type</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
</div>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">Storing values of the different types in the same field in a
collection is <em>strongly</em> discouraged.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.insert/#db.collection.insert" title="db.collection.insert"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">insert()</span></tt></a>, <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>, <a class="reference internal" href="../glossary/#term-bson"><em class="xref std std-term">BSON</em></a>,
<a class="reference internal" href="../glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a>, <a class="reference internal" href="../glossary/#term-sharded-cluster"><em class="xref std std-term">sharded cluster</em></a> .</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_mod">
<tt class="descname">$mod</tt><a class="headerlink" href="#_S_mod" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">{</span> <span class="pre">$mod:</span> <span class="pre">[</span> <span class="pre">divisor,</span> <span class="pre">remainder</span> <span class="pre">]}</span> <span class="pre">}</span></tt></p>
<p><a class="reference internal" href="#_S_mod" title="$mod"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$mod</span></tt></a> selects the documents where the <tt class="docutils literal"><span class="pre">field</span></tt> value divided
by the <tt class="docutils literal"><span class="pre">divisor</span></tt> has the specified <tt class="docutils literal"><span class="pre">remainder</span></tt>.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$mod</span><span class="o">:</span> <span class="p">[</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will select all documents in the <tt class="docutils literal"><span class="pre">inventory</span></tt> collection
where the <tt class="docutils literal"><span class="pre">qty</span></tt> field value modulo <tt class="docutils literal"><span class="pre">4</span></tt> equals <tt class="docutils literal"><span class="pre">0</span></tt>, such as
documents with <tt class="docutils literal"><span class="pre">qty</span></tt> value equal to <tt class="docutils literal"><span class="pre">0</span></tt> or <tt class="docutils literal"><span class="pre">12</span></tt>.</p>
<p>In some cases, you can query using the <a class="reference internal" href="#_S_mod" title="$mod"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$mod</span></tt></a> operator
rather than the more expensive <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator. Consider
the following example using the <a class="reference internal" href="#_S_mod" title="$mod"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$mod</span></tt></a> operator:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">qty</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$mod</span><span class="o">:</span> <span class="p">[</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">0</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The above query is less expensive than the following query which
uses the <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">inventory</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span><span class="o">:</span> <span class="s2">&quot;this.qty % 4 == 0&quot;</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>, <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a>.</p>
</div>
</dd></dl>

</div>
<div class="section" id="javascript">
<span id="query-selectors-javascript"></span><span id="index-5"></span><h3>JavaScript<a class="headerlink" href="#javascript" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_where">
<tt class="descname">$where</tt><a class="headerlink" href="#_S_where" title="Permalink to this definition">¶</a></dt>
<dd><p>Use the <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator to pass either a string
containing a JavaScript expression or a full JavaScript function to
the query system. The <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> provides greater
flexibility, but requires that the database processes the
JavaScript expression or function for <em>each</em> document in the
collection. Reference the document in the JavaScript expression or
function using either <tt class="docutils literal"><span class="pre">this</span></tt> or <tt class="docutils literal"><span class="pre">obj</span></tt> .</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<ul class="last simple">
<li>Do not write to the database within the <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>
JavaScript function.</li>
<li><a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> evaluates JavaScript and cannot take
advantage of indexes. Therefore, query performance improves
when you express your query using the standard MongoDB
operators (e.g., <a class="reference internal" href="#_S_gt" title="$gt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gt</span></tt></a>, <a class="reference internal" href="#_S_in" title="$in"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$in</span></tt></a>).</li>
<li>In general, you should use <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> only when you
can&#8217;t express your query using another operator. If you must
use <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>, try to include at least one other
standard query operator to filter the result set. Using
<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> alone requires a table scan.</li>
</ul>
</div>
<p>Consider the following examples:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span><span class="o">:</span> <span class="s2">&quot;this.credits == this.debits&quot;</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span><span class="o">:</span> <span class="s2">&quot;obj.credits == obj.debits&quot;</span> <span class="p">}</span> <span class="p">);</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">credits</span> <span class="o">==</span> <span class="k">this</span><span class="p">.</span><span class="nx">debits</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">$where</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">credits</span> <span class="o">==</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">debits</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Additionally, if the query consists only of the <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>
operator, you can pass in just the JavaScript expression or
JavaScript functions, as in the following examples:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="s2">&quot;this.credits == this.debits || this.credits &gt; this.debits&quot;</span> <span class="p">);</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">credits</span> <span class="o">==</span> <span class="k">this</span><span class="p">.</span><span class="nx">debits</span> <span class="o">||</span> <span class="k">this</span><span class="p">.</span><span class="nx">credits</span> <span class="o">&gt;</span> <span class="k">this</span><span class="p">.</span><span class="nx">debits</span> <span class="p">)</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>You can include both the standard MongoDB operators and the
<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator in your query, as in the following
examples:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">active</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">$where</span><span class="o">:</span> <span class="s2">&quot;this.credits - this.debits &lt; 0&quot;</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">myCollection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">active</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">$where</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">credits</span> <span class="o">-</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">debits</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Using normal non-<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> query statements provides the
following performance advantages:</p>
<ul class="simple">
<li>MongoDB will evaluate non-<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> components of query
before <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> statements. If the
non-<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> statements match no documents, MongoDB
will not perform any query evaluation using <a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>.</li>
<li>The non-<a class="reference internal" href="#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> query statements may use an
<a class="reference internal" href="../glossary/#term-index"><em class="xref std std-term">index</em></a>.</li>
</ul>
</dd></dl>

<dl class="operator">
<dt id="_S_regex">
<tt class="descname">$regex</tt><a class="headerlink" href="#_S_regex" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> operator provides regular expression
capabilities in queries. MongoDB uses Perl compatible regular
expressions (i.e. &#8220;PCRE.&#8221;))The following examples are equivalent:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="sr">/acme.*corp/i</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$regex</span><span class="o">:</span> <span class="s1">&#39;acme.*corp&#39;</span><span class="p">,</span> <span class="nx">$options</span><span class="o">:</span> <span class="s1">&#39;i&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>These expressions match all documents in <tt class="docutils literal"><span class="pre">collection</span></tt> where the
value of <tt class="docutils literal"><span class="pre">field</span></tt> matches the case-insensitive regular expression
<tt class="docutils literal"><span class="pre">acme.*corp</span></tt>.</p>
<p><a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> uses &#8220;Perl Compatible Regular Expressions&#8221; (PCRE) as the
matching engine.</p>
<dl class="operator">
<dt id="_S_options">
<tt class="descname">$options</tt><a class="headerlink" href="#_S_options" title="Permalink to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> provides four option flags:</p>
<ul>
<li><p class="first"><tt class="docutils literal"><span class="pre">i</span></tt> toggles case insensitivity, and allows all letters in the
pattern to match upper and lower cases.</p>
</li>
<li><p class="first"><tt class="docutils literal"><span class="pre">m</span></tt> toggles multiline regular expression. Without this option,
all regular expression match within one line.</p>
<p>If there are no newline characters (e.g. <tt class="docutils literal"><span class="pre">\n</span></tt>) or no
start/end of line construct, the <tt class="docutils literal"><span class="pre">m</span></tt> option has no effect.</p>
</li>
<li><p class="first"><tt class="docutils literal"><span class="pre">x</span></tt> toggles an &#8220;extended&#8221; capability. When set,
<a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> ignores all white space characters unless
escaped or included in a character class.</p>
<p>Additionally, it ignores characters between an un-escaped <tt class="docutils literal"><span class="pre">#</span></tt>
character and the next new line, so that you may include
comments in complicated patterns. This only applies to data
characters; white space characters may never appear within
special character sequences in a pattern.</p>
<p>The <tt class="docutils literal"><span class="pre">x</span></tt> option does not affect the handling of the VT character
(i.e. code 11.)</p>
</li>
</ul>
<p class="versionadded">
<span class="versionmodified">New in version 1.9.0.</span></p>
<ul class="simple">
<li><tt class="docutils literal"><span class="pre">s</span></tt> allows the dot (e.g. <tt class="docutils literal"><span class="pre">.</span></tt>) character to match all
characters <em>including</em> newline characters.</li>
</ul>
<p><a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> only provides the <tt class="docutils literal"><span class="pre">i</span></tt> and <tt class="docutils literal"><span class="pre">m</span></tt> options in the
short JavaScript syntax (i.e. <tt class="docutils literal"><span class="pre">/acme.*corp/i</span></tt>). To use <tt class="docutils literal"><span class="pre">x</span></tt>
and <tt class="docutils literal"><span class="pre">s</span></tt> you must use the &#8220;<a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a>&#8221; operator with the
&#8220;<a class="reference internal" href="#_S_options" title="$options"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$options</span></tt></a>&#8221; syntax.</p>
</dd></dl>

<p>To combine a regular expression match with other operators, you
need to specify the &#8220;<a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a>&#8221; operator. For example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">$regex</span><span class="o">:</span> <span class="sr">/acme.*corp/i</span><span class="p">,</span> <span class="nx">$nin</span><span class="o">:</span> <span class="p">[</span> <span class="s1">&#39;acmeblahcorp&#39;</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This expression returns all instances of <tt class="docutils literal"><span class="pre">field</span></tt> in
<tt class="docutils literal"><span class="pre">collection</span></tt> that match the case insensitive regular expression
<tt class="docutils literal"><span class="pre">acme.*corp</span></tt> that <em>don&#8217;t</em> match <tt class="docutils literal"><span class="pre">acmeblahcorp</span></tt>.</p>
<p><a class="reference internal" href="#_S_regex" title="$regex"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$regex</span></tt></a> uses <a class="reference internal" href="../glossary/#term-index"><em class="xref std std-term">indexes</em></a> only when the
regular expression has an anchor for the beginning (i.e. <tt class="docutils literal"><span class="pre">^</span></tt>)
of a string. Additionally, while <tt class="docutils literal"><span class="pre">/^a/</span></tt>, <tt class="docutils literal"><span class="pre">/^a.*/</span></tt>, and
<tt class="docutils literal"><span class="pre">/^a.*$/</span></tt> are equivalent, they have different performance
characteristics. All of these expressions use an index if an
appropriate index exists; however, <tt class="docutils literal"><span class="pre">/^a.*/</span></tt>, and <tt class="docutils literal"><span class="pre">/^a.*$/</span></tt>
are slower. <tt class="docutils literal"><span class="pre">/^a/</span></tt> can stop scanning after matching the prefix.</p>
</dd></dl>

</div>
<div class="section" id="geospatial">
<span id="geolocation-operators"></span><span id="geospatial-query-operators"></span><span id="query-selectors-geospatial"></span><span id="index-6"></span><h3>Geospatial<a class="headerlink" href="#geospatial" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_near">
<tt class="descname">$near</tt><a class="headerlink" href="#_S_near" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a> operator takes an argument, coordinates in
the form of <tt class="docutils literal"><span class="pre">[x,</span> <span class="pre">y]</span></tt>, and returns a list of objects sorted
by distance from those coordinates. See the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$near</span><span class="o">:</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This query will return 100 ordered records with a <tt class="docutils literal"><span class="pre">location</span></tt>
field in <tt class="docutils literal"><span class="pre">collection</span></tt>. Specify a different limit using the
<a class="reference internal" href="../method/cursor.limit/#cursor.limit" title="cursor.limit"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.limit()</span></tt></a>, or another <a class="reference internal" href="#geolocation-operators"><em>geolocation operator</em></a>, or a non-geospatial operator to limit the
results of the query.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Specifying a batch size (i.e. <a class="reference internal" href="../method/cursor.batchSize/#cursor.batchSize" title="cursor.batchSize"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">batchSize()</span></tt></a>) in conjunction with queries that use the
<a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a> is not defined. See <a class="reference external" href="https://jira.mongodb.org/browse/SERVER-5236">SERVER-5236</a> for
more information.</p>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_within">
<tt class="descname">$within</tt><a class="headerlink" href="#_S_within" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator allows you to select items that exist
within a shape on a coordinate system for <a class="reference internal" href="../glossary/#term-geospatial"><em class="xref std std-term">geospatial</em></a> queries. This operator uses the
following syntax:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">shape</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Replace <tt class="docutils literal"><span class="pre">{</span> <span class="pre">shape</span> <span class="pre">}</span></tt> with a document that describes a shape. The
<a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> command supports three shapes. These shapes and the
relevant expressions follow:</p>
<ul>
<li><p class="first">Rectangles. Use the <a class="reference internal" href="#_S_box" title="$box"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$box</span></tt></a> operator, consider the following
variable and <a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$box</span><span class="o">:</span> <span class="p">[[</span><span class="mi">100</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">120</span><span class="p">,</span><span class="mi">100</span><span class="p">]]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here a box, <tt class="docutils literal"><span class="pre">[[100,120],</span> <span class="pre">[100,0]]</span></tt> describes the parameter
for the query. As a minimum, you must specify the lower-left and
upper-right corners of the box.</p>
</li>
<li><p class="first">Circles. Use the <a class="reference internal" href="#_S_center" title="$center"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$center</span></tt></a> operator. Specify circles in the following form:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$center</span><span class="o">:</span> <span class="p">[</span> <span class="nx">center</span><span class="p">,</span> <span class="nx">radius</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
</li>
<li><p class="first">Polygons. Use the <a class="reference internal" href="#_S_polygon" title="$polygon"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$polygon</span></tt></a> operator. Specify polygons with an array of points. See the
following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$polygon</span><span class="o">:</span> <span class="p">[[</span><span class="mi">100</span><span class="p">,</span><span class="mi">120</span><span class="p">],</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">],</span> <span class="p">[</span><span class="mi">120</span><span class="p">,</span><span class="mi">100</span><span class="p">],</span> <span class="p">[</span><span class="mi">240</span><span class="p">,</span><span class="mi">200</span><span class="p">]]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>The last point of a polygon is implicitly connected to the first
point.</p>
</li>
</ul>
<p>All shapes include the border of the shape as part of the shape,
although this is subject to the imprecision of floating point
numbers.</p>
<p>Use <a class="reference internal" href="#_S_uniqueDocs" title="$uniqueDocs"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$uniqueDocs</span></tt></a> to control whether documents with
many location fields show up multiple times when more than one
of its fields match the query.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
<dl class="operator">
<dt id="_S_box">
<tt class="descname">$box</tt><a class="headerlink" href="#_S_box" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.4.</span></p>
<p>The <a class="reference internal" href="#_S_box" title="$box"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$box</span></tt></a> operator specifies a rectangular shape for the
<a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator in <a class="reference internal" href="../glossary/#term-geospatial"><em class="xref std std-term">geospatial</em></a> queries. To use
the <a class="reference internal" href="#_S_box" title="$box"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$box</span></tt></a> operator, you must specify the bottom left and
top right corners of the rectangle in an array object. Consider the
following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$box</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This will return all the documents that are within the box having
points at: <tt class="docutils literal"><span class="pre">[0,0]</span></tt>, <tt class="docutils literal"><span class="pre">[0,100]</span></tt>, <tt class="docutils literal"><span class="pre">[100,0]</span></tt>, and <tt class="docutils literal"><span class="pre">[100,100]</span></tt>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_polygon">
<tt class="descname">$polygon</tt><a class="headerlink" href="#_S_polygon" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.9.</span></p>
<p>Use <a class="reference internal" href="#_S_polygon" title="$polygon"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$polygon</span></tt></a> to specify a polygon for a bounded query
using the <a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator for <a class="reference internal" href="../glossary/#term-geospatial"><em class="xref std std-term">geospatial</em></a>
queries. To define the polygon, you must specify an array of
coordinate points, as in the following:</p>
<blockquote>
<div>[ [ x1,y1 ], [x2,y2], [x3,y3] ]</div></blockquote>
<p>The last point specified is always implicitly connected to the
first. You can specify as many points, and therefore sides, as you
like. Consider the following bounded query for documents with
coordinates within a polygon:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$polygon</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>  <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_center">
<tt class="descname">$center</tt><a class="headerlink" href="#_S_center" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.4.</span></p>
<p>This specifies a circle shape for the <a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator
in <a class="reference internal" href="../glossary/#term-geospatial"><em class="xref std std-term">geospatial</em></a> queries. To define the bounds of a query
using <a class="reference internal" href="#_S_center" title="$center"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$center</span></tt></a>, you must specify:</p>
<blockquote>
<div><ul class="simple">
<li>the center point, and</li>
<li>the radius</li>
</ul>
</div></blockquote>
<p>Considering the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$within</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$center</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="mi">10</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>The above command returns all the documents that fall within a
10 unit radius of the point <tt class="docutils literal"><span class="pre">[0,0]</span></tt>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_uniqueDocs">
<tt class="descname">$uniqueDocs</tt><a class="headerlink" href="#_S_uniqueDocs" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 2.0.</span></p>
<p>For <a class="reference internal" href="../glossary/#term-geospatial"><em class="xref std std-term">geospatial</em></a> queries, MongoDB may return a single
document more than once for a single query, because geospatial
indexes may include multiple coordinate pairs in a single
document, and therefore return the same document more than once.</p>
<p>The <a class="reference internal" href="#_S_uniqueDocs" title="$uniqueDocs"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$uniqueDocs</span></tt></a> operator inverts the default behavior
of the <a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator. By default, the
<a class="reference internal" href="#_S_within" title="$within"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$within</span></tt></a> operator returns the document only once. If you
specify a value of <tt class="docutils literal"><span class="pre">false</span></tt> for <a class="reference internal" href="#_S_uniqueDocs" title="$uniqueDocs"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$uniqueDocs</span></tt></a>, MongoDB
will return multiple instances of a single document.</p>
<div class="admonition-example admonition">
<p class="first admonition-title">Example</p>
<p>Given an <tt class="docutils literal"><span class="pre">addressBook</span></tt> collection with a document in the following form:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">addresses</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Home&quot;</span><span class="p">,</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">[</span><span class="mf">55.5</span><span class="p">,</span> <span class="mf">42.3</span><span class="p">]</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Work&quot;</span><span class="p">,</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">[</span><span class="mf">32.3</span><span class="p">,</span> <span class="mf">44.2</span><span class="p">]</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
<p>The following query would return the same document multiple
times:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">addressBook</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;addresses.loc&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$within&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$box&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span> <span class="p">],</span> <span class="nx">$uniqueDocs</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The following query would return each matching document, only
once:</p>
<div class="last highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">addressBook</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="s2">&quot;address.loc&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$within&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;$box&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">]</span> <span class="p">],</span> <span class="nx">$uniqueDocs</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
</div>
<p>You cannot specify <a class="reference internal" href="#_S_uniqueDocs" title="$uniqueDocs"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$uniqueDocs</span></tt></a> with <a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a>
or haystack queries.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

</dd></dl>

<dl class="operator">
<dt id="_S_maxDistance">
<tt class="descname">$maxDistance</tt><a class="headerlink" href="#_S_maxDistance" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_maxDistance" title="$maxDistance"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$maxDistance</span></tt></a> operator specifies an upper bound to limit
the results of a geolocation query. See below, where the
<a class="reference internal" href="#_S_maxDistance" title="$maxDistance"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$maxDistance</span></tt></a> operator narrows the results of the
<a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a> query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">location</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$near</span><span class="o">:</span> <span class="p">[</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">],</span> <span class="nx">$maxDistance</span><span class="o">:</span> <span class="mi">10</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This query will return documents with <tt class="docutils literal"><span class="pre">location</span></tt> fields from
<tt class="docutils literal"><span class="pre">collection</span></tt> that have values with a distance of 5 or fewer units
from the point <tt class="docutils literal"><span class="pre">[100,100]</span></tt>. <a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a> returns results
ordered by their distance from <tt class="docutils literal"><span class="pre">[100,100]</span></tt>. This operation will
return the first 100 results unless you modify the query with the
<a class="reference internal" href="../method/cursor.limit/#cursor.limit" title="cursor.limit"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.limit()</span></tt></a> method.</p>
<p>Specify the value of the <a class="reference internal" href="#_S_maxDistance" title="$maxDistance"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$maxDistance</span></tt></a> argument in the
same units as the document coordinate system.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_nearSphere">
<tt class="descname">$nearSphere</tt><a class="headerlink" href="#_S_nearSphere" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.8.</span></p>
<p>The <a class="reference internal" href="#_S_nearSphere" title="$nearSphere"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nearSphere</span></tt></a> operator is the spherical equivalent of
the <a class="reference internal" href="#_S_near" title="$near"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$near</span></tt></a> operator. <a class="reference internal" href="#_S_nearSphere" title="$nearSphere"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$nearSphere</span></tt></a> returns all
documents near a point, calculating distances using spherical geometry.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$nearSphere</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_centerSphere">
<tt class="descname">$centerSphere</tt><a class="headerlink" href="#_S_centerSphere" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.8.</span></p>
<p>The <a class="reference internal" href="#_S_centerSphere" title="$centerSphere"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$centerSphere</span></tt></a> operator is the spherical equivalent
of the <a class="reference internal" href="#_S_center" title="$center"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$center</span></tt></a> operator. <a class="reference internal" href="#_S_centerSphere" title="$centerSphere"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$centerSphere</span></tt></a> uses
spherical geometry to calculate distances in a circle specified by
a point and radius.</p>
<p>Considering the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">loc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$centerSphere</span><span class="o">:</span> <span class="p">{</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span> <span class="mi">10</span> <span class="o">/</span> <span class="mi">3959</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This query will return all documents within a 10 mile radius of
<tt class="docutils literal"><span class="pre">[0,0]</span></tt> using a spherical geometry to calculate distances.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">A geospatial index <em>must</em> exist on a field holding coordinates
before using any of the geolocation query operators.</p>
</div>
</dd></dl>

</div>
<div class="section" id="array">
<span id="query-selectors-array"></span><span id="index-7"></span><h3>Array<a class="headerlink" href="#array" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_size">
<tt class="descname">$size</tt><a class="headerlink" href="#_S_size" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_size" title="$size"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$size</span></tt></a> operator matches any array with the number of
elements specified by the argument. For example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$size</span><span class="o">:</span> <span class="mi">2</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>returns all documents in <tt class="docutils literal"><span class="pre">collection</span></tt> where <tt class="docutils literal"><span class="pre">field</span></tt> is an array
with 2 elements. For instance, the above expression will
return <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">[</span> <span class="pre">red,</span> <span class="pre">green</span> <span class="pre">]</span> <span class="pre">}</span></tt> and <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">[</span> <span class="pre">apple,</span>
<span class="pre">lime</span> <span class="pre">]</span> <span class="pre">}</span></tt> but <em>not</em> <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">fruit</span> <span class="pre">}</span></tt> or <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">[</span>
<span class="pre">orange,</span> <span class="pre">lemon,</span> <span class="pre">grapefruit</span> <span class="pre">]</span> <span class="pre">}</span></tt>. To match fields with only one
element within an array use <a class="reference internal" href="#_S_size" title="$size"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$size</span></tt></a> with a value of 1, as
follows:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$size</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p><a class="reference internal" href="#_S_size" title="$size"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$size</span></tt></a> does not accept ranges of values. To select
documents based on fields with different numbers of elements,
create a counter field that you increment when you add elements to
a field.</p>
<p>Queries cannot use indexes for the <a class="reference internal" href="#_S_size" title="$size"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$size</span></tt></a> portion of a
query, although the other portions of a query can use indexes if
applicable.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_elemMatch">
<tt class="descname">$elemMatch</tt><a class="headerlink" href="#_S_elemMatch" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.4.</span></p>
<p>The <a class="reference internal" href="../projection/elemMatch/#_S_elemMatch" title="$elemMatch"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$elemMatch</span></tt></a> operator matches more than one component within
an array element. For example,</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">array</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$elemMatch</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value1</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">value2</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$gt</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>returns all documents in <tt class="docutils literal"><span class="pre">collection</span></tt> where the array <tt class="docutils literal"><span class="pre">array</span></tt>
satisfies all of the conditions in the <a class="reference internal" href="../projection/elemMatch/#_S_elemMatch" title="$elemMatch"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$elemMatch</span></tt></a>
expression, or where the value of <tt class="docutils literal"><span class="pre">value1</span></tt> is 1 and the value of
<tt class="docutils literal"><span class="pre">value2</span></tt> is greater than 1. Matching arrays must have at least one element
that matches all specified criteria. Therefore, the following
document would not match the above query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">array</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">value1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span> <span class="nx">value2</span><span class="o">:</span><span class="mi">0</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">value1</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span> <span class="nx">value2</span><span class="o">:</span><span class="mi">2</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
<p>while the following document would match this query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">array</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">value1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span> <span class="nx">value2</span><span class="o">:</span><span class="mi">0</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">value1</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span> <span class="nx">value2</span><span class="o">:</span><span class="mi">2</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
</dd></dl>

<span class="target" id="index-8"></span></div>
</div>
<div class="section" id="update">
<span id="update-operators"></span><span id="index-9"></span><h2>Update<a class="headerlink" href="#update" title="Permalink to this headline">¶</a></h2>
<div class="section" id="fields">
<span id="update-operators-fields"></span><span id="operators-update-fields"></span><span id="index-10"></span><h3>Fields<a class="headerlink" href="#fields" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_set">
<tt class="descname">$set</tt><a class="headerlink" href="#_S_set" title="Permalink to this definition">¶</a></dt>
<dd><p>Use the <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a> operator to set a particular value. The
<a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a> operator requires the following syntax:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field1</span><span class="o">:</span> <span class="nx">value2</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This statement updates in the document in <tt class="docutils literal"><span class="pre">collection</span></tt> where
<tt class="docutils literal"><span class="pre">field</span></tt> matches <tt class="docutils literal"><span class="pre">value1</span></tt> by replacing the value of the field
<tt class="docutils literal"><span class="pre">field1</span></tt> with <tt class="docutils literal"><span class="pre">value2</span></tt>. This operator will add the specified
field or fields if they do not exist in this document <em>or</em> replace
the existing value of the specified field(s) if they already exist.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_unset">
<tt class="descname">$unset</tt><a class="headerlink" href="#_S_unset" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_unset" title="$unset"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$unset</span></tt></a> operator deletes a particular field. Consider the
following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$unset</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field1</span><span class="o">:</span> <span class="s2">&quot;&quot;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>The above example deletes <tt class="docutils literal"><span class="pre">field1</span></tt> in <tt class="docutils literal"><span class="pre">collection</span></tt> from
documents where <tt class="docutils literal"><span class="pre">field</span></tt> has a value of <tt class="docutils literal"><span class="pre">value1</span></tt>. The value of
specified for the value of the field in the <a class="reference internal" href="#_S_unset" title="$unset"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$unset</span></tt></a> statement
(i.e. <tt class="docutils literal"><span class="pre">&quot;&quot;</span></tt> above,) does not impact the operation.</p>
<p>If documents match the initial query (e.g. <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value1</span> <span class="pre">}</span></tt>
above) but do not have the field specified in the <a class="reference internal" href="#_S_unset" title="$unset"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$unset</span></tt></a>
operation, (e.g. <tt class="docutils literal"><span class="pre">field1</span></tt>) there the statement has no effect on
the document.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_inc">
<tt class="descname">$inc</tt><a class="headerlink" href="#_S_inc" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_inc" title="$inc"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$inc</span></tt></a> operator increments a value by a specified
amount if field is present in the document. If the field does not
exist, <a class="reference internal" href="#_S_inc" title="$inc"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$inc</span></tt></a> sets field to the number value. For
example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$inc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field1</span><span class="o">:</span> <span class="nx">amount</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>In this example, for documents in <tt class="docutils literal"><span class="pre">collection</span></tt> where
<tt class="docutils literal"><span class="pre">field</span></tt> has the value <tt class="docutils literal"><span class="pre">value</span></tt>, the value of <tt class="docutils literal"><span class="pre">field1</span></tt>
increments by the value of <tt class="docutils literal"><span class="pre">amount</span></tt>. The above operation only
increments the <em>first</em> matching document <em>unless</em> you specify
multi-update:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">20</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$inc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;John&quot;</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$inc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">age</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>In the first example all documents that have an <tt class="docutils literal"><span class="pre">age</span></tt> field with
the value of <tt class="docutils literal"><span class="pre">20</span></tt>, the operation increases <tt class="docutils literal"><span class="pre">age</span></tt> field by
one. In the second example, in all documents where the <tt class="docutils literal"><span class="pre">name</span></tt>
field has a value of <tt class="docutils literal"><span class="pre">John</span></tt> the operation increases the value
of the <tt class="docutils literal"><span class="pre">age</span></tt> field by one.</p>
<p><a class="reference internal" href="#_S_inc" title="$inc"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$inc</span></tt></a> accepts positive and negative incremental amounts.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_rename">
<tt class="descname">$rename</tt><a class="headerlink" href="#_S_rename" title="Permalink to this definition">¶</a></dt>
<dd><p class="versionadded">
<span class="versionmodified">New in version 1.7.2.</span></p>
<p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{$rename:</span> <span class="pre">{</span> <span class="pre">&lt;old</span> <span class="pre">name1&gt;:</span> <span class="pre">&lt;new</span> <span class="pre">name1&gt;,</span> <span class="pre">&lt;old</span> <span class="pre">name2&gt;:</span> <span class="pre">&lt;new</span> <span class="pre">name2&gt;,</span> <span class="pre">...</span> <span class="pre">}</span> <span class="pre">}</span></tt></p>
<p>The <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator updates the name of a field. The
new field name must differ from the existing field name.</p>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;nickname&#39;</span><span class="o">:</span> <span class="s1">&#39;alias&#39;</span><span class="p">,</span> <span class="s1">&#39;cell&#39;</span><span class="o">:</span> <span class="s1">&#39;mobile&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation renames the field <tt class="docutils literal"><span class="pre">nickname</span></tt> to <tt class="docutils literal"><span class="pre">alias</span></tt>, and the
field <tt class="docutils literal"><span class="pre">cell</span></tt> to <tt class="docutils literal"><span class="pre">mobile</span></tt>.</p>
<p>If the document already has a field with the <em>new</em> field name, the
<a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator removes that field and renames the
field with the <em>old</em> field name to the <em>new</em> field name.</p>
<p>The <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator will expand arrays and
sub-documents to find a match for field names. When renaming a field
in a sub-document to another sub-document or to a regular field, the
sub-document itself remains.</p>
<p>Consider the following examples involving the sub-document of the
following document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;alias&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;The American Cincinnatus&quot;</span><span class="p">,</span> <span class="s2">&quot;The American Fabius&quot;</span> <span class="p">],</span>
  <span class="s2">&quot;mobile&quot;</span><span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;nmae&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;first&quot;</span> <span class="o">:</span> <span class="s2">&quot;george&quot;</span><span class="p">,</span> <span class="s2">&quot;last&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<ul>
<li><p class="first">To rename a sub-document, call the <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator
with the name of the sub-document as you would any other field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;nmae&quot;</span><span class="o">:</span> <span class="s2">&quot;name&quot;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation renames the sub-document <tt class="docutils literal"><span class="pre">nmae</span></tt> to <tt class="docutils literal"><span class="pre">name</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;alias&quot;</span><span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;The American Cincinnatus&quot;</span><span class="p">,</span> <span class="s2">&quot;The American Fabius&quot;</span> <span class="p">],</span>
  <span class="s2">&quot;mobile&quot;</span><span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;first&quot;</span> <span class="o">:</span> <span class="s2">&quot;george&quot;</span><span class="p">,</span> <span class="s2">&quot;last&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">To rename a field within a sub-document, call the
<a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator using the <a class="reference external" href="http://www.mongodb.org/display/DOCS/Dot+Notation+(Reaching+into+Objects)">dot notation</a> to refer to the field.
Include the name of the sub-document in the new field name to
ensure the field remains in the sub-document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;name.first&quot;</span><span class="o">:</span> <span class="s2">&quot;name.fname&quot;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation renames the sub-document field <tt class="docutils literal"><span class="pre">first</span></tt> to <tt class="docutils literal"><span class="pre">fname</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;alias&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;The American Cincinnatus&quot;</span><span class="p">,</span> <span class="s2">&quot;The American Fabius&quot;</span> <span class="p">],</span>
  <span class="s2">&quot;mobile&quot;</span> <span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;fname&quot;</span> <span class="o">:</span> <span class="s2">&quot;george&quot;</span><span class="p">,</span> <span class="s2">&quot;last&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">To rename a field within a sub-document and move it to another
sub-document, call the <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator using the
<a class="reference external" href="http://www.mongodb.org/display/DOCS/Dot+Notation+(Reaching+into+Objects)">dot notation</a> to
refer to the field. Include the name of the new sub-document in
the <tt class="docutils literal"><span class="pre">new</span> <span class="pre">name</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;name.last&quot;</span><span class="o">:</span> <span class="s2">&quot;contact.lname&quot;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation renames the sub-document field <tt class="docutils literal"><span class="pre">last</span></tt> to <tt class="docutils literal"><span class="pre">lname</span></tt> and
moves it to the sub-document <tt class="docutils literal"><span class="pre">contact</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;alias&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;The American Cincinnatus&quot;</span><span class="p">,</span> <span class="s2">&quot;The American Fabius&quot;</span> <span class="p">],</span>
  <span class="s2">&quot;contact&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;lname&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">},</span>
  <span class="s2">&quot;mobile&quot;</span> <span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;fname&quot;</span> <span class="o">:</span> <span class="s2">&quot;george&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If the new field name does not include a sub-document name, the
field moves out of the subdocument and becomes a regular document
field.</p>
</li>
</ul>
<p>Consider the following behavior when the specified old field name
does not exist:</p>
<ul>
<li><p class="first">When renaming a single field and the existing field name refers to a
non-existing field, the <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator does
nothing, as in the following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;wife&#39;</span><span class="o">:</span> <span class="s1">&#39;spouse&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation does nothing because there is no field named
<tt class="docutils literal"><span class="pre">wife</span></tt>.</p>
</li>
<li><p class="first">When renaming multiple fields and <strong>all</strong> of the old field names
refer to non-existing fields, the <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator
does nothing, as in the following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;wife&#39;</span><span class="o">:</span> <span class="s1">&#39;spouse&#39;</span><span class="p">,</span>
                                             <span class="s1">&#39;vice&#39;</span><span class="o">:</span> <span class="s1">&#39;vp&#39;</span><span class="p">,</span>
                                             <span class="s1">&#39;office&#39;</span><span class="o">:</span> <span class="s1">&#39;term&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation does nothing because there are no fields named
<tt class="docutils literal"><span class="pre">wife</span></tt>, <tt class="docutils literal"><span class="pre">vice</span></tt>, and <tt class="docutils literal"><span class="pre">office</span></tt>.</p>
</li>
<li><p class="first">When renaming multiple fields and <strong>some</strong> but not all old field
names refer to non-existing fields, the <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a>
operator performs the following operations:</p>
<p class="versionchanged">
<span class="versionmodified">Changed in version 2.2.</span></p>
<ul class="simple">
<li>Renames the fields that exist to the specified new field names.</li>
<li>Ignores the non-existing fields.</li>
</ul>
<p>Consider the following query that renames both an existing field
<tt class="docutils literal"><span class="pre">mobile</span></tt> and a non-existing field <tt class="docutils literal"><span class="pre">wife</span></tt>. The field named
<tt class="docutils literal"><span class="pre">wife</span></tt> does not exist and <a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> sets the field to
a name that already exists <tt class="docutils literal"><span class="pre">alias</span></tt>.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;wife&#39;</span><span class="o">:</span> <span class="s1">&#39;alias&#39;</span><span class="p">,</span>
                                             <span class="s1">&#39;mobile&#39;</span><span class="o">:</span> <span class="s1">&#39;cell&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation renames the <tt class="docutils literal"><span class="pre">mobile</span></tt> field to <tt class="docutils literal"><span class="pre">cell</span></tt>, and has
no other impact
action occurs.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;alias&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;The American Cincinnatus&quot;</span><span class="p">,</span> <span class="s2">&quot;The American Fabius&quot;</span> <span class="p">],</span>
  <span class="s2">&quot;cell&quot;</span> <span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;lname&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">},</span>
  <span class="s2">&quot;places&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;d&quot;</span> <span class="o">:</span> <span class="s2">&quot;Mt Vernon&quot;</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span> <span class="o">:</span> <span class="s2">&quot;Colonial Beach&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>Before version 2.2, when renaming multiple fields and only some (but
not all) old field names refer to non-existing fields:</p>
<ul class="simple">
<li>For the fields with the old names that do exist, the
<a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator renames these fields to the
specified new field names.</li>
<li>For the fields with the old names that do <strong>not</strong> exist:<ul>
<li><strong>if</strong> no field exists with the new field name, the
<a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator does nothing.</li>
<li><strong>if</strong> fields already exist with the new field names, the
<a class="reference internal" href="#_S_rename" title="$rename"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$rename</span></tt></a> operator drops these fields.</li>
</ul>
</li>
</ul>
<p>Consider the following operation that renames both the field
<tt class="docutils literal"><span class="pre">mobile</span></tt>, which exists, and the field <tt class="docutils literal"><span class="pre">wife</span></tt>, which does
not exist. The operation tries to set the field named <tt class="docutils literal"><span class="pre">wife</span></tt>
to <tt class="docutils literal"><span class="pre">alias</span></tt>, which is the name of an existing field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$rename</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;wife&#39;</span><span class="o">:</span> <span class="s1">&#39;alias&#39;</span><span class="p">,</span> <span class="s1">&#39;mobile&#39;</span><span class="o">:</span> <span class="s1">&#39;cell&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Before 2.2, the operation renames the field <tt class="docutils literal"><span class="pre">mobile</span></tt> to
<tt class="docutils literal"><span class="pre">cell</span></tt> <em>and</em> drops the <tt class="docutils literal"><span class="pre">alias</span></tt> field even though the field
<tt class="docutils literal"><span class="pre">wife</span></tt> does not exist:</p>
<div class="last highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">&quot;cell&quot;</span> <span class="o">:</span> <span class="s2">&quot;555-555-5555&quot;</span><span class="p">,</span>
  <span class="s2">&quot;name&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;lname&quot;</span> <span class="o">:</span> <span class="s2">&quot;washington&quot;</span> <span class="p">},</span>
  <span class="s2">&quot;places&quot;</span> <span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;d&quot;</span> <span class="o">:</span> <span class="s2">&quot;Mt Vernon&quot;</span><span class="p">,</span> <span class="s2">&quot;b&quot;</span> <span class="o">:</span> <span class="s2">&quot;Colonial Beach&quot;</span> <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
</li>
</ul>
</dd></dl>

</div>
<div class="section" id="update-operators-array">
<span id="operators-update-array"></span><span id="index-11"></span><span id="id2"></span><h3>Array<a class="headerlink" href="#update-operators-array" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_">
<tt class="descname">$</tt><a class="headerlink" href="#_S_" title="Permalink to this definition">¶</a></dt>
<dd><p><em>Syntax</em>: <tt class="docutils literal"><span class="pre">{</span> <span class="pre">&quot;&lt;array&gt;.$&quot;</span> <span class="pre">:</span> <span class="pre">value</span> <span class="pre">}</span></tt></p>
<p>The positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator identifies an element in an
<tt class="docutils literal"><span class="pre">array</span></tt> field to update without explicitly specifying the position
of the element in the array. The positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator,
when used with the <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a> method and acts as a placeholder for the
<strong>first match</strong> of the update <tt class="docutils literal"><span class="pre">query</span> <span class="pre">selector</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="o">&lt;</span><span class="nx">query</span> <span class="nx">selector</span><span class="o">&gt;</span> <span class="p">},</span> <span class="p">{</span> <span class="o">&lt;</span><span class="nx">update</span> <span class="nx">operator</span><span class="o">&gt;:</span> <span class="p">{</span> <span class="s2">&quot;array.$&quot;</span> <span class="o">:</span> <span class="nx">value</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The <tt class="docutils literal"><span class="pre">array</span></tt> field <strong>must</strong> appear as part of the <tt class="docutils literal"><span class="pre">query</span> <span class="pre">selector</span></tt>.</p>
<p>Consider the following collection <tt class="docutils literal"><span class="pre">students</span></tt> with the following documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;grades&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">85</span><span class="p">,</span> <span class="mi">90</span> <span class="p">]</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;grades&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="mi">88</span><span class="p">,</span> <span class="mi">90</span><span class="p">,</span> <span class="mi">92</span> <span class="p">]</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s2">&quot;grades&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="mi">85</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">90</span> <span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
<p>To update <tt class="docutils literal"><span class="pre">80</span></tt> to <tt class="docutils literal"><span class="pre">82</span></tt> in the <tt class="docutils literal"><span class="pre">grades</span></tt> array in the
first document, use the positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator if
you do not know the position of the element in the array:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">grades</span><span class="o">:</span> <span class="mi">80</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;grades.$&quot;</span> <span class="o">:</span> <span class="mi">82</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Remember that the positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator acts as a
placeholder for the <strong>first match</strong> of the update <tt class="docutils literal"><span class="pre">query</span> <span class="pre">selector</span></tt>.</p>
<p>The positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator facilitates updates to arrays
that contain embedded documents. Use the positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a>
operator to access the fields in the embedded documents with the
<a class="reference external" href="http://www.mongodb.org/display/DOCS/Dot+Notation+(Reaching+into+Objects)">dot notation</a> on the
<a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="o">&lt;</span><span class="nx">query</span> <span class="nx">selector</span><span class="o">&gt;</span> <span class="p">},</span> <span class="p">{</span> <span class="o">&lt;</span><span class="nx">update</span> <span class="nx">operator</span><span class="o">&gt;:</span> <span class="p">{</span> <span class="s2">&quot;array.$.field&quot;</span> <span class="o">:</span> <span class="nx">value</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Consider the following document in the <tt class="docutils literal"><span class="pre">students</span></tt> collection whose
<tt class="docutils literal"><span class="pre">grades</span></tt> field value is an array of embedded documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s2">&quot;grades&quot;</span> <span class="o">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nx">grade</span><span class="o">:</span> <span class="mi">80</span><span class="p">,</span> <span class="nx">mean</span><span class="o">:</span> <span class="mi">75</span><span class="p">,</span> <span class="nx">std</span><span class="o">:</span> <span class="mi">8</span> <span class="p">},</span>
                          <span class="p">{</span> <span class="nx">grade</span><span class="o">:</span> <span class="mi">85</span><span class="p">,</span> <span class="nx">mean</span><span class="o">:</span> <span class="mi">90</span><span class="p">,</span> <span class="nx">std</span><span class="o">:</span> <span class="mi">5</span> <span class="p">},</span>
                          <span class="p">{</span> <span class="nx">grade</span><span class="o">:</span> <span class="mi">90</span><span class="p">,</span> <span class="nx">mean</span><span class="o">:</span> <span class="mi">85</span><span class="p">,</span> <span class="nx">std</span><span class="o">:</span> <span class="mi">3</span> <span class="p">}</span> <span class="p">]</span> <span class="p">}</span>
</pre></div>
</div>
<p>Use the positional <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator to update the value of the
<tt class="docutils literal"><span class="pre">std</span></tt> field in the embedded document with the <tt class="docutils literal"><span class="pre">grade</span></tt> of <tt class="docutils literal"><span class="pre">85</span></tt>:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">students</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s2">&quot;grades.grade&quot;</span><span class="o">:</span> <span class="mi">85</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;grades.$.std&quot;</span> <span class="o">:</span> <span class="mi">6</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Consider the following behaviors when using the positional
<a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator:</p>
<ul class="simple">
<li>Do not use the positional operator <a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> with
<a class="reference internal" href="../glossary/#term-upsert"><em class="xref std std-term">upsert</em></a> operations because, inserts will use the <tt class="docutils literal"><span class="pre">$</span></tt> as a field name
in the inserted document.</li>
<li>When used with the <a class="reference internal" href="#_S_unset" title="$unset"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$unset</span></tt></a> operator, the positional
<a class="reference internal" href="#_S_" title="$"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$</span></tt></a> operator does not remove the matching element from
the array but rather sets it to <tt class="docutils literal"><span class="pre">null</span></tt>.</li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">update()</span></tt></a>, <a class="reference internal" href="#_S_set" title="$set"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$set</span></tt></a> and
<a class="reference internal" href="#_S_unset" title="$unset"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$unset</span></tt></a></p>
</div>
</dd></dl>

<dl class="operator">
<dt id="_S_push">
<tt class="descname">$push</tt><a class="headerlink" href="#_S_push" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> operator appends a specified value to an array. For
example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$push</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here, <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> appends <tt class="docutils literal"><span class="pre">value1</span></tt> to the array identified by
<tt class="docutils literal"><span class="pre">value</span></tt> in <tt class="docutils literal"><span class="pre">field</span></tt>. Be aware of the following behaviors:</p>
<ul class="simple">
<li>If the field specified in the <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> statement
(e.g. <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$push:</span> <span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value1</span> <span class="pre">}</span> <span class="pre">}</span></tt>) does not exist in the
matched document, the operation adds a new array with the
specified field and value (e.g. <tt class="docutils literal"><span class="pre">value1</span></tt>) to the matched
document.</li>
<li>The operation will fail if the field specified in the
<a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> statement is <em>not</em> an array. <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a>
does not fail when pushing a value to a non-existent field.</li>
<li>If <tt class="docutils literal"><span class="pre">value1</span></tt> is an array itself, <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> appends the whole array as an
element in the identified array. To add multiple items to an
array, use <a class="reference internal" href="#_S_pushAll" title="$pushAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pushAll</span></tt></a>.</li>
</ul>
</dd></dl>

<dl class="operator">
<dt id="_S_pushAll">
<tt class="descname">$pushAll</tt><a class="headerlink" href="#_S_pushAll" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_pushAll" title="$pushAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pushAll</span></tt></a> operator is similar to the <a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> but
adds the ability to append several values to an array at once.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$pushAll</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field1</span><span class="o">:</span> <span class="p">[</span> <span class="nx">value1</span><span class="p">,</span> <span class="nx">value2</span><span class="p">,</span> <span class="nx">value3</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here, <a class="reference internal" href="#_S_pushAll" title="$pushAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pushAll</span></tt></a> appends the values in <tt class="docutils literal"><span class="pre">[</span> <span class="pre">value1,</span> <span class="pre">value2,</span>
<span class="pre">value3</span> <span class="pre">]</span></tt> to the array in <tt class="docutils literal"><span class="pre">field1</span></tt> in the document
matched by the statement <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value</span> <span class="pre">}</span></tt> in <tt class="docutils literal"><span class="pre">collection</span></tt>.</p>
<p>If you specify a single value, <a class="reference internal" href="#_S_pushAll" title="$pushAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pushAll</span></tt></a> will behave as
<a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a>.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_addToSet">
<tt class="descname">$addToSet</tt><a class="headerlink" href="#_S_addToSet" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a> operator adds a value to an array only <em>if</em> the
value is <em>not</em> in the array already. If the value <em>is</em> in the
array, <a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a> returns without modifying the
array. Otherwise, <a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a> behaves the same as
<a class="reference internal" href="#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a>. Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$addToSet</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here, <a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a> appends <tt class="docutils literal"><span class="pre">value1</span></tt> to the array stored in
<tt class="docutils literal"><span class="pre">field</span></tt>, <em>only if</em> <tt class="docutils literal"><span class="pre">value1</span></tt> is not already a member of this
array.</p>
<dl class="docutils">
<dt><a class="reference internal" href="#_S_each" title="$each"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$each</span></tt></a> operator is only used with the</dt>
<dd><a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a> see the documentation of
<a class="reference internal" href="../operator/addToSet/"><em>$addToSet</em></a> for more information.</dd>
</dl>
<dl class="operator">
<dt id="_S_each">
<tt class="descname">$each</tt><a class="headerlink" href="#_S_each" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_each" title="$each"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$each</span></tt></a> operator is available within the
<a class="reference internal" href="#_S_addToSet" title="$addToSet"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$addToSet</span></tt></a>, which allows you to add multiple values
to the array if they do not exist in the <tt class="docutils literal"><span class="pre">field</span></tt> array in a
single operation. Consider the following prototype:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$addToSet</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$each</span> <span class="o">:</span> <span class="p">[</span> <span class="nx">value1</span><span class="p">,</span> <span class="nx">value2</span><span class="p">,</span> <span class="nx">value3</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
</dd></dl>

</dd></dl>

<dl class="operator">
<dt id="_S_pop">
<tt class="descname">$pop</tt><a class="headerlink" href="#_S_pop" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_pop" title="$pop"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pop</span></tt></a> operator removes the first or last element of an
array. Pass <a class="reference internal" href="#_S_pop" title="$pop"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pop</span></tt></a> a value of <tt class="docutils literal"><span class="pre">1`</span></tt> to remove the last element
in an array and a value of <tt class="docutils literal"><span class="pre">-1</span></tt> to remove the first element of an
array. Consider the following syntax:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span><span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$pop</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This operation removes the last item of the array in <tt class="docutils literal"><span class="pre">field</span></tt>  in
the document that matches the query statement <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value</span>
<span class="pre">}</span></tt>. The following example removes the <em>first</em> item of the same
array:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span><span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$pop</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Be aware of the following <a class="reference internal" href="#_S_pop" title="$pop"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pop</span></tt></a> behaviors:</p>
<ul class="simple">
<li>The <a class="reference internal" href="#_S_pop" title="$pop"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pop</span></tt></a> operation fails if <tt class="docutils literal"><span class="pre">field</span></tt> is not an
array.</li>
<li><a class="reference internal" href="#_S_pop" title="$pop"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pop</span></tt></a> will successfully remove the last item in an
array. <tt class="docutils literal"><span class="pre">field</span></tt> will then hold an empty array.</li>
</ul>
<p class="versionadded">
<span class="versionmodified">New in version 1.1.</span></p>
</dd></dl>

<dl class="operator">
<dt id="_S_pull">
<tt class="descname">$pull</tt><a class="headerlink" href="#_S_pull" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_pull" title="$pull"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pull</span></tt></a> operator removes all instances of a value
from an existing array. Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$pull</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p><a class="reference internal" href="#_S_pull" title="$pull"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pull</span></tt></a> removes the value <tt class="docutils literal"><span class="pre">value1</span></tt> from the array in <tt class="docutils literal"><span class="pre">field</span></tt>,
in the document that matches the query statement <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value</span>
<span class="pre">}</span></tt> in <tt class="docutils literal"><span class="pre">collection</span></tt>. If <tt class="docutils literal"><span class="pre">value1</span></tt> existed multiple times in the
<tt class="docutils literal"><span class="pre">field</span></tt> array, <a class="reference internal" href="#_S_pull" title="$pull"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pull</span></tt></a> would remove all instances of
<tt class="docutils literal"><span class="pre">value1</span></tt> in this array.</p>
</dd></dl>

<dl class="operator">
<dt id="_S_pullAll">
<tt class="descname">$pullAll</tt><a class="headerlink" href="#_S_pullAll" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_pullAll" title="$pullAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pullAll</span></tt></a> operator removes multiple values from an existing
array. <a class="reference internal" href="#_S_pullAll" title="$pullAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pullAll</span></tt></a> provides the inverse operation of the
<a class="reference internal" href="#_S_pushAll" title="$pushAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pushAll</span></tt></a> operator. Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$pullAll</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field1</span><span class="o">:</span> <span class="p">[</span> <span class="nx">value1</span><span class="p">,</span> <span class="nx">value2</span><span class="p">,</span> <span class="nx">value3</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here, <a class="reference internal" href="#_S_pullAll" title="$pullAll"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$pullAll</span></tt></a> removes <tt class="docutils literal"><span class="pre">[</span> <span class="pre">value1,</span> <span class="pre">value2,</span> <span class="pre">value3</span> <span class="pre">]</span></tt> from
the array in <tt class="docutils literal"><span class="pre">field1</span></tt>, in the document that matches the
query statement <tt class="docutils literal"><span class="pre">{</span> <span class="pre">field:</span> <span class="pre">value</span> <span class="pre">}</span></tt> in <tt class="docutils literal"><span class="pre">collection</span></tt>.</p>
</dd></dl>

</div>
<div class="section" id="bitwise">
<span id="update-operators-bitwise"></span><span id="operators-update-bitwise"></span><span id="index-12"></span><h3>Bitwise<a class="headerlink" href="#bitwise" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_bit">
<tt class="descname">$bit</tt><a class="headerlink" href="#_S_bit" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="#_S_bit" title="$bit"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$bit</span></tt></a> operator performs a bitwise update of a field. Only
use this with integer fields. For example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$bit</span><span class="o">:</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="p">{</span> <span class="nx">and</span><span class="o">:</span> <span class="mi">5</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>Here, the <a class="reference internal" href="#_S_bit" title="$bit"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$bit</span></tt></a> operator updates the integer value of the field
named <tt class="docutils literal"><span class="pre">field</span></tt> with a bitwise <tt class="docutils literal"><span class="pre">and:</span> <span class="pre">5</span></tt> operation. This
operator only works with number types.</p>
</dd></dl>

</div>
<div class="section" id="isolation">
<span id="update-operators-isolation"></span><span id="operators-update-isolation"></span><span id="index-13"></span><h3>Isolation<a class="headerlink" href="#isolation" title="Permalink to this headline">¶</a></h3>
<dl class="operator">
<dt id="_S_atomic">
<tt class="descname">$atomic</tt><a class="headerlink" href="#_S_atomic" title="Permalink to this definition">¶</a></dt>
<dd><p><a class="reference internal" href="#_S_atomic" title="$atomic"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$atomic</span></tt></a> isolation operator <strong>isolates</strong> a write
operation that affect multiple documents from other write operations.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The <a class="reference internal" href="#_S_atomic" title="$atomic"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$atomic</span></tt></a> isolation operator does <strong>not</strong> provide
&#8220;all-or-nothing&#8221; atomicity for write operations.</p>
</div>
<p>Consider the following example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">foo</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field1</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">,</span> <span class="nx">$atomic</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">$inc</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">field2</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">,</span> <span class="p">{</span> <span class="nx">multi</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Without the <a class="reference internal" href="#_S_atomic" title="$atomic"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$atomic</span></tt></a> operator, multi-updates will allow
other operations to interleave with this updates. If these
interleaved operations contain writes, the update operation may
produce unexpected results. By specifying <a class="reference internal" href="#_S_atomic" title="$atomic"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$atomic</span></tt></a> you
can guarantee isolation for the entire multi-update.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">See <a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.update()</span></tt></a> for more information about the
<a class="reference internal" href="../method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.update()</span></tt></a> method.</p>
</div>
</dd></dl>

</div>
</div>
<div class="section" id="projection">
<span id="projection-operators"></span><span id="index-14"></span><h2>Projection<a class="headerlink" href="#projection" title="Permalink to this headline">¶</a></h2>
<dl class="projection">
<dt id="_S_slice">
<tt class="descname">$slice</tt><a class="headerlink" href="#_S_slice" title="Permalink to this definition">¶</a></dt>
<dd><p>The <a class="reference internal" href="../projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-projection docutils literal"><span class="pre">$slice</span></tt></a> operator controls the number of items of an array
that a query returns. Consider the following prototype query:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">field</span><span class="o">:</span> <span class="nx">value</span> <span class="p">},</span> <span class="p">{</span> <span class="nx">array</span><span class="o">:</span> <span class="p">{</span><span class="nx">$slice</span><span class="o">:</span> <span class="nx">count</span> <span class="p">}</span> <span class="p">}</span> <span class="p">);</span>
</pre></div>
</div>
<p>This operation selects the document <tt class="docutils literal"><span class="pre">collection</span></tt> identified by a
field named <tt class="docutils literal"><span class="pre">field</span></tt> that holds <tt class="docutils literal"><span class="pre">value</span></tt> and returns the number
of elements specified by the value of <tt class="docutils literal"><span class="pre">count</span></tt> from the array
stored in the <tt class="docutils literal"><span class="pre">array</span></tt> field. If <tt class="docutils literal"><span class="pre">count</span></tt> has a value greater
than the number of elements in <tt class="docutils literal"><span class="pre">array</span></tt> the query returns all
elements of the array.</p>
<p><a class="reference internal" href="../projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-projection docutils literal"><span class="pre">$slice</span></tt></a> accepts arguments in a number of formats,
including negative values and arrays. Consider the following
examples:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{},</span> <span class="p">{</span> <span class="nx">comments</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$slice</span><span class="o">:</span> <span class="mi">5</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Here, <a class="reference internal" href="../projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-projection docutils literal"><span class="pre">$slice</span></tt></a> selects the first five items in an array
in the <tt class="docutils literal"><span class="pre">comments</span></tt> field.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{},</span> <span class="p">{</span> <span class="nx">comments</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$slice</span><span class="o">:</span> <span class="o">-</span><span class="mi">5</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation returns the last five items in array.</p>
<p>The following examples specify an array as an argument to
slice. Arrays take the form of <tt class="docutils literal"><span class="pre">[</span> <span class="pre">skip</span> <span class="pre">,</span> <span class="pre">limit</span> <span class="pre">]</span></tt>, where the
first value indicates the number of items in the array to skip and
the second value indicates the number of items to return.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{},</span> <span class="p">{</span> <span class="nx">comments</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$slice</span><span class="o">:</span> <span class="p">[</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">10</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>Here, the query will only return 10 items, after skipping the first
20 items of that array.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">posts</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{},</span> <span class="p">{</span> <span class="nx">comments</span><span class="o">:</span> <span class="p">{</span> <span class="nx">$slice</span><span class="o">:</span> <span class="p">[</span> <span class="o">-</span><span class="mi">20</span><span class="p">,</span> <span class="mi">10</span> <span class="p">]</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This operation returns 10 items as well, beginning with the item
that is 20th from the last item of the array.</p>
</dd></dl>

</div>
</div>


<div id="btnv">
<ul id="btnvl">
</ul>
</div>
</div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">

<h3><a href="../../contents/">MongoDB Manual</a>
<small>(<a href="../../genindex/">Index</a>)</small>
</h3>

<ul>
<li class="toctree-l1"><a class="reference internal" href="../../about/">About MongoDB Documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../installation/">Installing MongoDB</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../replication/">Replication</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../sharding/">Sharding</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../administration/">Administration</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../security/">Security</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../crud/">CRUD</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../aggregation/">Aggregation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../indexes/">Indexes</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../applications/">Application Development</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../mongo/">Using the MongoDB Shell</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../use-cases/">Use Cases</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../faq/">Frequently Asked Questions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../">Reference</a></li>
</ul>

<h3>Formats</h3>
<ul class="this-page-menu">
  <li><a href="/master/single/">MongoDB Manual, Single HTML Page</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.pdf" rel="nofollow">MongoDB Manual, PDF Format</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.epub" rel="nofollow">MongoDB Manual, ePub Format</a></li>
</ul>

<h3>Translations</h3>
<ul class="translation-menu">
  <li><a href="http://jp.docs.mongodb.org/master/reference/operators" rel="nofollow">Japanese</a></li>
  <li><a href="http://cn.docs.mongodb.org/master/reference/operators" rel="nofollow">Chinese</a></li>
  <!-- <li><a href="http://docs.mongodb.org/master/reference/operators" rel="nofollow">English</a></li> -->
</ul>
<h3>Knowledge Base </h3>
<ul class="kb-menu">
  <li><a href="../../tutorial/">Tutorials</a></li>
  <li><a href="../../faq/">Frequently Asked Questions</a></li>
  <li><a href="../../use-cases/">Use Cases</a></li>
</ul><h3>MongoDB Wiki</h3>

<ul>
 <li><strong>Getting Started</strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Quickstart">Quickstart</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Introduction">Introduction</a></li>
     <li><a href="http://www.mongodb.org/downloads">Downloads</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart">SQL to MongoDB Mapping</a></li> -->
   </ul>
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Developer+Zone">Developer Documentation</a></strong>
   <!-- <ul> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Connections">Connections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Databases">Databases</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Collections">Collections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Documents">Documents</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS">GridFS</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Indexes">Indexes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Querying">Querying</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Aggregation">Aggregation</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Optimization">Optimization</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Inserting">Inserting</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Updating">Updating</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Removing">Removing</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/MapReduce">MapReduce</a></li> -->
   <!-- </ul> -->
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Admin+Zone">Administrative Documentation</a></strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Components">Components</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Journaling">Journaling</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Production+Notes">Production Notes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Replication">Replication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Sharding">Sharding</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Monitoring+and+Diagnostics">Monitoring and Diagnostics</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Backups">Backups</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Durability+and+Repair">Durability and Repair</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Security+and+Authentication">Security and Authentication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Starting+and+Stopping+Mongo">Starting/Stopping MongoDB</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS+Tools">GridFS Tools</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/DBA+Operations+from+the+Shell">DB Operations from the Shell</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Architecture+and+Components">Architecture and Components</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Windows">Windows</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Troubleshooting">Troubleshooting</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Community">Community and Ecosystem</a></strong>
   <ul>
     <li><a href="http://10gen.com">10gen</a></li>
     <li><a href="http://www.mongodb.org/events">MongoDB Events</a></li>
     <li><a href="http://planet.mongodb.org">Planet MongoDB</a></li>
     <li><a href="http://mongodb.org/display/DOCS/MongoDB+Masters">MongoDB Masters</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Slides+and+Video">Slides and Video</a></li>
     <!-- <li><a href="http://cookbook.mongodb.org/">Cookbook</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Hosting+Center">Hosting Center</a></li>
     <li><a href="http://mms.10gen.com/">MongoDB Monitoring Service</a> (<a href="http://mms.10gen.com/help/">docs</a>)</li>
     <li><a href="http://mongodb.org/display/DOCS/Admin+UIs">Administrative Interfaces</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/International+Docs">International Documentation</a></li> -->
     <li><a href="http://10gen.com/books/">MongoDB Books</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></strong>
   <ul>
     <li>JavaScript (<a href="http://mongodb.org/display/DOCS/Javascript+Language+Center">wiki</a>, <a href="http://api.mongodb.org/js/current">docs</a>)</li>
     <li>Python (<a href="http://mongodb.org/display/DOCS/Python+Language+Center">wiki</a>, <a href="http://api.mongodb.org/python/current">docs</a>)</li>
     <li>Ruby (<a href="http://mongodb.org/display/DOCS/Ruby+Language+Center">wiki</a>, <a href="http://api.mongodb.org/ruby/current">docs</a>)</li>
     <li>PHP (<a href="http://mongodb.org/display/DOCS/PHP+Language+Center">wiki</a>, <a href="http://php.net/mongo/">docs</a>)</li>
     <li>Perl (<a href="http://mongodb.org/display/DOCS/Perl+Language+Center">wiki</a>, <a href="http://api.mongodb.org/perl/current/">docs</a>)</li>
     <li>Java (<a href="http://mongodb.org/display/DOCS/Java+Language+Center">wiki</a>, <a href="http://api.mongodb.org/java/current">docs</a>)</li>
     <li>Scala (<a href="http://mongodb.org/display/DOCS/Scala+Language+Center">wiki</a>, <a href="http://api.mongodb.org/scala/casbah/current/">docs</a>)</li>
     <li>C# (<a href="http://mongodb.org/display/DOCS/CSharp+Language+Center">wiki</a>, <a href="http://api.mongodb.org/csharp/current/">docs</a>)</li>
     <li>C (<a href="http://mongodb.org/display/DOCS/C+Language+Center">wiki</a>, <a href="http://api.mongodb.org/c/current/">docs</a>)</li>
     <li>C++ (<a href="http://mongodb.org/pages/viewpage.action?pageId=133409">wiki</a>, <a href="http://api.mongodb.org/cplusplus/current/">docs</a>)</li>
     <li>Haskell (<a href="http://mongodb.org/display/DOCS/Haskell+Language+Center">wiki</a>, <a href="http://api.mongodb.org/haskell">docs</a>)</li>
     <li>Erlang (<a href="http://mongodb.org/display/DOCS/Erlang+Language+Center">wiki</a>, <a href="http://api.mongodb.org/erlang">docs</a>)</li>
   </ul>
 </li>
</ul>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
  <div class="footer">
        &copy; Copyright 2011-2012, 10gen, Inc.  Licensed under <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons</a>.

    <p>MongoDB&reg;, Mongo&reg;, and the leaf logo are registered trademarks of 10gen, Inc.</p>
    <p>The MongoDB Documentation Project uses <a href="https://github.com/mongodb/docs">GitHub</a>. Fork the repository and submit pull requests to contribute.</p>
    <p>If you find any issues with the documentation feel free to open a <a href="http://jira.mongodb.org/browse/DOCS">Jira Case</a> and we'll work to resolve it promptly.</p>

  </div><script type="text/javascript">
var _gaq = _gaq || [];
var pluginUrl = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.') + 'google-analytics.com/plugins/ga/inpage_linkid.js';
_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
_gaq.push(['_setAccount', 'UA-7301842-8']);
_gaq.push(['_setDomainName', 'docs.mongodb.org']);
_gaq.push(['_trackPageview']);
(function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
        })();
</script>

<script type="text/javascript">
document.write(unescape("%3Cscript src='" + document.location.protocol + "//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>try { mktoMunchkin("017-HGS-593"); } catch(e) {}</script>
  </body>
</html>