<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>FAQ: MongoDB for Application Developers &mdash; MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico" />
    <meta name="robots" content="index" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="canonical" href="http://docs.mongodb.org/master/faq/developers" />

    
    
    <link rel="stylesheet" href="../../_static/mongodb-docs.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
      
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.2',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="../../_static/jquery.js"></script>
    <script type="text/javascript" src="../../_static/underscore.js"></script>
    <script type="text/javascript" src="../../_static/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help"/>
<link rel="author" title="About these documents" href="../../about/" />
<link rel="top" title="MongoDB Manual" href="../../" />
<link rel="up" title="Frequently Asked Questions" href="../" />
<link rel="next" title="FAQ: Concurrency" href="../concurrency/" />
<link rel="prev" title="FAQ: MongoDB Fundamentals" href="../fundamentals/" />
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  </head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Events">Events</a></li>
                <li class="normal last"><a class="last" href="http://www.mongodb.org/display/DOCS/International+Documentation">International</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="../../"><img src="../../_static/logo-mongodb.png" width="190" height="55" alt="mongoDB" /></a></div>
                </div>
        </div>
<div class="search-db"><gcse:searchbox></gcse:searchbox></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/faq/developers.txt" target="_blank" title="Edit faq/developers.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails!init.jspa?pid=10380&issuetype=4&priority=4&summary=Comment+on%3a+%22faq/developers%2Etxt%22" target="_blank" title="Report a problem with faq/developers.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><gcse:searchresults></gcse:searchresults></div>
            
  <div class="section" id="faq-mongodb-for-application-developers">
<span id="faq-developers"></span><h1>FAQ: MongoDB for Application Developers<a class="headerlink" href="#faq-mongodb-for-application-developers" title="Permalink to this headline">¶</a></h1>
<p>This document answers common questions about application
development using MongoDB.</p>
<p>If you don&#8217;t find the answer you&#8217;re looking for, check
the <a class="reference internal" href="../"><em>complete list of FAQs</em></a> or post your question to the
<a class="reference external" href="https://groups.google.com/forum/?fromgroups#!forum/mongodb-user">MongoDB User Mailing List</a>.</p>
<div class="contents local topic" id="frequently-asked-questions">
<p class="topic-title first">Frequently Asked Questions:</p>
<ul class="simple">
<li><a class="reference internal" href="#what-is-a-namespace-in-mongodb" id="id3">What is a namespace in MongoDB?</a></li>
<li><a class="reference internal" href="#how-do-you-copy-all-objects-from-one-collection-to-another" id="id4">How do you copy all objects from one collection to another?</a></li>
<li><a class="reference internal" href="#if-you-remove-a-document-does-mongodb-remove-it-from-disk" id="id5">If you remove a document, does MongoDB remove it from disk?</a></li>
<li><a class="reference internal" href="#when-does-mongodb-write-updates-to-disk" id="id6">When does MongoDB write updates to disk?</a></li>
<li><a class="reference internal" href="#how-do-i-do-transactions-and-locking-in-mongodb" id="id7">How do I do transactions and locking in MongoDB?</a></li>
<li><a class="reference internal" href="#how-do-you-aggregate-data-with-mongodb" id="id8">How do you aggregate data with MongoDB?</a></li>
<li><a class="reference internal" href="#why-does-mongodb-log-so-many-connection-accepted-events" id="id9">Why does MongoDB log so many &#8220;Connection Accepted&#8221; events?</a></li>
<li><a class="reference internal" href="#does-mongodb-run-on-amazon-ebs" id="id10">Does MongoDB run on Amazon EBS?</a></li>
<li><a class="reference internal" href="#why-are-mongodb-s-data-files-so-large" id="id11">Why are MongoDB&#8217;s data files so large?</a></li>
<li><a class="reference internal" href="#how-do-i-optimize-storage-use-for-small-documents" id="id12">How do I optimize storage use for small documents?</a></li>
<li><a class="reference internal" href="#when-should-i-use-gridfs" id="id13">When should I use GridFS?</a></li>
<li><a class="reference internal" href="#how-does-mongodb-address-sql-or-query-injection" id="id14">How does MongoDB address SQL or Query injection?</a><ul>
<li><a class="reference internal" href="#bson" id="id15">BSON</a></li>
<li><a class="reference internal" href="#javascript" id="id16">JavaScript</a></li>
<li><a class="reference internal" href="#dollar-sign-operator-escaping" id="id17">Dollar Sign Operator Escaping</a></li>
<li><a class="reference internal" href="#driver-specific-issues" id="id18">Driver-Specific Issues</a></li>
</ul>
</li>
<li><a class="reference internal" href="#how-does-mongodb-provide-concurrency" id="id19">How does MongoDB provide concurrency?</a></li>
<li><a class="reference internal" href="#what-is-the-compare-order-for-bson-types" id="id20">What is the compare order for BSON types?</a></li>
<li><a class="reference internal" href="#how-do-i-query-for-fields-that-have-null-values" id="id21">How do I query for fields that have null values?</a></li>
<li><a class="reference internal" href="#are-there-any-restrictions-on-the-names-of-collections" id="id22">Are there any restrictions on the names of Collections?</a></li>
<li><a class="reference internal" href="#how-do-i-isolate-cursors-from-intervening-write-operations" id="id23">How do I isolate cursors from intervening write operations?</a></li>
<li><a class="reference internal" href="#when-should-i-embed-documents-within-other-documents" id="id24">When should I embed documents within other documents?</a></li>
</ul>
</div>
<div class="section" id="what-is-a-namespace-in-mongodb">
<span id="faq-dev-namespace"></span><h2>What is a namespace in MongoDB?<a class="headerlink" href="#what-is-a-namespace-in-mongodb" title="Permalink to this headline">¶</a></h2>
<p>A &#8220;namespace&#8221; is the concatenation of the <a class="reference internal" href="../../reference/glossary/#term-database"><em class="xref std std-term">database</em></a>
name and the <a class="reference internal" href="../../reference/glossary/#term-collection"><em class="xref std std-term">collection</em></a> names with a period character in
between.</p>
<p>Collections are containers for documents that share one or more
indexes. Databases are groups of collections stored on disk using a
single set of data files.</p>
<p>For an example <tt class="docutils literal"><span class="pre">acme.users</span></tt> namespace, <tt class="docutils literal"><span class="pre">acme</span></tt> is the database
name and <tt class="docutils literal"><span class="pre">users</span></tt> is the collection name. Period characters <strong>can</strong>
occur in collection names, so that the <tt class="docutils literal"><span class="pre">acme.user.history</span></tt> is a
valid namespace, with the <tt class="docutils literal"><span class="pre">acme</span></tt> database name, and the
<tt class="docutils literal"><span class="pre">user.history</span></tt> collection name.</p>
<p>While data models like this appear to support nested collections, the
collection namespace is flat, and there is no difference from the
perspective of MongoDB between <tt class="docutils literal"><span class="pre">acme</span></tt>, <tt class="docutils literal"><span class="pre">acme.users</span></tt>, and
<tt class="docutils literal"><span class="pre">acme.records</span></tt>.</p>
</div>
<div class="section" id="how-do-you-copy-all-objects-from-one-collection-to-another">
<h2>How do you copy all objects from one collection to another?<a class="headerlink" href="#how-do-you-copy-all-objects-from-one-collection-to-another" title="Permalink to this headline">¶</a></h2>
<p>In the <tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongo</span></tt> shell, you can use the following operation to
duplicate the entire collection:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">people</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">forEach</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="nx">db</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span><span class="nx">x</span><span class="p">)}</span> <span class="p">);</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>Because this process decodes <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> documents to <a class="reference internal" href="../../reference/glossary/#term-json"><em class="xref std std-term">JSON</em></a>
during the copy procedure, documents you may incur a loss of
type-fidelity.</p>
<p class="last">Consider using <tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongodump</span></tt> and <tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongorestore</span></tt> to
maintain type fidelity.</p>
</div>
<p>Also consider the <a class="reference internal" href="../../reference/commands/#cloneCollection" title="cloneCollection"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">cloneCollection</span></tt></a> <a class="reference internal" href="../../reference/glossary/#term-database-command"><em class="xref std std-term">command</em></a> that may provide some of this functionality.</p>
</div>
<div class="section" id="if-you-remove-a-document-does-mongodb-remove-it-from-disk">
<h2>If you remove a document, does MongoDB remove it from disk?<a class="headerlink" href="#if-you-remove-a-document-does-mongodb-remove-it-from-disk" title="Permalink to this headline">¶</a></h2>
<p>Yes.</p>
<p>When you use <a class="reference internal" href="../../reference/method/db.collection.remove/#db.collection.remove" title="db.collection.remove"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.remove()</span></tt></a>, the object will no longer exist in
MongoDB&#8217;s on-disk data storage.</p>
</div>
<div class="section" id="when-does-mongodb-write-updates-to-disk">
<h2>When does MongoDB write updates to disk?<a class="headerlink" href="#when-does-mongodb-write-updates-to-disk" title="Permalink to this headline">¶</a></h2>
<p>MongoDB flushes writes to disk on a regular interval. In the default
configuration, MongoDB writes data to the main data files on disk
every 60 seconds and commits the <a class="reference internal" href="../../reference/glossary/#term-journal"><em class="xref std std-term">journal</em></a> every 100
milliseconds. These values are configurable with the
<a class="reference internal" href="../../reference/configuration-options/#journalCommitInterval" title="journalCommitInterval"><tt class="xref mongodb mongodb-setting docutils literal"><span class="pre">journalCommitInterval</span></tt></a> and <a class="reference internal" href="../../reference/configuration-options/#syncdelay" title="syncdelay"><tt class="xref mongodb mongodb-setting docutils literal"><span class="pre">syncdelay</span></tt></a>.</p>
<p>These values represent the <em>maximum</em> amount of time between the
completion of a write operation and the point when the write is
durable in the journal, if enabled, and when MongoDB flushes data to
the disk. In many cases MongoDB and the operating system flush data to
disk more frequently, so that the above values resents a theoretical
maximum.</p>
<p>However, by default, MongoDB uses a &#8220;lazy&#8221; strategy to write to
disk. This is advantageous in situations where the database receives a
thousand increments to an object within one second, MongoDB only needs
to flush this data to disk once. In addition to the aforementioned
configuration options, you can also use <a class="reference internal" href="../../reference/commands/#fsync" title="fsync"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">fsync</span></tt></a> and
<a class="reference internal" href="../../reference/commands/#getLastError" title="getLastError"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">getLastError</span></tt></a> to modify this strategy.</p>
</div>
<div class="section" id="how-do-i-do-transactions-and-locking-in-mongodb">
<h2>How do I do transactions and locking in MongoDB?<a class="headerlink" href="#how-do-i-do-transactions-and-locking-in-mongodb" title="Permalink to this headline">¶</a></h2>
<p>MongoDB does not have support for traditional locking or complex
transactions with rollback. MongoDB aims to be lightweight, fast, and
predictable in its performance. This is similar to the MySQL MyISAM
autocommit model. By keeping transaction support extremely simple,
MongoDB can provide greater performance especially for
<a class="reference internal" href="../../reference/glossary/#term-partition"><em class="xref std std-term">partitioned</em></a> or <a class="reference internal" href="../../reference/glossary/#term-replication"><em class="xref std std-term">replicated</em></a>
systems with a number of database server processes.</p>
<p>MongoDB <em>does</em> have support for atomic operations <em>within</em> a single
document. Given the possibilities provided by nested documents, this
feature provides support for a large number of use-cases.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The <a class="reference external" href="http://www.mongodb.org/display/DOCS/Atomic+Operations">Atomic Operations</a> wiki page.</p>
</div>
</div>
<div class="section" id="how-do-you-aggregate-data-with-mongodb">
<h2>How do you aggregate data with MongoDB?<a class="headerlink" href="#how-do-you-aggregate-data-with-mongodb" title="Permalink to this headline">¶</a></h2>
<p>In version 2.1 and later, you can use the new &#8220;<a class="reference internal" href="../../applications/aggregation/"><em>aggregation
framework</em></a>,&#8221; with the
<a class="reference internal" href="../../reference/commands/#aggregate" title="aggregate"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">aggregate</span></tt></a> command.</p>
<p>MongoDB also supports <a class="reference internal" href="../../reference/glossary/#term-map-reduce"><em class="xref std std-term">map-reduce</em></a> with the
<a class="reference internal" href="../../reference/commands/#mapReduce" title="mapReduce"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">mapReduce</span></tt></a>, as well as basic aggregation with the
<a class="reference internal" href="../../reference/commands/#group" title="group"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">group</span></tt></a>, <a class="reference internal" href="../../reference/commands/#count" title="count"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">count</span></tt></a>, and
<a class="reference internal" href="../../reference/commands/#distinct" title="distinct"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">distinct</span></tt></a>. commands.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The <a class="reference external" href="http://www.mongodb.org/display/DOCS/Aggregation">Aggregation</a> wiki page.</p>
</div>
</div>
<div class="section" id="why-does-mongodb-log-so-many-connection-accepted-events">
<h2>Why does MongoDB log so many &#8220;Connection Accepted&#8221; events?<a class="headerlink" href="#why-does-mongodb-log-so-many-connection-accepted-events" title="Permalink to this headline">¶</a></h2>
<p>If you see a very large number connection and re-connection messages
in your MongoDB log, then clients are frequently connecting and
disconnecting to the MongoDB server. This is normal behavior for
applications that do not use request pooling, such as CGI. Consider
using FastCGI, an Apache Module, or some other kind of persistent
application server to decrease the connection overhead.</p>
<p>If these connections do not impact your performance you can use the
run-time <a class="reference internal" href="../../reference/configuration-options/#quiet" title="quiet"><tt class="xref mongodb mongodb-setting docutils literal"><span class="pre">quiet</span></tt></a> option or the command-line option
<a class="reference internal" href="../../reference/mongod/#cmdoption-mongod--quiet"><em class="xref std std-option">--quiet</em></a> to suppress these messages from the
log.</p>
</div>
<div class="section" id="does-mongodb-run-on-amazon-ebs">
<h2>Does MongoDB run on Amazon EBS?<a class="headerlink" href="#does-mongodb-run-on-amazon-ebs" title="Permalink to this headline">¶</a></h2>
<p>Yes.</p>
<p>MongoDB users of all sizes have had a great deal of success using
MongoDB on the EC2 platform using EBS disks.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The &#8220;<a class="reference external" href="http://www.mongodb.org/display/DOCS/Amazon+EC2">MongoDB on the Amazon Platform</a>&#8221;
wiki page.</p>
</div>
</div>
<div class="section" id="why-are-mongodb-s-data-files-so-large">
<h2>Why are MongoDB&#8217;s data files so large?<a class="headerlink" href="#why-are-mongodb-s-data-files-so-large" title="Permalink to this headline">¶</a></h2>
<p>MongoDB aggressively preallocates data files to reserve space and
avoid file system fragmentation. You can use the <a class="reference internal" href="../../reference/configuration-options/#smallfiles" title="smallfiles"><tt class="xref mongodb mongodb-setting docutils literal"><span class="pre">smallfiles</span></tt></a>
flag to modify the file preallocation strategy.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">This wiki page that address <a class="reference external" href="http://www.mongodb.org/display/DOCS/Excessive+Disk+Space">MongoDB disk use</a>.</p>
</div>
</div>
<div class="section" id="how-do-i-optimize-storage-use-for-small-documents">
<span id="faq-small-documents"></span><h2>How do I optimize storage use for small documents?<a class="headerlink" href="#how-do-i-optimize-storage-use-for-small-documents" title="Permalink to this headline">¶</a></h2>
<p>Each MongoDB document contains a certain amount of overhead. This
overhead is normally insignificant but becomes significant if all
documents are just a few bytes, as might be the case if the documents
in your collection only have one or two fields.</p>
<p>Consider the following suggestions and strategies for optimizing
storage utilization for these collections:</p>
<ul>
<li><p class="first">Use the <tt class="docutils literal"><span class="pre">_id</span></tt> field explicitly.</p>
<p>MongoDB clients automatically add an <tt class="docutils literal"><span class="pre">_id</span></tt> field to each document
and generate a unique 12-byte <a class="reference internal" href="../../reference/glossary/#term-objectid"><em class="xref std std-term">ObjectId</em></a> for the <tt class="docutils literal"><span class="pre">_id</span></tt>
field. Furthermore, MongoDB always indexes the <tt class="docutils literal"><span class="pre">_id</span></tt> field. For
smaller documents this may account for a significant amount of
space.</p>
<p>To optimize storage use, users can specify a value for the <tt class="docutils literal"><span class="pre">_id</span></tt> field
explicitly when inserting documents into the collection. This
strategy allows applications to store a value in the <tt class="docutils literal"><span class="pre">_id</span></tt> field
that would have occupied space in another portion of the document.</p>
<p>You can store any value in the <tt class="docutils literal"><span class="pre">_id</span></tt> field, but because this value
serves as a primary key for documents in the collection, it must
uniquely identify them. If the field&#8217;s value is not unique, then it
cannot serve as a primary key as there would be collisions in
collection.</p>
</li>
<li><p class="first">Use shorter field names.</p>
<p>MongoDB stores all field names in every document. For most
documents, this represents a small fraction of the space used by a
document; however, for small documents the field names may represent
a proportionally large amount of space. Consider a collection of
documents that resemble the following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">last_name</span> <span class="o">:</span> <span class="s2">&quot;Smith&quot;</span><span class="p">,</span> <span class="nx">best_score</span><span class="o">:</span> <span class="mf">3.9</span> <span class="p">}</span>
</pre></div>
</div>
<p>If you shorten the filed named <tt class="docutils literal"><span class="pre">last_name</span></tt> to <tt class="docutils literal"><span class="pre">lname</span></tt> and the
field name <tt class="docutils literal"><span class="pre">best_score</span></tt> to <tt class="docutils literal"><span class="pre">score</span></tt>, as follows, you could save 9
bytes per document.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">lname</span> <span class="o">:</span> <span class="s2">&quot;Smith&quot;</span><span class="p">,</span> <span class="nx">score</span> <span class="o">:</span> <span class="mf">3.9</span> <span class="p">}</span>
</pre></div>
</div>
<p>Shortening field names reduces expressiveness and does not provide
considerable benefit on for larger documents and where document
overhead is not significant concern. Shorter field names do not
reduce the size of indexes, because indexes have a predefined
structure.</p>
<p>In general it is not necessary to use short field names.</p>
</li>
<li><p class="first">Embed documents.</p>
<p>In some cases you may want to embed documents in other documents
and save on the per-document overhead.</p>
</li>
</ul>
</div>
<div class="section" id="when-should-i-use-gridfs">
<span id="faq-developers-when-to-use-gridfs"></span><h2>When should I use GridFS?<a class="headerlink" href="#when-should-i-use-gridfs" title="Permalink to this headline">¶</a></h2>
<p>For documents in a MongoDB collection, you should always use
<a class="reference internal" href="../../reference/glossary/#term-gridfs"><em class="xref std std-term">GridFS</em></a> for storing files larger than 16 MB.</p>
<p>In some situations, storing large files may be more efficient in a
MongoDB database than on a system-level filesystem.</p>
<ul class="simple">
<li>If your filesystem limits the number of files in a directory, you can
use GridFS to store as many files as needed.</li>
<li>When you want to keep your files and metadata automatically synced
and deployed across a number of systems and facilities.  When using
<a class="reference internal" href="../../administration/replication-architectures/#replica-set-geographical-distribution"><em>geographically distributed replica sets</em></a> MongoDB can distribute
files and their metadata automatically to a number of
<tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongod</span></tt> instances and facilitates.</li>
<li>When you want to access information from portions of large
files without having to load whole files into memory, you can use
GridFS to recall sections of files without reading the entire file
into memory.</li>
</ul>
<p>Do not use GridFS if you need to update the content of the entire file
atomically. As an alternative you can store multiple versions of each
file and specify the current version of the file in the metadata. You
can update the metadata field that indicates &#8220;latest&#8221; status in an
atomic update after uploading the new version of the file, and later
remove previous versions if needed.</p>
<p>Furthermore, if your files are all smaller the 16 MB <tt class="xref mongodb mongodb-limit docutils literal"><span class="pre">BSON</span>
<span class="pre">Document</span> <span class="pre">Size</span></tt> limit, consider storing the file manually within a
single document. You may use the BinData data type to store the binary
data. See your <a class="reference internal" href="../../applications/drivers/"><em>drivers</em></a> documentation
for details on using BinData.</p>
<p>For more information on GridFS, see <a class="reference internal" href="../../applications/gridfs/"><em>GridFS</em></a>.</p>
</div>
<div class="section" id="how-does-mongodb-address-sql-or-query-injection">
<h2>How does MongoDB address SQL or Query injection?<a class="headerlink" href="#how-does-mongodb-address-sql-or-query-injection" title="Permalink to this headline">¶</a></h2>
<div class="section" id="bson">
<h3>BSON<a class="headerlink" href="#bson" title="Permalink to this headline">¶</a></h3>
<p>As a client program assembles a query in MongoDB, it builds a BSON object, not a string. Thus
traditional SQL injection attacks are not a problem. More details and some nuances are covered below.</p>
<p>MongoDB represents queries as <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> objects. Typically
<a class="reference internal" href="../../applications/drivers/"><em>client libraries</em></a> provide a convenient,
injection free, process to build these objects. Consider the following
C++ example:</p>
<div class="highlight-cpp"><div class="highlight"><pre><span class="n">BSONObj</span> <span class="n">my_query</span> <span class="o">=</span> <span class="n">BSON</span><span class="p">(</span> <span class="s">&quot;name&quot;</span> <span class="o">&lt;&lt;</span> <span class="n">a_name</span> <span class="p">);</span>
<span class="n">auto_ptr</span><span class="o">&lt;</span><span class="n">DBClientCursor</span><span class="o">&gt;</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">c</span><span class="p">.</span><span class="n">query</span><span class="p">(</span><span class="s">&quot;tutorial.persons&quot;</span><span class="p">,</span> <span class="n">my_query</span><span class="p">);</span>
</pre></div>
</div>
<p>Here, <tt class="docutils literal"><span class="pre">my_query</span></tt> then will have a value such as <tt class="docutils literal"><span class="pre">{</span> <span class="pre">name</span> <span class="pre">:</span> <span class="pre">&quot;Joe&quot;</span>
<span class="pre">}</span></tt>. If <tt class="docutils literal"><span class="pre">my_query</span></tt> contained special characters, for example
<tt class="docutils literal"><span class="pre">,</span></tt>, <tt class="docutils literal"><span class="pre">:</span></tt>, and <tt class="docutils literal"><span class="pre">{</span></tt>, the query simply wouldn&#8217;t match any
documents. For example, users cannot hijack a query and convert it to
a delete.</p>
</div>
<div class="section" id="javascript">
<h3>JavaScript<a class="headerlink" href="#javascript" title="Permalink to this headline">¶</a></h3>
<p>All of the following MongoDB operations permit you to run arbitrary JavaScript
expressions directly on the server:- <a class="reference internal" href="../../reference/operators/#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>:</p>
<ul class="simple">
<li><a class="reference internal" href="../../reference/operators/#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a></li>
<li><a class="reference internal" href="../../reference/method/db.eval/#db.eval" title="db.eval"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.eval()</span></tt></a></li>
<li><a class="reference internal" href="../../reference/commands/#mapReduce" title="mapReduce"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">mapReduce</span></tt></a></li>
<li><a class="reference internal" href="../../reference/commands/#group" title="group"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">group</span></tt></a></li>
</ul>
<p>You must exercise care in these cases to prevent users from
submitting malicious JavaScript.</p>
<p>Fortunately, you can express most queries in MongoDB without
JavaScript and for queries that require JavaScript, you can mix
JavaScript and non-JavaScript in a single query. Place all the
user-supplied fields directly in a <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> field and pass
JavaScript code to the <a class="reference internal" href="../../reference/operators/#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> field.</p>
<ul>
<li><p class="first">If you need to pass user-supplied values in a <a class="reference internal" href="../../reference/operators/#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a>
clause, you may escape these values with the <tt class="docutils literal"><span class="pre">CodeWScope</span></tt>
mechanism. When you set user-submitted values as variables in the
scope document,  you can avoid evaluating them on the database
server.</p>
</li>
<li><p class="first">If you need to use <a class="reference internal" href="../../reference/method/db.eval/#db.eval" title="db.eval"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.eval()</span></tt></a> with user supplied values, you can
either use a <tt class="docutils literal"><span class="pre">CodeWScope</span></tt> or you can supply extra arguments to your
function. For instance:</p>
<div class="highlight-sh"><div class="highlight"><pre>db.eval<span class="o">(</span><span class="k">function</span><span class="o">(</span>userVal<span class="o">){</span>...<span class="o">}</span>,
        user_value<span class="o">)</span>;
</pre></div>
</div>
<p>This will ensure that your application sends <tt class="docutils literal"><span class="pre">user_value</span></tt> to the
database server as data rather than code.</p>
</li>
</ul>
</div>
<div class="section" id="dollar-sign-operator-escaping">
<span id="faq-dollar-sign-escaping"></span><h3>Dollar Sign Operator Escaping<a class="headerlink" href="#dollar-sign-operator-escaping" title="Permalink to this headline">¶</a></h3>
<p>Field names in MongoDB&#8217;s query language have a semantic. The
dollar sign (i.e <tt class="docutils literal"><span class="pre">$</span></tt>) is a reserved character used to represent
<a class="reference internal" href="../../reference/operators/"><em>operators</em></a> (i.e. <a class="reference internal" href="../../reference/operators/#_S_inc" title="$inc"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$inc</span></tt></a>.) Thus,
you should ensure that your application&#8217;s users cannot inject operators
into their inputs.</p>
<p>In some cases, you may wish to build a BSON object with a
user-provided key.  In these situations, keys will need to substitute
the reserved <tt class="docutils literal"><span class="pre">$</span></tt> and <tt class="docutils literal"><span class="pre">.</span></tt> characters. Any character is sufficient,
but consider using the Unicode full width equivalents: <tt class="docutils literal"><span class="pre">U+FF04</span></tt>
(i.e. &#8220;＄&#8221;) and <tt class="docutils literal"><span class="pre">U+FFOE</span></tt> (i.e. &#8220;．&#8221;).</p>
<p>Consider the following example:</p>
<div class="highlight-cpp"><div class="highlight"><pre><span class="n">BSONObj</span> <span class="n">my_object</span> <span class="o">=</span> <span class="n">BSON</span><span class="p">(</span> <span class="n">a_key</span> <span class="o">&lt;&lt;</span> <span class="n">a_name</span> <span class="p">);</span>
</pre></div>
</div>
<p>The user may have supplied a <tt class="docutils literal"><span class="pre">$</span></tt> value in the <tt class="docutils literal"><span class="pre">a_key</span></tt> value. At
the same time, <tt class="docutils literal"><span class="pre">my_object</span></tt> might be <tt class="docutils literal"><span class="pre">{</span> <span class="pre">$where</span> <span class="pre">:</span> <span class="pre">&quot;things&quot;</span>
<span class="pre">}</span></tt>. Consider the following cases:</p>
<ul>
<li><p class="first"><strong>Insert</strong>. Inserting this into the database does no harm. The
insert process does not evaluate the object as a query.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">MongoDB client drivers, if properly implemented, check for
reserved characters in keys on inserts.</p>
</div>
</li>
<li><p class="first"><strong>Update</strong>.  The <a class="reference internal" href="../../reference/method/db.collection.update/#db.collection.update" title="db.collection.update"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.update()</span></tt></a> operation permits <tt class="docutils literal"><span class="pre">$</span></tt> operators
in the update argument but does not support the
<a class="reference internal" href="../../reference/operators/#_S_where" title="$where"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$where</span></tt></a> operator. Still, some users
may be able to inject operators that can manipulate a single
document only. Therefore your application should escape keys, as
mentioned above, if reserved characters are possible.</p>
</li>
<li><p class="first"><strong>Query</strong> Generally this is not a problem for queries that
resemble <tt class="docutils literal"><span class="pre">{</span> <span class="pre">x</span> <span class="pre">:</span> <span class="pre">user_obj</span> <span class="pre">}</span></tt>: dollar signs are not top level and
have no effect. Theoretically it may be possible for the user to
build a query themselves. But checking the user-submitted content for
<tt class="docutils literal"><span class="pre">$</span></tt> characters in key names may help protect against this kind
of injection.</p>
</li>
</ul>
</div>
<div class="section" id="driver-specific-issues">
<h3>Driver-Specific Issues<a class="headerlink" href="#driver-specific-issues" title="Permalink to this headline">¶</a></h3>
<p>See the &#8220;<a class="reference external" href="http://us.php.net/manual/en/mongo.security.php">PHP MongoDB Driver Security Notes</a>&#8221; page in the PHP
driver documentation for more information</p>
</div>
</div>
<div class="section" id="how-does-mongodb-provide-concurrency">
<span id="faq-dev-concurrency"></span><h2>How does MongoDB provide concurrency?<a class="headerlink" href="#how-does-mongodb-provide-concurrency" title="Permalink to this headline">¶</a></h2>
<p>MongoDB implements a readers-writer lock. This means that
at any one time, only one client may be writing or any number
of clients may be reading, but that reading and writing cannot
occur simultaneously.</p>
<p>In standalone and <a class="reference internal" href="../../reference/glossary/#term-replica-set"><em class="xref std std-term">replica sets</em></a> the lock&#8217;s scope
applies to a single <tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongod</span></tt> instance or <a class="reference internal" href="../../reference/glossary/#term-primary"><em class="xref std std-term">primary</em></a>
instance. In a sharded cluster, locks apply to each individual shard,
not to the whole cluster.</p>
<p>For more information, see <a class="reference internal" href="../concurrency/"><em>FAQ: Concurrency</em></a>.</p>
</div>
<div class="section" id="what-is-the-compare-order-for-bson-types">
<h2>What is the compare order for BSON types?<a class="headerlink" href="#what-is-the-compare-order-for-bson-types" title="Permalink to this headline">¶</a></h2>
<p>MongoDB permits documents within a single collection to
have fields with different <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> types. For instance,
the following documents may exist within a single collection.</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">x</span><span class="o">:</span> <span class="s2">&quot;string&quot;</span> <span class="p">}</span>
<span class="p">{</span> <span class="nx">x</span><span class="o">:</span> <span class="mi">42</span> <span class="p">}</span>
</pre></div>
</div>
<p>When comparing values of different <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> types, MongoDB uses the following
compare order:</p>
<ul class="simple">
<li>Null</li>
<li>Numbers (ints, longs, doubles)</li>
<li>Symbol, String</li>
<li>Object</li>
<li>Array</li>
<li>BinData</li>
<li>ObjectID</li>
<li>Boolean</li>
<li>Date, Timestamp</li>
<li>Regular Expression</li>
</ul>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">MongoDB treats some types as equivalent for comparison purposes.
For instance, numeric types undergo conversion before comparison.</p>
</div>
<p>Consider the following <tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongo</span></tt> example:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">3</span><span class="p">});</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="mf">2.9</span><span class="p">}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()}</span> <span class="p">);</span>
<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span><span class="nx">x</span> <span class="o">:</span> <span class="kc">true</span> <span class="p">}</span> <span class="p">);</span>

<span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">sort</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">1</span><span class="p">});</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b03155dce8de6586fb002c7&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="mf">2.9</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b03154cce8de6586fb002c6&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="mi">3</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b031566ce8de6586fb002c9&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="kc">true</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4b031563ce8de6586fb002c8&quot;</span><span class="p">),</span> <span class="s2">&quot;x&quot;</span> <span class="o">:</span> <span class="s2">&quot;Tue Nov 17 2009 16:28:03 GMT-0500 (EST)&quot;</span> <span class="p">}</span>
</pre></div>
</div>
<p>The <a class="reference internal" href="../../reference/operators/#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> operator provides access to <a class="reference internal" href="../../reference/glossary/#term-bson-types"><em class="xref std std-term">BSON type</em></a> comparison in the MongoDB query syntax. See the
documentation on <a class="reference internal" href="../../reference/glossary/#term-bson-types"><em class="xref std std-term">BSON types</em></a> and the <a class="reference internal" href="../../reference/operators/#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> operator
for additional information.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">Storing values of the different types in the same field in a
collection is <em>strongly</em> discouraged.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<ul class="last simple">
<li>The <a class="reference external" href="http://www.mongodb.org/display/DOCS/Tailable+Cursors">Tailable Cursors</a> wiki page for an
example of a C++ use of <tt class="docutils literal"><span class="pre">MinKey</span></tt>.</li>
<li>The <a class="reference external" href="https://github.com/mongodb/mongo/blob/master/src/mongo/db/jsobj.h">jsobj.h</a> source file for the
definition of <tt class="docutils literal"><span class="pre">MinKey</span></tt> and <tt class="docutils literal"><span class="pre">MaxKey</span></tt>.</li>
</ul>
</div>
</div>
<div class="section" id="how-do-i-query-for-fields-that-have-null-values">
<span id="faq-developers-query-for-nulls"></span><h2>How do I query for fields that have null values?<a class="headerlink" href="#how-do-i-query-for-fields-that-have-null-values" title="Permalink to this headline">¶</a></h2>
<p>Fields in a document may store <tt class="docutils literal"><span class="pre">null</span></tt> values, as in a notional
collection, <tt class="docutils literal"><span class="pre">test</span></tt>, with the following documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">cancelDate</span><span class="o">:</span> <span class="kc">null</span> <span class="p">}</span>
<span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">2</span> <span class="p">}</span>
</pre></div>
</div>
<p>Different query operators treat <tt class="docutils literal"><span class="pre">null</span></tt> values differently:</p>
<ul>
<li><p class="first">The <tt class="docutils literal"><span class="pre">{</span> <span class="pre">cancelDate</span> <span class="pre">:</span> <span class="pre">null</span> <span class="pre">}</span></tt> query matches documents that either
contains the <tt class="docutils literal"><span class="pre">cancelDate</span></tt> field whose value is <tt class="docutils literal"><span class="pre">null</span></tt> <em>or</em> that
do not contain the <tt class="docutils literal"><span class="pre">cancelDate</span></tt> field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">cancelDate</span><span class="o">:</span> <span class="kc">null</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The query returns both documents:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;cancelDate&quot;</span> <span class="o">:</span> <span class="kc">null</span> <span class="p">}</span>
<span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">2</span> <span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">The <tt class="docutils literal"><span class="pre">{</span> <span class="pre">cancelDate</span> <span class="pre">:</span> <span class="pre">{</span> <span class="pre">$type:</span> <span class="pre">10</span> <span class="pre">}</span> <span class="pre">}</span></tt> query matches documents that
contains the <tt class="docutils literal"><span class="pre">cancelDate</span></tt> field whose value is <tt class="docutils literal"><span class="pre">null</span></tt> <em>only</em>;
i.e. the value of the <tt class="docutils literal"><span class="pre">cancelDate</span></tt> field is of BSON Type <tt class="docutils literal"><span class="pre">Null</span></tt>
(i.e. <tt class="docutils literal"><span class="pre">10</span></tt>) :</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">cancelDate</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$type</span><span class="o">:</span> <span class="mi">10</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The query returns only the document that contains the <tt class="docutils literal"><span class="pre">null</span></tt> value:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;cancelDate&quot;</span> <span class="o">:</span> <span class="kc">null</span> <span class="p">}</span>
</pre></div>
</div>
</li>
<li><p class="first">The <tt class="docutils literal"><span class="pre">{</span> <span class="pre">cancelDate</span> <span class="pre">:</span> <span class="pre">{</span> <span class="pre">$exists:</span> <span class="pre">false</span> <span class="pre">}</span> <span class="pre">}</span></tt> query matches documents
that do not contain the <tt class="docutils literal"><span class="pre">cancelDate</span></tt> field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">test</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span> <span class="p">{</span> <span class="nx">cancelDate</span> <span class="o">:</span> <span class="p">{</span> <span class="nx">$exists</span><span class="o">:</span> <span class="kc">false</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The query returns only the document that does <em>not</em> contain the
<tt class="docutils literal"><span class="pre">cancelDate</span></tt> field:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">2</span> <span class="p">}</span>
</pre></div>
</div>
</li>
</ul>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The reference documentation for the <a class="reference internal" href="../../reference/operators/#_S_type" title="$type"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$type</span></tt></a> and
<a class="reference internal" href="../../reference/operators/#_S_exists" title="$exists"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$exists</span></tt></a> operators.</p>
</div>
</div>
<div class="section" id="are-there-any-restrictions-on-the-names-of-collections">
<span id="faq-restrictions-on-collection-names"></span><h2>Are there any restrictions on the names of Collections?<a class="headerlink" href="#are-there-any-restrictions-on-the-names-of-collections" title="Permalink to this headline">¶</a></h2>
<p>Collection names can be any UTF-8 string with the following
exceptions:</p>
<ul class="simple">
<li>A collection name should begin with a letter or an underscore.</li>
<li>The empty string (<tt class="docutils literal"><span class="pre">&quot;&quot;</span></tt>) is not a valid collection name.</li>
<li>Collection names cannot contain the <tt class="docutils literal"><span class="pre">$</span></tt> character. (version 2.2 only)</li>
<li>Collection names cannot contain the null character: <tt class="docutils literal"><span class="pre">\0</span></tt></li>
<li>Do not name a collection using the <tt class="docutils literal"><span class="pre">system.</span></tt> prefix. MongoDB
reserves <tt class="docutils literal"><span class="pre">system.</span></tt>
for system collections, such as the
<tt class="docutils literal"><span class="pre">system.indexes</span></tt> collection.</li>
<li>The maximum size of a collection name is 128 characters, including
the name of the database. However, for maximum flexibility,
collections should have names less than 80 characters.</li>
</ul>
<p>If your collection name includes special characters, such as the
underscore character, then to access the collection use the
<a class="reference internal" href="../../reference/method/db.getCollection/#db.getCollection" title="db.getCollection"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.getCollection()</span></tt></a> method or a <a class="reference external" href="http://api.mongodb.org/">similar method for your
driver</a>.</p>
<div class="admonition-example admonition">
<p class="first admonition-title">Example</p>
<p>To create a collection <tt class="docutils literal"><span class="pre">_foo</span></tt> and insert the
<tt class="docutils literal"><span class="pre">{</span> <span class="pre">a</span> <span class="pre">:</span> <span class="pre">1</span> <span class="pre">}</span></tt> document, use the following operation:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">getCollection</span><span class="p">(</span><span class="s2">&quot;_foo&quot;</span><span class="p">).</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span> <span class="nx">a</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>To perform a query, use the <a class="reference internal" href="../../reference/method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a>
find method, in as the following:</p>
<div class="last highlight-javascript"><div class="highlight"><pre><span class="nx">db</span><span class="p">.</span><span class="nx">getCollection</span><span class="p">(</span><span class="s2">&quot;_foo&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">()</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="how-do-i-isolate-cursors-from-intervening-write-operations">
<span id="faq-developers-isolate-cursors"></span><h2>How do I isolate cursors from intervening write operations?<a class="headerlink" href="#how-do-i-isolate-cursors-from-intervening-write-operations" title="Permalink to this headline">¶</a></h2>
<p>MongoDB cursors can return the same document more than once in some
situations. <a class="footnote-reference" href="#duplicate-document-in-result-set" id="id1">[1]</a> You can use the
<a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a> method on a cursor to isolate
the operation for a very specific case.</p>
<p><a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a> traverses the
index on the <tt class="docutils literal"><span class="pre">_id</span></tt> field and guarantees that the query will return
each document (with respect to the value of the <tt class="docutils literal"><span class="pre">_id</span></tt> field) no more
than once. <a class="footnote-reference" href="#id-is-immutable" id="id2">[2]</a></p>
<p>The <a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a> does not guarantee that
the data returned by the query will reflect a single moment in time
<em>nor</em> does it provide isolation from insert or delete operations..</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<ul class="last simple">
<li>You <strong>cannot</strong> use <a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a> with
<a class="reference internal" href="../../reference/glossary/#term-sharding"><em class="xref std std-term">sharded collections</em></a>.</li>
<li>You <strong>cannot</strong> use <a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a> with
<a class="reference internal" href="../../reference/method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">sort()</span></tt></a> or <a class="reference internal" href="../../reference/method/cursor.hint/#cursor.hint" title="cursor.hint"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">hint()</span></tt></a> cursor methods.</li>
</ul>
</div>
<p>As an alternative, if your collection has a field or fields that are
never modified, you can use a <em>unique</em> index on this field or these
fields to achieve a similar result as the <a class="reference internal" href="../../reference/method/cursor.snapshot/#cursor.snapshot" title="cursor.snapshot"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">snapshot()</span></tt></a>. Query with <a class="reference internal" href="../../reference/method/cursor.hint/#cursor.hint" title="cursor.hint"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">hint()</span></tt></a> to
explicitly force the query to use that index.</p>
<table class="docutils footnote" frame="void" id="duplicate-document-in-result-set" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id1">[1]</a></td><td>As a cursor returns documents other
operations may interleave with the query: if some of these
operations are <a class="reference internal" href="../../applications/update/"><em>updates</em></a> that cause the
document to move (in the case of a table scan, caused by document
growth,) or that change the indexed field on the index used by the
query; then the cursor will return the same document more than
once.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id-is-immutable" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id2">[2]</a></td><td>MongoDB does not permit changes to the value of the
<tt class="docutils literal"><span class="pre">_id</span></tt> field; it is not possible for a cursor that transverses
this index to pass the same document more than once.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="when-should-i-embed-documents-within-other-documents">
<span id="faq-developers-embed-documents"></span><h2>When should I embed documents within other documents?<a class="headerlink" href="#when-should-i-embed-documents-within-other-documents" title="Permalink to this headline">¶</a></h2>
<p>When <a class="reference internal" href="../../core/data-modeling/"><em>modeling data in MongoDB</em></a>, embedding
is frequently the choice for:</p>
<ul class="simple">
<li>&#8220;contains&#8221; relationships between entities.</li>
<li>one-to-many relationships when the &#8220;many&#8221; objects <em>always</em> appear
with or are viewed in the context of their parents.</li>
</ul>
<p>You should also consider embedding for performance reasons if you have
a collection with a large number of small documents. Nevertheless, if
small, separate documents represent the natural model for the data,
then you should maintain that model.</p>
<p>If, however, you can group these small documents by some logical
relationship <em>and</em> you frequently retrieve the documents by this
grouping, you might consider &#8220;rolling-up&#8221; the small documents into
larger documents that contain an array of subdocuments. Keep in mind
that if you often only need to retrieve a subset of the documents
within the group, then &#8220;rolling-up&#8221; the documents may not provide
better performance.</p>
<p>&#8220;Rolling up&#8221; these small documents into logical groupings means that queries to
retrieve a group of documents involve sequential reads and fewer random disk
accesses.</p>
<p>Additionally, &#8220;rolling up&#8221; documents and moving common fields to the
larger document benefit the index on these fields. There would be fewer
copies of the common fields <em>and</em> there would be fewer associated key
entries in the corresponding index. See <a class="reference internal" href="../../core/indexes/"><em>Indexing Overview</em></a> for more
information on indexes.</p>
</div>
</div>


<div id="btnv">
<ul id="btnvl">
<li id="btnvpr"><a href="../fundamentals/" title="Previous Section: FAQ: MongoDB Fundamentals">&lt; &nbsp; FAQ: MongoDB Fundamentals</a></li>
<li id="btnvup"><a href="../" title="Parent Section: Frequently Asked Questions" >&#47;&#92;&nbsp; Frequently Asked Questions</a></li>
<li id="btnvnx"><a href="../concurrency/" title="Next Section: FAQ: Concurrency">FAQ: Concurrency &nbsp;&gt;</a></li>
</ul>
</div>
</div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">

<h3><a href="../../contents/">MongoDB Manual</a>
<small>(<a href="../../genindex/">Index</a>)</small>
</h3>

<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../about/">About MongoDB Documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../installation/">Installing MongoDB</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../replication/">Replication</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../sharding/">Sharding</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../administration/">Administration</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../security/">Security</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../crud/">CRUD</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../aggregation/">Aggregation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../indexes/">Indexes</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../applications/">Application Development</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../mongo/">Using the MongoDB Shell</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../use-cases/">Use Cases</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../">Frequently Asked Questions</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../fundamentals/">FAQ: MongoDB Fundamentals</a></li>
<li class="toctree-l2 current"><a class="current reference internal" href="">FAQ: MongoDB for Application Developers</a><ul>
<li class="toctree-l3"><a class="reference internal" href="#what-is-a-namespace-in-mongodb">What is a namespace in MongoDB?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-you-copy-all-objects-from-one-collection-to-another">How do you copy all objects from one collection to another?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#if-you-remove-a-document-does-mongodb-remove-it-from-disk">If you remove a document, does MongoDB remove it from disk?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#when-does-mongodb-write-updates-to-disk">When does MongoDB write updates to disk?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-i-do-transactions-and-locking-in-mongodb">How do I do transactions and locking in MongoDB?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-you-aggregate-data-with-mongodb">How do you aggregate data with MongoDB?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#why-does-mongodb-log-so-many-connection-accepted-events">Why does MongoDB log so many &#8220;Connection Accepted&#8221; events?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#does-mongodb-run-on-amazon-ebs">Does MongoDB run on Amazon EBS?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#why-are-mongodb-s-data-files-so-large">Why are MongoDB&#8217;s data files so large?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-i-optimize-storage-use-for-small-documents">How do I optimize storage use for small documents?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#when-should-i-use-gridfs">When should I use GridFS?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-does-mongodb-address-sql-or-query-injection">How does MongoDB address SQL or Query injection?</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#bson">BSON</a></li>
<li class="toctree-l4"><a class="reference internal" href="#javascript">JavaScript</a></li>
<li class="toctree-l4"><a class="reference internal" href="#dollar-sign-operator-escaping">Dollar Sign Operator Escaping</a></li>
<li class="toctree-l4"><a class="reference internal" href="#driver-specific-issues">Driver-Specific Issues</a></li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="#how-does-mongodb-provide-concurrency">How does MongoDB provide concurrency?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#what-is-the-compare-order-for-bson-types">What is the compare order for BSON types?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-i-query-for-fields-that-have-null-values">How do I query for fields that have null values?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#are-there-any-restrictions-on-the-names-of-collections">Are there any restrictions on the names of Collections?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#how-do-i-isolate-cursors-from-intervening-write-operations">How do I isolate cursors from intervening write operations?</a></li>
<li class="toctree-l3"><a class="reference internal" href="#when-should-i-embed-documents-within-other-documents">When should I embed documents within other documents?</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../concurrency/">FAQ: Concurrency</a></li>
<li class="toctree-l2"><a class="reference internal" href="../sharding/">FAQ: Sharding with MongoDB</a></li>
<li class="toctree-l2"><a class="reference internal" href="../replica-sets/">FAQ: Replica Sets and Replication in MongoDB</a></li>
<li class="toctree-l2"><a class="reference internal" href="../storage/">FAQ: MongoDB Storage</a></li>
<li class="toctree-l2"><a class="reference internal" href="../indexes/">FAQ: Indexes</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../reference/">Reference</a></li>
</ul>

<h3>Formats</h3>
<ul class="this-page-menu">
  <li><a href="/master/single/">MongoDB Manual, Single HTML Page</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.pdf" rel="nofollow">MongoDB Manual, PDF Format</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.epub" rel="nofollow">MongoDB Manual, ePub Format</a></li>
</ul>

<h3>Translations</h3>
<ul class="translation-menu">
  <li><a href="http://jp.docs.mongodb.org/master/faq/developers" rel="nofollow">Japanese</a></li>
  <li><a href="http://cn.docs.mongodb.org/master/faq/developers" rel="nofollow">Chinese</a></li>
  <!-- <li><a href="http://docs.mongodb.org/master/faq/developers" rel="nofollow">English</a></li> -->
</ul>
<h3>Knowledge Base </h3>
<ul class="kb-menu">
  <li><a href="../../tutorial/">Tutorials</a></li>
  <li><a href="../">Frequently Asked Questions</a></li>
  <li><a href="../../use-cases/">Use Cases</a></li>
</ul><h3>MongoDB Wiki</h3>

<ul>
 <li><strong>Getting Started</strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Quickstart">Quickstart</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Introduction">Introduction</a></li>
     <li><a href="http://www.mongodb.org/downloads">Downloads</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart">SQL to MongoDB Mapping</a></li> -->
   </ul>
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Developer+Zone">Developer Documentation</a></strong>
   <!-- <ul> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Connections">Connections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Databases">Databases</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Collections">Collections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Documents">Documents</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS">GridFS</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Indexes">Indexes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Querying">Querying</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Aggregation">Aggregation</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Optimization">Optimization</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Inserting">Inserting</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Updating">Updating</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Removing">Removing</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/MapReduce">MapReduce</a></li> -->
   <!-- </ul> -->
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Admin+Zone">Administrative Documentation</a></strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Components">Components</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Journaling">Journaling</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Production+Notes">Production Notes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Replication">Replication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Sharding">Sharding</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Monitoring+and+Diagnostics">Monitoring and Diagnostics</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Backups">Backups</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Durability+and+Repair">Durability and Repair</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Security+and+Authentication">Security and Authentication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Starting+and+Stopping+Mongo">Starting/Stopping MongoDB</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS+Tools">GridFS Tools</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/DBA+Operations+from+the+Shell">DB Operations from the Shell</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Architecture+and+Components">Architecture and Components</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Windows">Windows</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Troubleshooting">Troubleshooting</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Community">Community and Ecosystem</a></strong>
   <ul>
     <li><a href="http://10gen.com">10gen</a></li>
     <li><a href="http://www.mongodb.org/events">MongoDB Events</a></li>
     <li><a href="http://planet.mongodb.org">Planet MongoDB</a></li>
     <li><a href="http://mongodb.org/display/DOCS/MongoDB+Masters">MongoDB Masters</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Slides+and+Video">Slides and Video</a></li>
     <!-- <li><a href="http://cookbook.mongodb.org/">Cookbook</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Hosting+Center">Hosting Center</a></li>
     <li><a href="http://mms.10gen.com/">MongoDB Monitoring Service</a> (<a href="http://mms.10gen.com/help/">docs</a>)</li>
     <li><a href="http://mongodb.org/display/DOCS/Admin+UIs">Administrative Interfaces</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/International+Docs">International Documentation</a></li> -->
     <li><a href="http://10gen.com/books/">MongoDB Books</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></strong>
   <ul>
     <li>JavaScript (<a href="http://mongodb.org/display/DOCS/Javascript+Language+Center">wiki</a>, <a href="http://api.mongodb.org/js/current">docs</a>)</li>
     <li>Python (<a href="http://mongodb.org/display/DOCS/Python+Language+Center">wiki</a>, <a href="http://api.mongodb.org/python/current">docs</a>)</li>
     <li>Ruby (<a href="http://mongodb.org/display/DOCS/Ruby+Language+Center">wiki</a>, <a href="http://api.mongodb.org/ruby/current">docs</a>)</li>
     <li>PHP (<a href="http://mongodb.org/display/DOCS/PHP+Language+Center">wiki</a>, <a href="http://php.net/mongo/">docs</a>)</li>
     <li>Perl (<a href="http://mongodb.org/display/DOCS/Perl+Language+Center">wiki</a>, <a href="http://api.mongodb.org/perl/current/">docs</a>)</li>
     <li>Java (<a href="http://mongodb.org/display/DOCS/Java+Language+Center">wiki</a>, <a href="http://api.mongodb.org/java/current">docs</a>)</li>
     <li>Scala (<a href="http://mongodb.org/display/DOCS/Scala+Language+Center">wiki</a>, <a href="http://api.mongodb.org/scala/casbah/current/">docs</a>)</li>
     <li>C# (<a href="http://mongodb.org/display/DOCS/CSharp+Language+Center">wiki</a>, <a href="http://api.mongodb.org/csharp/current/">docs</a>)</li>
     <li>C (<a href="http://mongodb.org/display/DOCS/C+Language+Center">wiki</a>, <a href="http://api.mongodb.org/c/current/">docs</a>)</li>
     <li>C++ (<a href="http://mongodb.org/pages/viewpage.action?pageId=133409">wiki</a>, <a href="http://api.mongodb.org/cplusplus/current/">docs</a>)</li>
     <li>Haskell (<a href="http://mongodb.org/display/DOCS/Haskell+Language+Center">wiki</a>, <a href="http://api.mongodb.org/haskell">docs</a>)</li>
     <li>Erlang (<a href="http://mongodb.org/display/DOCS/Erlang+Language+Center">wiki</a>, <a href="http://api.mongodb.org/erlang">docs</a>)</li>
   </ul>
 </li>
</ul>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
  <div class="footer">
        &copy; Copyright 2011-2012, 10gen, Inc.  Licensed under <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons</a>.

    <p>MongoDB&reg;, Mongo&reg;, and the leaf logo are registered trademarks of 10gen, Inc.</p>
    <p>The MongoDB Documentation Project uses <a href="https://github.com/mongodb/docs">GitHub</a>. Fork the repository and submit pull requests to contribute.</p>
    <p>If you find any issues with the documentation feel free to open a <a href="http://jira.mongodb.org/browse/DOCS">Jira Case</a> and we'll work to resolve it promptly.</p>

  </div><script type="text/javascript">
var _gaq = _gaq || [];
var pluginUrl = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.') + 'google-analytics.com/plugins/ga/inpage_linkid.js';
_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
_gaq.push(['_setAccount', 'UA-7301842-8']);
_gaq.push(['_setDomainName', 'docs.mongodb.org']);
_gaq.push(['_trackPageview']);
(function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
        })();
</script>

<script type="text/javascript">
document.write(unescape("%3Cscript src='" + document.location.protocol + "//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>try { mktoMunchkin("017-HGS-593"); } catch(e) {}</script>
  </body>
</html>