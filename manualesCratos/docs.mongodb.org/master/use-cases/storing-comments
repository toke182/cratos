<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Storing Comments &mdash; MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico" />
    <meta name="robots" content="index" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="canonical" href="http://docs.mongodb.org/master/use-cases/storing-comments" />

    
    
    <link rel="stylesheet" href="../../_static/mongodb-docs.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
      
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.2',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="../../_static/jquery.js"></script>
    <script type="text/javascript" src="../../_static/underscore.js"></script>
    <script type="text/javascript" src="../../_static/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help"/>
<link rel="author" title="About these documents" href="../../about/" />
<link rel="top" title="MongoDB Manual" href="../../" />
<link rel="up" title="Use Cases" href="../" />
<link rel="next" title="Write a Tumblelog Application with Django MongoDB Engine" href="../../tutorial/write-a-tumblelog-application-with-django-mongodb-engine/" />
<link rel="prev" title="Metadata and Asset Management" href="../metadata-and-asset-management/" />
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  </head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Events">Events</a></li>
                <li class="normal last"><a class="last" href="http://www.mongodb.org/display/DOCS/International+Documentation">International</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="../../"><img src="../../_static/logo-mongodb.png" width="190" height="55" alt="mongoDB" /></a></div>
                </div>
        </div>
<div class="search-db"><gcse:searchbox></gcse:searchbox></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/use-cases/storing-comments.txt" target="_blank" title="Edit use-cases/storing-comments.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails!init.jspa?pid=10380&issuetype=4&priority=4&summary=Comment+on%3a+%22use-cases/storing-comments%2Etxt%22" target="_blank" title="Report a problem with use-cases/storing-comments.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><gcse:searchresults></gcse:searchresults></div>
            
  <div class="section" id="storing-comments">
<h1>Storing Comments<a class="headerlink" href="#storing-comments" title="Permalink to this headline">¶</a></h1>
<p>This document outlines the basic patterns for storing user-submitted
comments in a content management system (CMS.)</p>
<div class="section" id="overview">
<h2>Overview<a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
<p>MongoDB provides a number of different approaches for storing data like
users-comments on content from a CMS. There is no correct
implementation, but there are a number of common approaches and known
considerations for each approach. This case study explores the
implementation details and trade offs of each option. The three basic
patterns are:</p>
<ol class="arabic">
<li><p class="first">Store each comment in its own <a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">document</em></a>.</p>
<p>This approach provides the greatest flexibility at the expense of
some additional application level complexity.</p>
<p>These implementations make it possible to display comments in
chronological or threaded order, and place no restrictions on the
number of comments attached to a specific object.</p>
</li>
<li><p class="first">Embed all comments in the &#8220;parent&#8221; document.</p>
<p>This approach provides the greatest possible performance for
displaying comments at the expense of flexibility: the structure of
the comments in the document controls the display format.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Because of the <a class="reference internal" href="../../reference/limits/#limit-bson-document-size"><em>limit on document size</em></a>,
documents, including the original content and all comments,
cannot grow beyond 16 megabytes.</p>
</div>
</li>
<li><p class="first">A hybrid design, stores comments separately from the &#8220;parent,&#8221; but
aggregates comments into a small number of documents, where each
contains many comments.</p>
</li>
</ol>
<p>Also consider that comments can be <em>threaded</em>, where comments are
always replies to &#8220;parent&#8221; item or to another comment, which carries
certain architectural requirements discussed below.</p>
</div>
<div class="section" id="one-document-per-comment">
<h2>One Document per Comment<a class="headerlink" href="#one-document-per-comment" title="Permalink to this headline">¶</a></h2>
<div class="section" id="schema">
<h3>Schema<a class="headerlink" href="#schema" title="Permalink to this headline">¶</a></h3>
<p>If you store each comment in its own document, the documents in your
<tt class="docutils literal"><span class="pre">comments</span></tt> collection, would have the following structure:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">discussion_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">slug</span><span class="o">:</span> <span class="s1">&#39;34db&#39;</span><span class="p">,</span>
    <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
    <span class="nx">author</span><span class="o">:</span> <span class="p">{</span>
              <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
              <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Rick&#39;</span>
             <span class="p">},</span>
    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;This is so bogus ... &#39;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This form is only suitable for displaying comments in chronological
order. Comments store:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">discussion_id</span></tt> field that references the discussion parent,</li>
<li>a URL-compatible <tt class="docutils literal"><span class="pre">slug</span></tt> identifier,</li>
<li>a <tt class="docutils literal"><span class="pre">posted</span></tt> timestamp,</li>
<li>an <tt class="docutils literal"><span class="pre">author</span></tt> sub-document that contains a reference to a user&#8217;s
profile in the <tt class="docutils literal"><span class="pre">id</span></tt> field and their name in the <tt class="docutils literal"><span class="pre">name</span></tt> field,
and</li>
<li>the full <tt class="docutils literal"><span class="pre">text</span></tt> of the comment.</li>
</ul>
<p>To support threaded comments, you might use a slightly different
structure like the following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">discussion_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">parent_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">slug</span><span class="o">:</span> <span class="s1">&#39;34db/8bda&#39;</span>
    <span class="nx">full_slug</span><span class="o">:</span> <span class="s1">&#39;2012.02.08.12.21.08:34db/2012.02.09.22.19.16:8bda&#39;</span><span class="p">,</span>
    <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
    <span class="nx">author</span><span class="o">:</span> <span class="p">{</span>
              <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
              <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Rick&#39;</span>
             <span class="p">},</span>
    <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;This is so bogus ... &#39;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This structure:</p>
<ul class="simple">
<li>adds a <tt class="docutils literal"><span class="pre">parent_id</span></tt> field that stores the contents of the <tt class="docutils literal"><span class="pre">_id</span></tt>
field of the parent comment,</li>
<li>modifies the <tt class="docutils literal"><span class="pre">slug</span></tt> field to hold a path composed of the parent or
parent&#8217;s slug and this comment&#8217;s unique slug, and</li>
<li>adds a <tt class="docutils literal"><span class="pre">full_slug</span></tt> field that that combines the slugs and time
information to make it easier to sort documents in a threaded
discussion by date.</li>
</ul>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">MongoDB can only index <a class="reference internal" href="../../reference/limits/#limit-index-size"><em>1024 bytes</em></a>. This
includes all field data, the field name, and the namespace
(i.e. database name and collection name.) This may become an issue
when you create an index of the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field to support
sorting.</p>
</div>
</div>
<div class="section" id="operations">
<h3>Operations<a class="headerlink" href="#operations" title="Permalink to this headline">¶</a></h3>
<p>This section contains an overview of common operations for interacting
with comments represented using a schema where each comment is its own
<a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">document</em></a>.</p>
<p>All examples in this document use the Python programming language and
the <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a> <a class="reference internal" href="../../reference/glossary/#term-driver"><em class="xref std std-term">driver</em></a> for MongoDB, but
you can implement this system using any language you choose. Issue the
following commands at the interactive Python shell to load the
required libraries:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">bson</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">pymongo</span>
</pre></div>
</div>
<div class="section" id="post-a-new-comment">
<h4>Post a New Comment<a class="headerlink" href="#post-a-new-comment" title="Permalink to this headline">¶</a></h4>
<p>To post a new comment in a chronologically ordered (i.e. without
threading) system, use the following <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">insert()</span></tt></a>
operation:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">slug</span> <span class="o">=</span> <span class="n">generate_pseudorandom_slug</span><span class="p">()</span>
<span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span>
    <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="n">slug</span><span class="p">,</span>
    <span class="s">&#39;posted&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
    <span class="s">&#39;author&#39;</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
    <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">})</span>
</pre></div>
</div>
<p>To insert a comment for a system with threaded comments, you must
generate the <tt class="docutils literal"><span class="pre">slug</span></tt> path and <tt class="docutils literal"><span class="pre">full_slug</span></tt> at insert. See the
following operation:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">posted</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">()</span>

<span class="c"># generate the unique portions of the slug and full_slug</span>
<span class="n">slug_part</span> <span class="o">=</span> <span class="n">generate_pseudorandom_slug</span><span class="p">()</span>
<span class="n">full_slug_part</span> <span class="o">=</span> <span class="n">posted</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s">&#39;%Y.%m.</span><span class="si">%d</span><span class="s">.%H.%M.%S&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;:&#39;</span> <span class="o">+</span> <span class="n">slug_part</span>
<span class="c"># load the parent comment (if any)</span>
<span class="k">if</span> <span class="n">parent_slug</span><span class="p">:</span>
    <span class="n">parent</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
        <span class="p">{</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span> <span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="n">parent_slug</span> <span class="p">})</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="s">&#39;slug&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="n">slug_part</span>
    <span class="n">full_slug</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="s">&#39;full_slug&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="s">&#39;/&#39;</span> <span class="o">+</span> <span class="n">full_slug_part</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">slug</span> <span class="o">=</span> <span class="n">slug_part</span>
    <span class="n">full_slug</span> <span class="o">=</span> <span class="n">full_slug_part</span>

<span class="c"># actually insert the comment</span>
<span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">insert</span><span class="p">({</span>
    <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="n">slug</span><span class="p">,</span>
    <span class="s">&#39;full_slug&#39;</span><span class="p">:</span> <span class="n">full_slug</span><span class="p">,</span>
    <span class="s">&#39;posted&#39;</span><span class="p">:</span> <span class="n">posted</span><span class="p">,</span>
    <span class="s">&#39;author&#39;</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
    <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">})</span>
</pre></div>
</div>
</div>
<div class="section" id="view-paginated-comments">
<h4>View Paginated Comments<a class="headerlink" href="#view-paginated-comments" title="Permalink to this headline">¶</a></h4>
<p>To view comments that are not threaded, select all comments
participating in a discussion and sort by the <tt class="docutils literal"><span class="pre">posted</span></tt> field. For
example:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">cursor</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">&#39;posted&#39;</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">skip</span><span class="p">(</span><span class="n">page_num</span> <span class="o">*</span> <span class="n">page_size</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="n">page_size</span><span class="p">)</span>
</pre></div>
</div>
<p>Because the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field contains both hierarchical information
(via the path) and chronological information, you can use a simple
sort on the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field to retrieve a threaded view:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">cursor</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">&#39;full_slug&#39;</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">skip</span><span class="p">(</span><span class="n">page_num</span> <span class="o">*</span> <span class="n">page_size</span><span class="p">)</span>
<span class="n">cursor</span> <span class="o">=</span> <span class="n">cursor</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="n">page_size</span><span class="p">)</span>
</pre></div>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last"><a class="reference internal" href="../../reference/method/cursor.limit/#cursor.limit" title="cursor.limit"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.limit</span></tt></a>, <a class="reference internal" href="../../reference/method/cursor.skip/#cursor.skip" title="cursor.skip"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.skip</span></tt></a>, and
<a class="reference internal" href="../../reference/method/cursor.sort/#cursor.sort" title="cursor.sort"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">cursor.sort</span></tt></a></p>
</div>
</div>
<div class="section" id="indexing">
<h4>Indexing<a class="headerlink" href="#indexing" title="Permalink to this headline">¶</a></h4>
<p>To support the above queries  efficiently, maintain
two compound indexes, on:</p>
<ol class="arabic simple">
<li><tt class="docutils literal"><span class="pre">(``discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">posted</span></tt>)`` and</li>
<li><tt class="docutils literal"><span class="pre">(``discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">full_slug</span></tt>)``</li>
</ol>
<p>Issue the following operation at the interactive Python shell.</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">&#39;discussion_id&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;posted&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">&#39;discussion_id&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;full_slug&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Ensure that you always sort by the final element in a compound
index to maximize the performance of these queries.</p>
</div>
</div>
</div>
<div class="section" id="retrieve-comments-via-direct-links">
<h3>Retrieve Comments via Direct Links<a class="headerlink" href="#retrieve-comments-via-direct-links" title="Permalink to this headline">¶</a></h3>
<div class="section" id="queries">
<h4>Queries<a class="headerlink" href="#queries" title="Permalink to this headline">¶</a></h4>
<p>To directly retrieve a comment, without needing to page through all
comments, you can select by the <tt class="docutils literal"><span class="pre">slug</span></tt> field:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">comment</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span>
    <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="n">comment_slug</span><span class="p">})</span>
</pre></div>
</div>
<p>You can retrieve a &#8220;sub-discussion,&#8221; or a comment and all of its
descendants recursively, by performing a regular expression prefix
query on the <tt class="docutils literal"><span class="pre">full_slug</span></tt> field:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">re</span>

<span class="n">subdiscussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span>
    <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
    <span class="s">&#39;full_slug&#39;</span><span class="p">:</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&#39;^&#39;</span> <span class="o">+</span> <span class="n">re</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">parent_slug</span><span class="p">))</span> <span class="p">})</span>
<span class="n">subdiscussion</span> <span class="o">=</span> <span class="n">subdiscussion</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">&#39;full_slug&#39;</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="section" id="id1">
<h4>Indexing<a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h4>
<p>Since you have already created indexes on <tt class="docutils literal"><span class="pre">{</span> <span class="pre">discussion_id:</span> <span class="pre">1,</span>
<span class="pre">full_slug:</span> <span class="pre">}</span></tt> to support retrieving sub-discussions, you can add
support for the above queries by adding an index on <tt class="docutils literal"><span class="pre">{</span>
<span class="pre">discussion_id:</span> <span class="pre">1</span> <span class="pre">,</span> <span class="pre">slug:</span> <span class="pre">1</span> <span class="pre">}</span></tt>. Use the following operation in the
Python shell:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comments</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">&#39;discussion_id&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;slug&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
</div>
</div>
</div>
<div class="section" id="embedding-all-comments">
<h2>Embedding All Comments<a class="headerlink" href="#embedding-all-comments" title="Permalink to this headline">¶</a></h2>
<p>This design embeds the entire discussion of a comment thread inside of
the topic <a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">document</em></a>. In this example, the &#8220;topic,&#8221; document
holds the total content for whatever content you&#8217;re managing.</p>
<div class="section" id="id2">
<h3>Schema<a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h3>
<p>Consider the following prototype <tt class="docutils literal"><span class="pre">topic</span></tt> document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="p">...</span> <span class="nx">lots</span> <span class="nx">of</span> <span class="nx">topic</span> <span class="nx">data</span> <span class="p">...</span>
    <span class="nx">comments</span><span class="o">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
          <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Rick&#39;</span> <span class="p">},</span>
          <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;This is so bogus ... &#39;</span> <span class="p">},</span>
       <span class="p">...</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This structure is only suitable for a chronological display of all
comments because it embeds comments in chronological order. Each
document in the array in the <tt class="docutils literal"><span class="pre">comments</span></tt> contains the comment&#8217;s date,
author, and text.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Since you&#8217;re storing the comments in sorted order, there is no need
to maintain per-comment slugs.</p>
</div>
<p>To support threading using this design, you would need to embed
comments within comments, using a structure that resembles the
following:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="p">...</span> <span class="nx">lots</span> <span class="nx">of</span> <span class="nx">topic</span> <span class="nx">data</span> <span class="p">...</span>
    <span class="nx">replies</span><span class="o">:</span> <span class="p">[</span>
        <span class="p">{</span> <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
          <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Rick&#39;</span> <span class="p">},</span>
          <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;This is so bogus ... &#39;</span><span class="p">,</span>
          <span class="nx">replies</span><span class="o">:</span> <span class="p">[</span>
              <span class="p">{</span> <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="p">...</span> <span class="p">},</span> <span class="p">...</span> <span class="p">},</span>
       <span class="p">...</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Here, the <tt class="docutils literal"><span class="pre">replies</span></tt> field in each comment holds the
sub-comments, which can intern hold sub-comments.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>In the embedded document design, you give up some flexibility
regarding display format, because it is difficult to display
comments <em>except</em> as you store them in MongoDB.</p>
<p class="last">If, in the future, you want to switch from chronological to
threaded or from threaded to chronological, this design would make
that migration quite expensive.</p>
</div>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p>Remember that <a class="reference internal" href="../../reference/glossary/#term-bson"><em class="xref std std-term">BSON</em></a> documents have a <a class="reference internal" href="../../reference/limits/#limit-bson-document-size"><em>16 megabyte size
limit</em></a>. If popular discussions grow
larger than 16 megabytes, additional document growth will fail.</p>
<p class="last">Additionally, when MongoDB documents grow significantly after
creation you will experience greater storage fragmentation and
degraded update performance while MongoDB migrates documents
internally.</p>
</div>
</div>
<div class="section" id="id3">
<h3>Operations<a class="headerlink" href="#id3" title="Permalink to this headline">¶</a></h3>
<p>This section contains an overview of common operations for interacting
with comments represented using a schema that embeds all comments the
<a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">document</em></a> of the &#8220;parent&#8221; or topic content.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">For all operations below, there is no need for any new indexes
since all the operations are function within documents. Because you
would retrieve these documents by the <tt class="docutils literal"><span class="pre">_id</span></tt> field, you can rely
on the index that MongoDB creates automatically.</p>
</div>
<div class="section" id="id4">
<h4>Post a new comment<a class="headerlink" href="#id4" title="Permalink to this headline">¶</a></h4>
<p>To post a new comment in a chronologically ordered (i.e unthreaded)
system, you need the following <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span> <span class="p">},</span>
    <span class="p">{</span> <span class="s">&#39;$push&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;comments&#39;</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">&#39;posted&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
        <span class="s">&#39;author&#39;</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
        <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>The <a class="reference internal" href="../../reference/operators/#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> operator inserts comments into the <tt class="docutils literal"><span class="pre">comments</span></tt>
array in correct chronological order. For threaded discussions, the
<a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a>
operation is more complex. To reply to a comment, the following code
assumes that it can retrieve the &#8216;path&#8217; as a list of positions, for
the parent comment:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">if</span> <span class="n">path</span> <span class="o">!=</span> <span class="p">[]:</span>
    <span class="n">str_path</span> <span class="o">=</span> <span class="s">&#39;.&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s">&#39;replies.</span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">part</span> <span class="k">for</span> <span class="n">part</span> <span class="ow">in</span> <span class="n">path</span><span class="p">)</span>
    <span class="n">str_path</span> <span class="o">+=</span> <span class="s">&#39;.replies&#39;</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">str_path</span> <span class="o">=</span> <span class="s">&#39;replies&#39;</span>
<span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span> <span class="p">},</span>
    <span class="p">{</span> <span class="s">&#39;$push&#39;</span><span class="p">:</span> <span class="p">{</span>
        <span class="n">str_path</span><span class="p">:</span> <span class="p">{</span>
            <span class="s">&#39;posted&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">utcnow</span><span class="p">(),</span>
            <span class="s">&#39;author&#39;</span><span class="p">:</span> <span class="n">author_info</span><span class="p">,</span>
            <span class="s">&#39;text&#39;</span><span class="p">:</span> <span class="n">comment_text</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This constructs a field name of the form <tt class="docutils literal"><span class="pre">replies.0.replies.2...</span></tt> as
<tt class="docutils literal"><span class="pre">str_path</span></tt> and then uses this value with the <a class="reference internal" href="../../reference/operators/#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a>
operator to insert the new comment into the parent comment&#8217;s
<tt class="docutils literal"><span class="pre">replies</span></tt> array.</p>
</div>
<div class="section" id="id5">
<h4>View Paginated Comments<a class="headerlink" href="#id5" title="Permalink to this headline">¶</a></h4>
<p>To view the comments in a non-threaded design, you must use
the <a class="reference internal" href="../../reference/projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$slice</span></tt></a> operator:</p>
<div class="highlight-python"><pre>discussion = db.discussion.find_one(
    {'discussion_id': discussion_id},
    { ... some fields relevant to your page from the root discussion ...,
      'comments': { '$slice': [ page_num * page_size, page_size ] }
    })</pre>
</div>
<p>To return paginated comments for the threaded design, you must
retrieve the whole document and paginate the comments within the
application:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>

<span class="k">def</span> <span class="nf">iter_comments</span><span class="p">(</span><span class="n">obj</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">reply</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="s">&#39;replies&#39;</span><span class="p">]:</span>
        <span class="k">yield</span> <span class="n">reply</span>
        <span class="k">for</span> <span class="n">subreply</span> <span class="ow">in</span> <span class="n">iter_comments</span><span class="p">(</span><span class="n">reply</span><span class="p">):</span>
            <span class="k">yield</span> <span class="n">subreply</span>

<span class="n">paginated_comments</span> <span class="o">=</span> <span class="n">itertools</span><span class="o">.</span><span class="n">slice</span><span class="p">(</span>
    <span class="n">iter_comments</span><span class="p">(</span><span class="n">discussion</span><span class="p">),</span>
    <span class="n">page_size</span> <span class="o">*</span> <span class="n">page_num</span><span class="p">,</span>
    <span class="n">page_size</span> <span class="o">*</span> <span class="p">(</span><span class="n">page_num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">))</span>
</pre></div>
</div>
</div>
<div class="section" id="retrieve-a-comment-via-direct-links">
<h4>Retrieve a Comment via Direct Links<a class="headerlink" href="#retrieve-a-comment-via-direct-links" title="Permalink to this headline">¶</a></h4>
<p>Instead of retrieving comments via slugs as above, the following
example retrieves comments using their position in the comment list or
tree.</p>
<p>For chronological (i.e. non-threaded) comments, just use the
<a class="reference internal" href="../../reference/projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$slice</span></tt></a> operator to extract a comment, as follows:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
    <span class="p">{</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">},</span>
    <span class="p">{</span><span class="s">&#39;comments&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$slice&#39;</span><span class="p">:</span> <span class="p">[</span> <span class="n">position</span><span class="p">,</span> <span class="n">position</span> <span class="p">]</span> <span class="p">}</span> <span class="p">})</span>
<span class="n">comment</span> <span class="o">=</span> <span class="n">discussion</span><span class="p">[</span><span class="s">&#39;comments&#39;</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
</pre></div>
</div>
<p>For threaded comments, you must find the correct path through the tree
in your application, as follows:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">discussion</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">})</span>
<span class="n">current</span> <span class="o">=</span> <span class="n">discussion</span>
<span class="k">for</span> <span class="n">part</span> <span class="ow">in</span> <span class="n">path</span><span class="p">:</span>
    <span class="n">current</span> <span class="o">=</span> <span class="n">current</span><span class="o">.</span><span class="n">replies</span><span class="p">[</span><span class="n">part</span><span class="p">]</span>
<span class="n">comment</span> <span class="o">=</span> <span class="n">current</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Since parent comments embed child replies, this operation actually
retrieves the entire sub-discussion for the comment you queried
for.</p>
</div>
<div class="admonition-see admonition seealso">
<p class="first admonition-title">See</p>
<p class="last"><a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_one" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">find_one()</span></tt></a>.</p>
</div>
</div>
</div>
</div>
<div class="section" id="hybrid-schema-design">
<h2>Hybrid Schema Design<a class="headerlink" href="#hybrid-schema-design" title="Permalink to this headline">¶</a></h2>
<div class="section" id="id6">
<h3>Schema<a class="headerlink" href="#id6" title="Permalink to this headline">¶</a></h3>
<p>In the &#8220;hybrid approach&#8221; you will store comments in &#8220;buckets&#8221; that
hold about 100 comments. Consider the following example document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
    <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">discussion_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span>
    <span class="nx">page</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="nx">count</span><span class="o">:</span> <span class="mi">42</span><span class="p">,</span>
    <span class="nx">comments</span><span class="o">:</span> <span class="p">[</span> <span class="p">{</span>
        <span class="nx">slug</span><span class="o">:</span> <span class="s1">&#39;34db&#39;</span><span class="p">,</span>
        <span class="nx">posted</span><span class="o">:</span> <span class="nx">ISODateTime</span><span class="p">(...),</span>
        <span class="nx">author</span><span class="o">:</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(...),</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Rick&#39;</span> <span class="p">},</span>
        <span class="nx">text</span><span class="o">:</span> <span class="s1">&#39;This is so bogus ... &#39;</span> <span class="p">},</span>
    <span class="p">...</span> <span class="p">]</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Each document maintains <tt class="docutils literal"><span class="pre">page</span></tt> and <tt class="docutils literal"><span class="pre">count</span></tt> data that contains meta
data regarding the page, the page number and the comment count, in
addition to the <tt class="docutils literal"><span class="pre">comments</span></tt> array that holds the comments
themselves.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>Using a hybrid format makes storing threaded comments complex, and
this specific configuration is not covered in this document.</p>
<p class="last">Also, 100 comments is a <em>soft</em> limit for the number of comments per
page. This value is arbitrary: choose a value that will prevent the
maximum document size from growing beyond the 16MB <a class="reference internal" href="../../reference/limits/#limit-bson-document-size"><em>BSON
document size limit</em></a>, but large enough
to ensure that most comment threads will fit in a single
document. In some situations the number of comments per document
can exceed 100, but this does not affect the correctness of the
pattern.</p>
</div>
</div>
<div class="section" id="id7">
<h3>Operations<a class="headerlink" href="#id7" title="Permalink to this headline">¶</a></h3>
<p>This section contains a number of common operations that you may use
when building a CMS using this hybrid storage model with documents
that hold 100 comment &#8220;pages.&#8221;</p>
<p>All examples in this document use the Python programming language and
the <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a> <a class="reference internal" href="../../reference/glossary/#term-driver"><em class="xref std std-term">driver</em></a> for MongoDB, but
you can implement this system using any language you choose.</p>
<div class="section" id="id8">
<h4>Post a New Comment<a class="headerlink" href="#id8" title="Permalink to this headline">¶</a></h4>
<div class="section" id="updating">
<h5>Updating<a class="headerlink" href="#updating" title="Permalink to this headline">¶</a></h5>
<p>In order to post a new comment, you need to <a class="reference internal" href="../../reference/operators/#_S_push" title="$push"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$push</span></tt></a> the
comment onto the last page and <a class="reference internal" href="../../reference/operators/#_S_inc" title="$inc"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$inc</span></tt></a> that page&#8217;s comment
count. Consider the following example that queries on the basis of a
<tt class="docutils literal"><span class="pre">discussion_id</span></tt> field:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">page</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comment_pages</span><span class="o">.</span><span class="n">find_and_modify</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion</span><span class="p">[</span><span class="s">&#39;_id&#39;</span><span class="p">],</span>
      <span class="s">&#39;page&#39;</span><span class="p">:</span> <span class="n">discussion</span><span class="p">[</span><span class="s">&#39;num_pages&#39;</span><span class="p">]</span> <span class="p">},</span>
    <span class="p">{</span> <span class="s">&#39;$inc&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;count&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">},</span>
      <span class="s">&#39;$push&#39;</span><span class="p">:</span> <span class="p">{</span>
          <span class="s">&#39;comments&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;slug&#39;</span><span class="p">:</span> <span class="n">slug</span><span class="p">,</span> <span class="o">...</span> <span class="p">}</span> <span class="p">}</span> <span class="p">},</span>
    <span class="n">fields</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;count&#39;</span><span class="p">:</span><span class="mi">1</span><span class="p">},</span>
    <span class="n">upsert</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
    <span class="n">new</span><span class="o">=</span><span class="bp">True</span> <span class="p">)</span>
</pre></div>
</div>
<p>The <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_and_modify" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">find_and_modify()</span></tt></a>
operation is an <a class="reference internal" href="../../reference/glossary/#term-upsert"><em class="xref std std-term">upsert</em></a>,: if MongoDB cannot find a document
with the correct <tt class="docutils literal"><span class="pre">page</span></tt> number, the <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_and_modify" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">find_and_modify()</span></tt></a>
will create it and initialize the new document with appropriate values
for <tt class="docutils literal"><span class="pre">count</span></tt> and <tt class="docutils literal"><span class="pre">comments</span></tt>.</p>
<p>To limit the number of comments per page to roughly 100, you will
need to create new pages as they become necessary. Add the following
logic to support this:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">if</span> <span class="n">page</span><span class="p">[</span><span class="s">&#39;count&#39;</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">:</span>
    <span class="n">db</span><span class="o">.</span><span class="n">discussion</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>
        <span class="p">{</span> <span class="s">&#39;discussion_id: discussion[&#39;</span><span class="n">_id</span><span class="s">&#39;],</span>
          <span class="s">&#39;num_pages&#39;</span><span class="p">:</span> <span class="n">discussion</span><span class="p">[</span><span class="s">&#39;num_pages&#39;</span><span class="p">]</span> <span class="p">},</span>
        <span class="p">{</span> <span class="s">&#39;$inc&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;num_pages&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</pre></div>
</div>
<p>This <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a> operation
includes the last known number of pages in the query to prevent a race
condition where the number of pages incriments twice, that would
result in a nearly or totally empty document. If another
process increments the number of pages, then update above does
nothing.</p>
</div>
<div class="section" id="id9">
<h5>Indexing<a class="headerlink" href="#id9" title="Permalink to this headline">¶</a></h5>
<p>To support the <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.find_and_modify" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">find_and_modify()</span></tt></a>
and <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.update" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">update()</span></tt></a>
operations, maintain a compound index on (<tt class="docutils literal"><span class="pre">discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">page</span></tt>)
in the <tt class="docutils literal"><span class="pre">comment_pages</span></tt> collection, by issuing the following
operation at the Python/PyMongo console:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comment_pages</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">&#39;discussion_id&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;page&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="id10">
<h4>View Paginated Comments<a class="headerlink" href="#id10" title="Permalink to this headline">¶</a></h4>
<p>The following function defines how to paginate comments with a <em>fixed</em>
page size (i.e. not with the roughly 100 comment documents in the
above example,) as en example:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">find_comments</span><span class="p">(</span><span class="n">discussion_id</span><span class="p">,</span> <span class="n">skip</span><span class="p">,</span> <span class="n">limit</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">page_query</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comment_pages</span><span class="o">.</span><span class="n">find</span><span class="p">(</span>
        <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span> <span class="p">},</span>
        <span class="p">{</span> <span class="s">&#39;count&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;comments&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$slice&#39;</span><span class="p">:</span> <span class="p">[</span> <span class="n">skip</span><span class="p">,</span> <span class="n">limit</span> <span class="p">]</span> <span class="p">}</span> <span class="p">})</span>
    <span class="n">page_query</span> <span class="o">=</span> <span class="n">page_query</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">&#39;page&#39;</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="n">page_query</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">page</span><span class="p">[</span><span class="s">&#39;comments&#39;</span><span class="p">]</span>
        <span class="n">skip</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">skip</span> <span class="o">-</span> <span class="n">page</span><span class="p">[</span><span class="s">&#39;count&#39;</span><span class="p">])</span>
        <span class="n">limit</span> <span class="o">-=</span> <span class="nb">len</span><span class="p">(</span><span class="n">page</span><span class="p">[</span><span class="s">&#39;comments&#39;</span><span class="p">])</span>
        <span class="k">if</span> <span class="n">limit</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="k">break</span>
    <span class="k">return</span> <span class="n">result</span>
</pre></div>
</div>
<p>Here, the <a class="reference internal" href="../../reference/projection/slice/#_S_slice" title="$slice"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$slice</span></tt></a> operator pulls out comments from each
page, but <em>only</em> when this satisfies the <tt class="docutils literal"><span class="pre">skip</span></tt> requirement. For
example: if you have 3 pages with 100, 102, 101, and 22 comments on
each page, and you wish to retrieve comments where <tt class="docutils literal"><span class="pre">skip=300</span></tt> and
<tt class="docutils literal"><span class="pre">limit=50</span></tt>. Use the following algorithm:</p>
<table border="1" class="docutils">
<colgroup>
<col width="10%" />
<col width="10%" />
<col width="80%" />
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">Skip</th>
<th class="head">Limit</th>
<th class="head">Discussion</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>300</td>
<td>50</td>
<td><tt class="docutils literal"><span class="pre">{$slice:</span> <span class="pre">[</span> <span class="pre">300,</span> <span class="pre">50</span> <span class="pre">]</span> <span class="pre">}</span></tt> matches nothing in page
#1; subtract page #1&#8217;s <tt class="docutils literal"><span class="pre">count</span></tt> from <tt class="docutils literal"><span class="pre">skip</span></tt> and
continue.</td>
</tr>
<tr class="row-odd"><td>200</td>
<td>50</td>
<td><tt class="docutils literal"><span class="pre">{$slice:</span> <span class="pre">[</span> <span class="pre">200,</span> <span class="pre">50</span> <span class="pre">]</span> <span class="pre">}</span></tt> matches nothing in page
#2; subtract page #2&#8217;s <tt class="docutils literal"><span class="pre">count</span></tt> from <tt class="docutils literal"><span class="pre">skip</span></tt> and
continue.</td>
</tr>
<tr class="row-even"><td>98</td>
<td>50</td>
<td><tt class="docutils literal"><span class="pre">{$slice:</span> <span class="pre">[</span> <span class="pre">98,</span> <span class="pre">50</span> <span class="pre">]</span> <span class="pre">}</span></tt> matches 2 comments in page
#3; subtract page #3&#8217;s <tt class="docutils literal"><span class="pre">count</span></tt> from <tt class="docutils literal"><span class="pre">skip</span></tt>
(saturating at 0), subtract 2 from limit, and
continue.</td>
</tr>
<tr class="row-odd"><td>0</td>
<td>48</td>
<td><tt class="docutils literal"><span class="pre">{$slice:</span> <span class="pre">[</span> <span class="pre">0,</span> <span class="pre">48</span> <span class="pre">]</span> <span class="pre">}</span></tt> matches all 22 comments in
page #4; subtract 22 from <tt class="docutils literal"><span class="pre">limit</span></tt> and continue.</td>
</tr>
<tr class="row-even"><td>0</td>
<td>26</td>
<td>There are no more pages; terminate loop.</td>
</tr>
</tbody>
</table>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Since you already have an index on (<tt class="docutils literal"><span class="pre">discussion_id</span></tt>, <tt class="docutils literal"><span class="pre">page</span></tt>) in
your <tt class="docutils literal"><span class="pre">comment_pages</span></tt> collection, MongoDB can satisfy these
queries efficiently.</p>
</div>
</div>
<div class="section" id="id11">
<h4>Retrieve a Comment via Direct Links<a class="headerlink" href="#id11" title="Permalink to this headline">¶</a></h4>
<div class="section" id="query">
<h5>Query<a class="headerlink" href="#query" title="Permalink to this headline">¶</a></h5>
<p>To retrieve a comment directly without paging through all preceding
pages of commentary, use the slug to find the correct page, and then
use application logic to find the correct comment:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="n">page</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">comment_pages</span><span class="o">.</span><span class="n">find_one</span><span class="p">(</span>
    <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span><span class="p">:</span> <span class="n">discussion_id</span><span class="p">,</span>
      <span class="s">&#39;comments.slug&#39;</span><span class="p">:</span> <span class="n">comment_slug</span><span class="p">},</span>
    <span class="p">{</span> <span class="s">&#39;comments&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">})</span>
<span class="k">for</span> <span class="n">comment</span> <span class="ow">in</span> <span class="n">page</span><span class="p">[</span><span class="s">&#39;comments&#39;</span><span class="p">]:</span>
    <span class="k">if</span> <span class="n">comment</span><span class="p">[</span><span class="s">&#39;slug&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">comment_slug</span><span class="p">:</span>
        <span class="k">break</span>
</pre></div>
</div>
</div>
<div class="section" id="id12">
<h5>Indexing<a class="headerlink" href="#id12" title="Permalink to this headline">¶</a></h5>
<p>To perform this query efficiently you&#8217;ll need a new index on the
<tt class="docutils literal"><span class="pre">discussion_id</span></tt> and <tt class="docutils literal"><span class="pre">comments.slug</span></tt> fields (i.e. <tt class="docutils literal"><span class="pre">{</span>
<span class="pre">discussion_id:</span> <span class="pre">1</span> <span class="pre">comments.slug:</span> <span class="pre">1</span> <span class="pre">}</span></tt>.) Create this index using the
following operation in the Python/PyMongo console:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">comment_pages</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([</span>
<span class="gp">... </span>   <span class="p">(</span><span class="s">&#39;discussion_id&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;comments.slug&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
</div>
</div>
</div>
</div>
<div class="section" id="sharding">
<h2>Sharding<a class="headerlink" href="#sharding" title="Permalink to this headline">¶</a></h2>
<p>For all of the architectures discussed above, you will want to the
<tt class="docutils literal"><span class="pre">discussion_id</span></tt> field to participate in the shard key, if you need
to shard your application.</p>
<p>For applications that use the &#8220;one document per comment&#8221; approach,
consider using <tt class="docutils literal"><span class="pre">slug</span></tt> (or <tt class="docutils literal"><span class="pre">full_slug</span></tt>, in the case of threaded
comments) fields in the shard key to allow the <a class="reference internal" href="../../reference/config-database/#mongos" title="mongos"><tt class="xref mongodb mongodb-program docutils literal"><span class="pre">mongos</span></tt></a>
instances to route requests by <tt class="docutils literal"><span class="pre">slug</span></tt>. Issue the following operation
at the Python/PyMongo console:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&#39;shardCollection&#39;</span><span class="p">,</span> <span class="s">&#39;comments&#39;</span><span class="p">,</span> <span class="p">{</span>
<span class="gp">... </span>    <span class="s">&#39;key&#39;</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;full_slug&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">})</span>
</pre></div>
</div>
<p>This will return the following response:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span> <span class="s2">&quot;collectionsharded&quot;</span> <span class="o">:</span> <span class="s2">&quot;comments&quot;</span><span class="p">,</span> <span class="s2">&quot;ok&quot;</span> <span class="o">:</span> <span class="mi">1</span> <span class="p">}</span>
</pre></div>
</div>
<p>In the case of comments that fully-embedded in parent content
<a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">documents</em></a> the determination of the shard key is
outside of the scope of this document.</p>
<p>For hybrid documents, use the page number of the comment page in the
shard key along with the <tt class="docutils literal"><span class="pre">discussion_id</span></tt> to allow MongoDB to split
popular discussions between, while grouping discussions on the same
shard. Issue the following operation
at the Python/PyMongo console:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&#39;shardCollection&#39;</span><span class="p">,</span> <span class="s">&#39;comment_pages&#39;</span><span class="p">,</span> <span class="p">{</span>
<span class="gp">... </span>    <span class="n">key</span> <span class="p">:</span> <span class="p">{</span> <span class="s">&#39;discussion_id&#39;</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;page&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">})</span>
<span class="go">{ &quot;collectionsharded&quot; : &quot;comment_pages&quot;, &quot;ok&quot; : 1 }</span>
</pre></div>
</div>
</div>
</div>


<div id="btnv">
<ul id="btnvl">
<li id="btnvpr"><a href="../metadata-and-asset-management/" title="Previous Section: Metadata and Asset Management">&lt; &nbsp; Metadata and Asset Management</a></li>
<li id="btnvup"><a href="../" title="Parent Section: Use Cases" >&#47;&#92;&nbsp; Use Cases</a></li>
<li id="btnvnx"><a href="../../tutorial/write-a-tumblelog-application-with-django-mongodb-engine/" title="Next Section: Write a Tumblelog Application with Django MongoDB Engine">Write a Tumblelog Application with Django MongoDB Engine &nbsp;&gt;</a></li>
</ul>
</div>
</div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">

<h3><a href="../../contents/">MongoDB Manual</a>
<small>(<a href="../../genindex/">Index</a>)</small>
</h3>

<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../about/">About MongoDB Documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../installation/">Installing MongoDB</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../replication/">Replication</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../sharding/">Sharding</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../administration/">Administration</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../security/">Security</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../crud/">CRUD</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../aggregation/">Aggregation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../indexes/">Indexes</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../applications/">Application Development</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../mongo/">Using the MongoDB Shell</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../">Use Cases</a><ul class="current">
<li class="toctree-l2"><a class="reference internal" href="../#operational-intelligence">Operational Intelligence</a></li>
<li class="toctree-l2"><a class="reference internal" href="../#product-data-management">Product Data Management</a></li>
<li class="toctree-l2 current"><a class="reference internal" href="../#content-management-systems">Content Management Systems</a><ul class="current">
<li class="toctree-l3"><a class="reference internal" href="../metadata-and-asset-management/">Metadata and Asset Management</a></li>
<li class="toctree-l3 current"><a class="current reference internal" href="">Storing Comments</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#overview">Overview</a></li>
<li class="toctree-l4"><a class="reference internal" href="#one-document-per-comment">One Document per Comment</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#schema">Schema</a></li>
<li class="toctree-l5"><a class="reference internal" href="#operations">Operations</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#post-a-new-comment">Post a New Comment</a></li>
<li class="toctree-l6"><a class="reference internal" href="#view-paginated-comments">View Paginated Comments</a></li>
<li class="toctree-l6"><a class="reference internal" href="#indexing">Indexing</a></li>
</ul>
</li>
<li class="toctree-l5"><a class="reference internal" href="#retrieve-comments-via-direct-links">Retrieve Comments via Direct Links</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#queries">Queries</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id1">Indexing</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#embedding-all-comments">Embedding All Comments</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#id2">Schema</a></li>
<li class="toctree-l5"><a class="reference internal" href="#id3">Operations</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#id4">Post a new comment</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id5">View Paginated Comments</a></li>
<li class="toctree-l6"><a class="reference internal" href="#retrieve-a-comment-via-direct-links">Retrieve a Comment via Direct Links</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#hybrid-schema-design">Hybrid Schema Design</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#id6">Schema</a></li>
<li class="toctree-l5"><a class="reference internal" href="#id7">Operations</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#id8">Post a New Comment</a><ul>
<li class="toctree-l7"><a class="reference internal" href="#updating">Updating</a></li>
<li class="toctree-l7"><a class="reference internal" href="#id9">Indexing</a></li>
</ul>
</li>
<li class="toctree-l6"><a class="reference internal" href="#id10">View Paginated Comments</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id11">Retrieve a Comment via Direct Links</a><ul>
<li class="toctree-l7"><a class="reference internal" href="#query">Query</a></li>
<li class="toctree-l7"><a class="reference internal" href="#id12">Indexing</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#sharding">Sharding</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../#python-application-development">Python Application Development</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../faq/">Frequently Asked Questions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../reference/">Reference</a></li>
</ul>

<h3>Formats</h3>
<ul class="this-page-menu">
  <li><a href="/master/single/">MongoDB Manual, Single HTML Page</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.pdf" rel="nofollow">MongoDB Manual, PDF Format</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.epub" rel="nofollow">MongoDB Manual, ePub Format</a></li>
</ul>

<h3>Translations</h3>
<ul class="translation-menu">
  <li><a href="http://jp.docs.mongodb.org/master/use-cases/storing-comments" rel="nofollow">Japanese</a></li>
  <li><a href="http://cn.docs.mongodb.org/master/use-cases/storing-comments" rel="nofollow">Chinese</a></li>
  <!-- <li><a href="http://docs.mongodb.org/master/use-cases/storing-comments" rel="nofollow">English</a></li> -->
</ul>
<h3>Knowledge Base </h3>
<ul class="kb-menu">
  <li><a href="../../tutorial/">Tutorials</a></li>
  <li><a href="../../faq/">Frequently Asked Questions</a></li>
  <li><a href="../">Use Cases</a></li>
</ul><h3>MongoDB Wiki</h3>

<ul>
 <li><strong>Getting Started</strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Quickstart">Quickstart</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Introduction">Introduction</a></li>
     <li><a href="http://www.mongodb.org/downloads">Downloads</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart">SQL to MongoDB Mapping</a></li> -->
   </ul>
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Developer+Zone">Developer Documentation</a></strong>
   <!-- <ul> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Connections">Connections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Databases">Databases</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Collections">Collections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Documents">Documents</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS">GridFS</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Indexes">Indexes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Querying">Querying</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Aggregation">Aggregation</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Optimization">Optimization</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Inserting">Inserting</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Updating">Updating</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Removing">Removing</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/MapReduce">MapReduce</a></li> -->
   <!-- </ul> -->
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Admin+Zone">Administrative Documentation</a></strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Components">Components</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Journaling">Journaling</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Production+Notes">Production Notes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Replication">Replication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Sharding">Sharding</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Monitoring+and+Diagnostics">Monitoring and Diagnostics</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Backups">Backups</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Durability+and+Repair">Durability and Repair</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Security+and+Authentication">Security and Authentication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Starting+and+Stopping+Mongo">Starting/Stopping MongoDB</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS+Tools">GridFS Tools</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/DBA+Operations+from+the+Shell">DB Operations from the Shell</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Architecture+and+Components">Architecture and Components</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Windows">Windows</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Troubleshooting">Troubleshooting</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Community">Community and Ecosystem</a></strong>
   <ul>
     <li><a href="http://10gen.com">10gen</a></li>
     <li><a href="http://www.mongodb.org/events">MongoDB Events</a></li>
     <li><a href="http://planet.mongodb.org">Planet MongoDB</a></li>
     <li><a href="http://mongodb.org/display/DOCS/MongoDB+Masters">MongoDB Masters</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Slides+and+Video">Slides and Video</a></li>
     <!-- <li><a href="http://cookbook.mongodb.org/">Cookbook</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Hosting+Center">Hosting Center</a></li>
     <li><a href="http://mms.10gen.com/">MongoDB Monitoring Service</a> (<a href="http://mms.10gen.com/help/">docs</a>)</li>
     <li><a href="http://mongodb.org/display/DOCS/Admin+UIs">Administrative Interfaces</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/International+Docs">International Documentation</a></li> -->
     <li><a href="http://10gen.com/books/">MongoDB Books</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></strong>
   <ul>
     <li>JavaScript (<a href="http://mongodb.org/display/DOCS/Javascript+Language+Center">wiki</a>, <a href="http://api.mongodb.org/js/current">docs</a>)</li>
     <li>Python (<a href="http://mongodb.org/display/DOCS/Python+Language+Center">wiki</a>, <a href="http://api.mongodb.org/python/current">docs</a>)</li>
     <li>Ruby (<a href="http://mongodb.org/display/DOCS/Ruby+Language+Center">wiki</a>, <a href="http://api.mongodb.org/ruby/current">docs</a>)</li>
     <li>PHP (<a href="http://mongodb.org/display/DOCS/PHP+Language+Center">wiki</a>, <a href="http://php.net/mongo/">docs</a>)</li>
     <li>Perl (<a href="http://mongodb.org/display/DOCS/Perl+Language+Center">wiki</a>, <a href="http://api.mongodb.org/perl/current/">docs</a>)</li>
     <li>Java (<a href="http://mongodb.org/display/DOCS/Java+Language+Center">wiki</a>, <a href="http://api.mongodb.org/java/current">docs</a>)</li>
     <li>Scala (<a href="http://mongodb.org/display/DOCS/Scala+Language+Center">wiki</a>, <a href="http://api.mongodb.org/scala/casbah/current/">docs</a>)</li>
     <li>C# (<a href="http://mongodb.org/display/DOCS/CSharp+Language+Center">wiki</a>, <a href="http://api.mongodb.org/csharp/current/">docs</a>)</li>
     <li>C (<a href="http://mongodb.org/display/DOCS/C+Language+Center">wiki</a>, <a href="http://api.mongodb.org/c/current/">docs</a>)</li>
     <li>C++ (<a href="http://mongodb.org/pages/viewpage.action?pageId=133409">wiki</a>, <a href="http://api.mongodb.org/cplusplus/current/">docs</a>)</li>
     <li>Haskell (<a href="http://mongodb.org/display/DOCS/Haskell+Language+Center">wiki</a>, <a href="http://api.mongodb.org/haskell">docs</a>)</li>
     <li>Erlang (<a href="http://mongodb.org/display/DOCS/Erlang+Language+Center">wiki</a>, <a href="http://api.mongodb.org/erlang">docs</a>)</li>
   </ul>
 </li>
</ul>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
  <div class="footer">
        &copy; Copyright 2011-2012, 10gen, Inc.  Licensed under <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons</a>.

    <p>MongoDB&reg;, Mongo&reg;, and the leaf logo are registered trademarks of 10gen, Inc.</p>
    <p>The MongoDB Documentation Project uses <a href="https://github.com/mongodb/docs">GitHub</a>. Fork the repository and submit pull requests to contribute.</p>
    <p>If you find any issues with the documentation feel free to open a <a href="http://jira.mongodb.org/browse/DOCS">Jira Case</a> and we'll work to resolve it promptly.</p>

  </div><script type="text/javascript">
var _gaq = _gaq || [];
var pluginUrl = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.') + 'google-analytics.com/plugins/ga/inpage_linkid.js';
_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
_gaq.push(['_setAccount', 'UA-7301842-8']);
_gaq.push(['_setDomainName', 'docs.mongodb.org']);
_gaq.push(['_trackPageview']);
(function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
        })();
</script>

<script type="text/javascript">
document.write(unescape("%3Cscript src='" + document.location.protocol + "//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>try { mktoMunchkin("017-HGS-593"); } catch(e) {}</script>
  </body>
</html>