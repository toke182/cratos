<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Storing Log Data &mdash; MongoDB Manual</title>

    <link rel="shortcut icon" href="http://media.mongodb.org/favicon.ico" />
    <meta name="robots" content="index" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="canonical" href="http://docs.mongodb.org/master/use-cases/storing-log-data" />

    
    
    <link rel="stylesheet" href="../../_static/mongodb-docs.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" />
      
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../../',
        VERSION:     '2.2.2',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  false
      };
    </script>
    <script type="text/javascript" src="../../_static/jquery.js"></script>
    <script type="text/javascript" src="../../_static/underscore.js"></script>
    <script type="text/javascript" src="../../_static/doctools.js"></script>
      <link rel="search" type="application/opensearchdescription+xml" href="http://docs.mongodb.org/osd.xml" title="MongoDB Help"/>
<link rel="author" title="About these documents" href="../../about/" />
<link rel="top" title="MongoDB Manual" href="../../" />
<link rel="up" title="Use Cases" href="../" />
<link rel="next" title="Pre-Aggregated Reports" href="../pre-aggregated-reports/" />
<link rel="prev" title="Use Cases" href="../" />
<!-- Put the following javascript before the closing </head> tag. -->
<script>
  (function() {
    var cx = '017213726194841070573:WMX6838984';
    var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//www.google.com/cse/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);
  })();
</script>
  </head>
  <body>
<div id="top-right">
        <div class="user-right">
                <ul id="header-menu-bar" class="ajs-menu-bar">
                <li class="normal"><a target="_blank" href="http://groups.google.com/group/mongodb-user">Forums</a></li>
                <li class="normal"><a target="_blank" href="http://blog.mongodb.org/">Blog</a></li>
                <li class="normal"><a href="http://www.mongodb.org/downloads">Download</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></li>
                <li class="normal"><a href="http://www.mongodb.org/display/DOCS/Events">Events</a></li>
                <li class="normal last"><a class="last" href="http://www.mongodb.org/display/DOCS/International+Documentation">International</a></li>
                </ul>
        </div>
</div>
<div id="header-db" class="spread">
        <div class="split">
                <div id="logo">
                        <div><a href="../../"><img src="../../_static/logo-mongodb.png" width="190" height="55" alt="mongoDB" /></a></div>
                </div>
        </div>
<div class="search-db"><gcse:searchbox></gcse:searchbox></div>
<div id="etp">
<ul>
<li><a href="https://github.com/mongodb/docs/blob/master/source/use-cases/storing-log-data.txt" target="_blank" title="Edit use-cases/storing-log-data.txt on github">Edit this Page</a></li>
<li><a href="http://github.com/mongodb/docs" target="_blank" title="Fork the documentation on GitHub and contribute.">GitHub</a></li>
<li><a href="https://jira.mongodb.org/secure/CreateIssueDetails!init.jspa?pid=10380&issuetype=4&priority=4&summary=Comment+on%3a+%22use-cases/storing-log-data%2Etxt%22" target="_blank" title="Report a problem with use-cases/storing-log-data.txt on Jira">Report a problem</a></li>
</ul>
</div>
</div>  
    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            <div id="cse-results"><gcse:searchresults></gcse:searchresults></div>
            
  <div class="section" id="storing-log-data">
<h1>Storing Log Data<a class="headerlink" href="#storing-log-data" title="Permalink to this headline">¶</a></h1>
<div class="section" id="overview">
<h2>Overview<a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
<p>This document outlines the basic patterns and principles for using
MongoDB as a persistent storage engine for log data from servers and
other machine data.</p>
<div class="section" id="problem">
<h3>Problem<a class="headerlink" href="#problem" title="Permalink to this headline">¶</a></h3>
<p>Servers generate a large number of events (i.e. logging,) that contain
useful information about their operation including errors, warnings,
and users behavior. By default, most servers, store these data in
plain text log files on their local file systems.</p>
<p>While plain-text logs are accessible and human-readable, they are
difficult to use, reference, and analyze without holistic systems for
aggregating and storing these data.</p>
</div>
<div class="section" id="solution">
<h3>Solution<a class="headerlink" href="#solution" title="Permalink to this headline">¶</a></h3>
<p>The solution described below assumes that each server
generates events also consumes event data and that each server can
access the MongoDB instance. Furthermore, this design assumes that the
query rate for this logging data is substantially lower than
common for logging applications with a high-bandwidth event stream.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">This case assumes that you&#8217;re using an standard uncapped collection
for this event data, unless otherwise noted. See the section on
<a class="reference internal" href="#rta-storing-log-data-capped-collections"><em>capped collections</em></a></p>
</div>
</div>
<div class="section" id="schema-design">
<h3>Schema Design<a class="headerlink" href="#schema-design" title="Permalink to this headline">¶</a></h3>
<p>The schema for storing log data in MongoDB depends on the format of
the event data that you&#8217;re storing. For a simple example, consider
standard request logs in the combined format from the Apache HTTP
Server.  A line from these logs may resemble the following:</p>
<div class="highlight-text"><div class="highlight"><pre>127.0.0.1 - frank [10/Oct/2000:13:55:36 -0700] &quot;GET /apache_pb.gif HTTP/1.0&quot; 200 2326 &quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot; &quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;
</pre></div>
</div>
<p>The simplest approach to storing the log data would be putting the exact
text of the log record into a document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
  <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s1">&#39;4f442120eb03305789000000&#39;</span><span class="p">),</span>
 <span class="nx">line</span><span class="o">:</span> <span class="s1">&#39;127.0.0.1 - frank [10/Oct/2000:13:55:36 -0700] &quot;GET /apache_pb.gif HTTP/1.0&quot; 200 2326 &quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot; &quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;&#39;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>While this solution is does capture all data in a format that MongoDB can
use, the data is not particularly useful, or it&#8217;s not terribly
efficient: if you need to find events that the same page, you would
need to use a regular expression query, which would require a full
scan of the collection. The preferred approach is to extract the
relevant information from the log data into individual fields in a
MongoDB <a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">document</em></a>.</p>
<p>When you extract data from the log into fields, pay attention to the
data types you use to render the log data into MongoDB.</p>
<p>As you design this schema, be mindful that the data types you use to
encode the data can have a significant impact on the performance and
capability of the logging system. Consider the date field: In the
above example, <tt class="docutils literal"><span class="pre">[10/Oct/2000:13:55:36</span> <span class="pre">-0700]</span></tt> is 28 bytes long. If
you store this with the UTC timestamp type, you can convey the same
information in only 8 bytes.</p>
<p>Additionally, using proper types for your data also increases query
flexibility: if you store date as a timestamp you can make date range
queries, whereas it&#8217;s very difficult to compare two <em>strings</em> that
represent dates. The same issue holds for numeric fields; storing
numbers as strings requires more space and is difficult to query.</p>
<p>Consider the following document that captures all data from the above
log entry:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
     <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s1">&#39;4f442120eb03305789000000&#39;</span><span class="p">),</span>
     <span class="nx">host</span><span class="o">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span>
     <span class="nx">logname</span><span class="o">:</span> <span class="kc">null</span><span class="p">,</span>
     <span class="nx">user</span><span class="o">:</span> <span class="s1">&#39;frank&#39;</span><span class="p">,</span>
     <span class="nx">time</span><span class="o">:</span> <span class="nx">ISODate</span><span class="p">(</span><span class="s2">&quot;2000-10-10T20:55:36Z&quot;</span><span class="p">),</span>
     <span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/apache_pb.gif&quot;</span><span class="p">,</span>
     <span class="nx">request</span><span class="o">:</span> <span class="s2">&quot;GET /apache_pb.gif HTTP/1.0&quot;</span><span class="p">,</span>
     <span class="nx">status</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
     <span class="nx">response_size</span><span class="o">:</span> <span class="mi">2326</span><span class="p">,</span>
     <span class="nx">referrer</span><span class="o">:</span> <span class="s2">&quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot;</span><span class="p">,</span>
     <span class="nx">user_agent</span><span class="o">:</span> <span class="s2">&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>When extracting data from logs and designing a schema, also consider
what information you can omit from your log tracking system. In most
cases there&#8217;s no need to track <em>all</em> data from an event log, and you
can omit other fields. To continue the above example, here the most
crucial information may be the host, time, path, user agent, and
referrer, as in the following example document:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
     <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s1">&#39;4f442120eb03305789000000&#39;</span><span class="p">),</span>
     <span class="nx">host</span><span class="o">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span>
     <span class="nx">time</span><span class="o">:</span>  <span class="nx">ISODate</span><span class="p">(</span><span class="s2">&quot;2000-10-10T20:55:36Z&quot;</span><span class="p">),</span>
     <span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/apache_pb.gif&quot;</span><span class="p">,</span>
     <span class="nx">referer</span><span class="o">:</span> <span class="s2">&quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot;</span><span class="p">,</span>
     <span class="nx">user_agent</span><span class="o">:</span> <span class="s2">&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;</span>
<span class="p">}</span>
</pre></div>
</div>
<p>You may also consider omitting explicit time fields, because the
<tt class="docutils literal"><span class="pre">ObjectId</span></tt> embeds creation time:</p>
<div class="highlight-javascript"><div class="highlight"><pre><span class="p">{</span>
     <span class="nx">_id</span><span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s1">&#39;4f442120eb03305789000000&#39;</span><span class="p">),</span>
     <span class="nx">host</span><span class="o">:</span> <span class="s2">&quot;127.0.0.1&quot;</span><span class="p">,</span>
     <span class="nx">path</span><span class="o">:</span> <span class="s2">&quot;/apache_pb.gif&quot;</span><span class="p">,</span>
     <span class="nx">referer</span><span class="o">:</span> <span class="s2">&quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot;</span><span class="p">,</span>
     <span class="nx">user_agent</span><span class="o">:</span> <span class="s2">&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;</span>
<span class="p">}</span>
</pre></div>
</div>
</div>
<div class="section" id="system-architecture">
<h3>System Architecture<a class="headerlink" href="#system-architecture" title="Permalink to this headline">¶</a></h3>
<p>The primary performance concern for event logging systems are:</p>
<ol class="arabic">
<li><p class="first">how many inserts per second can it support, which limits the event
throughput, and</p>
</li>
<li><p class="first">how will the system manage the growth of event data, particularly
concerning a growth in insert activity.</p>
<p>In most cases the best way to increase the capacity of the system
is to use an architecture with some sort of <a class="reference internal" href="../../reference/glossary/#term-partition"><em class="xref std std-term">partitioning</em></a> or <a class="reference internal" href="../../reference/glossary/#term-sharding"><em class="xref std std-term">sharding</em></a> that distributes writes among a
cluster of systems.</p>
</li>
</ol>
</div>
</div>
<div class="section" id="operations">
<h2>Operations<a class="headerlink" href="#operations" title="Permalink to this headline">¶</a></h2>
<p>Insertion speed is the primary performance concern for an event
logging system. At the same time, the system must be able to support
flexible queries so that you can return data from the system
efficiently. This section describes procedures for both document
insertion and basic analytics queries.</p>
<p>The examples that follow use the Python programming language and the
<a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a> <a class="reference internal" href="../../reference/glossary/#term-driver"><em class="xref std std-term">driver</em></a> for MongoDB, but you
can implement this system using any language you choose.</p>
<div class="section" id="inserting-a-log-record">
<h3>Inserting a Log Record<a class="headerlink" href="#inserting-a-log-record" title="Permalink to this headline">¶</a></h3>
<div class="section" id="write-concern">
<h4>Write Concern<a class="headerlink" href="#write-concern" title="Permalink to this headline">¶</a></h4>
<p>MongoDB has a configurable <a class="reference internal" href="../../reference/glossary/#term-write-concern"><em class="xref std std-term">write concern</em></a>. This capability
allows you to balance the importance of guaranteeing that all writes
are fully recorded in the database with the speed of the insert.</p>
<p>For example, if you issue writes to MongoDB and do not require that
the database issue any response, the write operations will return
<em>very</em> fast (i.e. asynchronously,) but you cannot be certain that all
writes succeeded. Conversely, if you require that MongoDB acknowledge
every write operation, the database will not return as quickly but you
can be certain that every item will be present in the database.</p>
<p>The proper write concern is often an application specific decision,
and depends on the reporting requirements and uses of your analytics
application.</p>
</div>
<div class="section" id="insert-performance">
<h4>Insert Performance<a class="headerlink" href="#insert-performance" title="Permalink to this headline">¶</a></h4>
<p>The following example contains the setup for a Python console session
using PyMongo, with an event from the Apache Log:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">bson</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">pymongo</span>
<span class="gp">&gt;&gt;&gt; </span><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">conn</span> <span class="o">=</span> <span class="n">pymongo</span><span class="o">.</span><span class="n">Connection</span><span class="p">()</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">db</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">event_db</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">event</span> <span class="o">=</span> <span class="p">{</span>
<span class="gp">... </span>    <span class="n">_id</span><span class="p">:</span> <span class="n">bson</span><span class="o">.</span><span class="n">ObjectId</span><span class="p">(),</span>
<span class="gp">... </span>    <span class="n">host</span><span class="p">:</span> <span class="s">&quot;127.0.0.1&quot;</span><span class="p">,</span>
<span class="gp">... </span>    <span class="n">time</span><span class="p">:</span>  <span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">55</span><span class="p">,</span><span class="mi">36</span><span class="p">),</span>
<span class="gp">... </span>    <span class="n">path</span><span class="p">:</span> <span class="s">&quot;/apache_pb.gif&quot;</span><span class="p">,</span>
<span class="gp">... </span>    <span class="n">referer</span><span class="p">:</span> <span class="s">&quot;[http://www.example.com/start.html](http://www.example.com/start.html)&quot;</span><span class="p">,</span>
<span class="gp">... </span>    <span class="n">user_agent</span><span class="p">:</span> <span class="s">&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;</span>
<span class="go">...}</span>
</pre></div>
</div>
<p>The following command will insert the <tt class="docutils literal"><span class="pre">event</span></tt> object into the
<tt class="docutils literal"><span class="pre">events</span></tt> collection.</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">w</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</pre></div>
</div>
<p>By setting <tt class="docutils literal"><span class="pre">w=0</span></tt>, you do not require that MongoDB
acknowledges receipt of the insert.  Although very fast, this is risky
because the application cannot detect network and server failures. See
<a class="reference internal" href="../../core/write-operations/#write-concern"><em>Write Concern</em></a> for more information.</p>
<p>If you want to ensure that MongoDB acknowledges inserts, you can pass
<tt class="docutils literal"><span class="pre">w=1</span></tt> argument as follows:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">w</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</pre></div>
</div>
<p>MongoDB also supports a more stringent level of write concern, if you
have a lower tolerance for data loss:</p>
<p>You can ensure that MongoDB not only <em>acknowledge</em> receipt of the
message but also commit the write operation to the on-disk journal
before returning successfully to the application, use can use the
following <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">insert()</span></tt></a> operation:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">j</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last"><tt class="docutils literal"><span class="pre">j=True</span></tt> implies <tt class="docutils literal"><span class="pre">w=1</span></tt>.</p>
</div>
<p>Finally, if you have <em>extremely low</em> tolerance for event data loss,
you can require that MongoDB replicate the data to multiple
<a class="reference internal" href="../../reference/glossary/#term-secondary"><em class="xref std std-term">secondary</em></a> <a class="reference internal" href="../../reference/glossary/#term-replica-set"><em class="xref std std-term">replica set</em></a> members before returning:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">w</span><span class="o">=</span><span class="n">majority</span><span class="p">)</span>
</pre></div>
</div>
<p>This will force your application to acknowledge that the data has
replicated to a majority of configured members of the <a class="reference internal" href="../../reference/glossary/#term-replica-set"><em class="xref std std-term">replica set</em></a>. You can combine
options as well:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">j</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">w</span><span class="o">=</span><span class="n">majority</span><span class="p">)</span>
</pre></div>
</div>
<p>In this case, your application will wait for a successful journal
commit on the <a class="reference internal" href="../../reference/glossary/#term-primary"><em class="xref std std-term">primary</em></a> <em>and</em> a replication acknowledgment from
a majority of configured secondaries. This is the safest option
presented in this section, but it is the slowest. There is always a
trade-off between safety and speed.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>If possible, consider using bulk inserts to insert event data.</p>
<p class="last">All write concern options apply to bulk inserts, but you can pass
multiple events to the <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.insert" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">insert()</span></tt></a> method at
once. Batch inserts allow MongoDB to distribute the performance
penalty incurred by more stringent write concern across a group of
inserts.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">&#8220;<a class="reference internal" href="../../applications/replication/#replica-set-write-concern"><em>Write Concern for Replica Sets</em></a>&#8221;
and <a class="reference internal" href="../../reference/commands/#getLastError" title="getLastError"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">getLastError</span></tt></a>.</p>
</div>
</div>
</div>
<div class="section" id="finding-all-events-for-a-particular-page">
<h3>Finding All Events for a Particular Page<a class="headerlink" href="#finding-all-events-for-a-particular-page" title="Permalink to this headline">¶</a></h3>
<p>The value in maintaining a collection of event data derives from being
able to query that data to answer specific questions. You may have a
number of simple queries that you may use to analyze these data.</p>
<p>As an example, you may want to return all of the events associated
with specific value of a field. Extending the Apache access log
example from above, a common case would be to query for all events
with a specific value in the <tt class="docutils literal"><span class="pre">path</span></tt> field: This section contains a
pattern for returning data and optimizing this operation.</p>
<div class="section" id="query">
<h4>Query<a class="headerlink" href="#query" title="Permalink to this headline">¶</a></h4>
<p>Use a query that resembles the following to return all documents with
the <tt class="docutils literal"><span class="pre">/apache_pb.gif</span></tt> value in the <tt class="docutils literal"><span class="pre">path</span></tt> field:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">q_events</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">&#39;path&#39;</span><span class="p">:</span> <span class="s">&#39;/apache_pb.gif&#39;</span><span class="p">})</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">If you choose to <a class="reference internal" href="../../reference/glossary/#term-shard"><em class="xref std std-term">shard</em></a> the collection that stores this
data, the <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a> you choose can impact the performance
of this query. See the <a class="reference internal" href="#rta-storing-log-data-sharding"><em>sharding</em></a>
section of the sharding document.</p>
</div>
</div>
<div class="section" id="index-support">
<h4>Index Support<a class="headerlink" href="#index-support" title="Permalink to this headline">¶</a></h4>
<p>Adding an index on the <tt class="docutils literal"><span class="pre">path</span></tt> field would significantly enhance the
performance of this operation.</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">(</span><span class="s">&#39;path&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>Because the values of the <tt class="docutils literal"><span class="pre">path</span></tt> likely have a random distribution,
in order to operate efficiently, the entire index should be resident
in RAM. In this case, the number of distinct paths is typically small
in relation to the number of documents, which will limit the space
that the index requires.</p>
<p>If your system has a limited amount of RAM, or your data set has a
wider distribution in values, you may need to re investigate your
indexing support. In most cases, however, this index is entirely
sufficient.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The <a class="reference internal" href="../../reference/method/db.collection.ensureIndex/#db.collection.ensureIndex" title="db.collection.ensureIndex"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.collection.ensureIndex()</span></tt></a> JavaScript method
and the <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.ensure_index" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">db.events.ensure_index()</span></tt></a>
method in <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a>.</p>
</div>
</div>
</div>
<div class="section" id="finding-all-the-events-for-a-particular-date">
<h3>Finding All the Events for a Particular Date<a class="headerlink" href="#finding-all-the-events-for-a-particular-date" title="Permalink to this headline">¶</a></h3>
<p>The next example describes the process for returning all the events
for a particular date.</p>
<div class="section" id="id1">
<h4>Query<a class="headerlink" href="#id1" title="Permalink to this headline">¶</a></h4>
<p>To retrieve this data, use the following query:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">q_events</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s">&#39;time&#39;</span><span class="p">:</span>
<span class="gp">... </span>    <span class="p">{</span> <span class="s">&#39;$gte&#39;</span><span class="p">:</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="s">&#39;$lt&#39;</span><span class="p">:</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">)})</span>
</pre></div>
</div>
</div>
<div class="section" id="id2">
<h4>Index Support<a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h4>
<p>In this case, an index on the <tt class="docutils literal"><span class="pre">time</span></tt> field would optimize
performance:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">(</span><span class="s">&#39;time&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>Because your application is inserting events in order, the parts of
the index that capture recent events will always be in active RAM. As
a result, if you query primarily on recent data, MongoDB will be able
to maintain a large index, quickly fulfill queries, and avoid using
much system memory.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The <a class="reference internal" href="../../reference/method/db.collection.ensureIndex/#db.collection.ensureIndex" title="db.collection.ensureIndex"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.events.ensureIndex()</span></tt></a> JavaScript method
and the <a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.ensure_index" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">db.events.ensure_index()</span></tt></a>
method in <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a>.</p>
</div>
</div>
</div>
<div class="section" id="finding-all-events-for-a-particular-host-date">
<h3>Finding All Events for a Particular Host/Date<a class="headerlink" href="#finding-all-events-for-a-particular-host-date" title="Permalink to this headline">¶</a></h3>
<p>The following example describes a more complex query for returning
all events in the collection for a particular host on a particular
date. This kinds analysis may be useful for investigating suspicious
behavior by a specific user.</p>
<div class="section" id="id3">
<h4>Query<a class="headerlink" href="#id3" title="Permalink to this headline">¶</a></h4>
<p>Use a query that resembles the following:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">q_events</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">find</span><span class="p">({</span>
<span class="gp">... </span>    <span class="s">&#39;host&#39;</span><span class="p">:</span> <span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span>
<span class="gp">... </span>    <span class="s">&#39;time&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s">&#39;$gte&#39;</span><span class="p">:</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="s">&#39;$lt&#39;</span><span class="p">:</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">11</span><span class="p">)}</span>
<span class="gp">... </span><span class="p">})</span>
</pre></div>
</div>
<p>This query selects <a class="reference internal" href="../../reference/glossary/#term-document"><em class="xref std std-term">documents</em></a> from the <tt class="docutils literal"><span class="pre">events</span></tt>
collection where the <tt class="docutils literal"><span class="pre">host</span></tt> field is <tt class="docutils literal"><span class="pre">127.0.0.1</span></tt> (i.e. local
host), and the value of the <tt class="docutils literal"><span class="pre">time</span></tt> field represents a date that is
on or after (i.e. <a class="reference internal" href="../../reference/operators/#_S_gte" title="$gte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gte</span></tt></a>) <tt class="docutils literal"><span class="pre">2000-10-10</span></tt> but before
(i.e. <a class="reference internal" href="../../reference/operators/#_S_lt" title="$lt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lt</span></tt></a>) <tt class="docutils literal"><span class="pre">2000-10-11</span></tt>.</p>
</div>
<div class="section" id="id4">
<h4>Index Support<a class="headerlink" href="#id4" title="Permalink to this headline">¶</a></h4>
<p>The indexes you use may have significant implications for the
performance of these kinds of queries. For instance, you <em>can</em> create
a compound index on the <tt class="docutils literal"><span class="pre">time</span></tt> and <tt class="docutils literal"><span class="pre">host</span></tt> field, using the
following command:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([(</span><span class="s">&#39;time&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;host&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
<p>To analyze the performance for the above query using this index, issue
the
<a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/cursor.html#pymongo.cursor.Cursor.explain" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">q_events.explain()</span></tt></a>
method in a Python console. This will return something that resembles:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="go">{ ...</span>
<span class="go">  u&#39;cursor&#39;: u&#39;BtreeCursor time_1_host_1&#39;,</span>
<span class="go">  u&#39;indexBounds&#39;: {u&#39;host&#39;: [[u&#39;127.0.0.1&#39;, u&#39;127.0.0.1&#39;]],</span>
<span class="go">  u&#39;time&#39;: [</span>
<span class="go">      [ datetime.datetime(2000, 10, 10, 0, 0),</span>
<span class="go">        datetime.datetime(2000, 10, 11, 0, 0)]]</span>
<span class="go">  },</span>
<span class="go">  ...</span>
<span class="go">  u&#39;millis&#39;: 4,</span>
<span class="go">  u&#39;n&#39;: 11,</span>
<span class="go">  u&#39;nscanned&#39;: 1296,</span>
<span class="go">  u&#39;nscannedObjects&#39;: 11,</span>
<span class="go">  ... }</span>
</pre></div>
</div>
<p>This query had to scan 1296 items from the index to return 11 objects in 4
milliseconds. Conversely, you can test a different compound index with
the <tt class="docutils literal"><span class="pre">host</span></tt> field first, followed by the <tt class="docutils literal"><span class="pre">time</span></tt> field. Create this
index using the following operation:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">([(</span><span class="s">&#39;host&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;time&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)])</span>
</pre></div>
</div>
<p>Use the
<a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/cursor.html#pymongo.cursor.Cursor.explain" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">q_events.explain()</span></tt></a>
operation to test the performance:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="go">{ ...</span>
<span class="go">  u&#39;cursor&#39;: u&#39;BtreeCursor host_1_time_1&#39;,</span>
<span class="go">  u&#39;indexBounds&#39;: {u&#39;host&#39;: [[u&#39;127.0.0.1&#39;, u&#39;127.0.0.1&#39;]],</span>
<span class="go">  u&#39;time&#39;: [[datetime.datetime(2000, 10, 10, 0, 0),</span>
<span class="go">      datetime.datetime(2000, 10, 11, 0, 0)]]},</span>
<span class="go">  ...</span>
<span class="go">  u&#39;millis&#39;: 0,</span>
<span class="go">  u&#39;n&#39;: 11,</span>
<span class="go">  ...</span>
<span class="go">  u&#39;nscanned&#39;: 11,</span>
<span class="go">  u&#39;nscannedObjects&#39;: 11,</span>
<span class="go">  ...</span>
<span class="go">}</span>
</pre></div>
</div>
<p>Here, the query had to scan 11 items from the index before returning
11 objects in less than a millisecond. By placing the more selective
element of your query <em>first</em> in a compound index you may be able to
build more useful queries.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Although the index order has an impact query performance, remember
that index scans are <em>much</em> faster than collection scans, and
depending on your other queries, it may make more sense to use the
<tt class="docutils literal"><span class="pre">{</span> <span class="pre">time:</span> <span class="pre">1,</span> <span class="pre">host:</span> <span class="pre">1</span> <span class="pre">}</span></tt> index depending on usage profile.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">The <a class="reference internal" href="../../reference/method/db.collection.ensureIndex/#db.collection.ensureIndex" title="db.collection.ensureIndex"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">db.events.ensureIndex()</span></tt></a> JavaScript method and the
<a class="reference external" href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.ensure_index" title="(in PyMongo v2.4.1)"><tt class="xref py py-meth docutils literal"><span class="pre">db.events.ensure_index()</span></tt></a>
method in <a class="reference external" href="http://api.mongodb.org/python/current">PyMongo</a>.</p>
</div>
</div>
</div>
<div class="section" id="counting-requests-by-day-and-page">
<h3>Counting Requests by Day and Page<a class="headerlink" href="#counting-requests-by-day-and-page" title="Permalink to this headline">¶</a></h3>
<p>The following example describes the process for using the collection
of Apache access events to determine the number of request per
resource (i.e. page) per day in the last month.</p>
<div class="section" id="aggregation">
<h4>Aggregation<a class="headerlink" href="#aggregation" title="Permalink to this headline">¶</a></h4>
<p class="versionadded">
<span class="versionmodified">New in version 2.1.</span></p>
<p>The <a class="reference internal" href="../../reference/glossary/#term-aggregation-framework"><em class="xref std std-term">aggregation framework</em></a> provides the capacity for queries
that select, process, and aggregate results from large numbers of
documents. The <a class="reference internal" href="../../reference/method/db.collection.aggregate/#db.collection.aggregate" title="db.collection.aggregate"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">aggregate()</span></tt></a> (and <a class="reference internal" href="../../reference/commands/#aggregate" title="aggregate"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">aggregate</span></tt></a>
<a class="reference internal" href="../../reference/glossary/#term-database-command"><em class="xref std std-term">command</em></a>) offers greater flexibility,
capacity with less complexity than the existing <a class="reference internal" href="../../reference/commands/#mapReduce" title="mapReduce"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">mapReduce</span></tt></a>
and <a class="reference internal" href="../../reference/commands/#group" title="group"><tt class="xref mongodb mongodb-dbcommand docutils literal"><span class="pre">group</span></tt></a> aggregation commands.</p>
<p>Consider the following aggregation <a class="reference internal" href="../../reference/glossary/#term-pipeline"><em class="xref std std-term">pipeline</em></a>: <a class="footnote-reference" href="#sql-aggregation-equivalents" id="id5">[1]</a></p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">result</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">command</span><span class="p">(</span><span class="s">&#39;aggregate&#39;</span><span class="p">,</span> <span class="s">&#39;events&#39;</span><span class="p">,</span> <span class="n">pipeline</span><span class="o">=</span><span class="p">[</span>
<span class="gp">... </span>        <span class="p">{</span>  <span class="s">&#39;$match&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>              <span class="s">&#39;time&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>                  <span class="s">&#39;$gte&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span>
<span class="gp">... </span>                  <span class="s">&#39;$lt&#39;</span><span class="p">:</span>  <span class="n">datetime</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span> <span class="p">},</span>
<span class="gp">... </span>        <span class="p">{</span>  <span class="s">&#39;$project&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>                <span class="s">&#39;path&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
<span class="gp">... </span>                <span class="s">&#39;date&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>                    <span class="s">&#39;y&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$year&#39;</span><span class="p">:</span> <span class="s">&#39;$time&#39;</span> <span class="p">},</span>
<span class="gp">... </span>                    <span class="s">&#39;m&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$month&#39;</span><span class="p">:</span> <span class="s">&#39;$time&#39;</span> <span class="p">},</span>
<span class="gp">... </span>                    <span class="s">&#39;d&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$dayOfMonth&#39;</span><span class="p">:</span> <span class="s">&#39;$time&#39;</span> <span class="p">}</span> <span class="p">}</span> <span class="p">}</span> <span class="p">},</span>
<span class="gp">... </span>        <span class="p">{</span> <span class="s">&#39;$group&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>                <span class="s">&#39;_id&#39;</span><span class="p">:</span> <span class="p">{</span>
<span class="gp">... </span>                    <span class="s">&#39;p&#39;</span><span class="p">:</span><span class="s">&#39;$path&#39;</span><span class="p">,</span>
<span class="gp">... </span>                    <span class="s">&#39;y&#39;</span><span class="p">:</span> <span class="s">&#39;$date.y&#39;</span><span class="p">,</span>
<span class="gp">... </span>                    <span class="s">&#39;m&#39;</span><span class="p">:</span> <span class="s">&#39;$date.m&#39;</span><span class="p">,</span>
<span class="gp">... </span>                    <span class="s">&#39;d&#39;</span><span class="p">:</span> <span class="s">&#39;$date.d&#39;</span> <span class="p">},</span>
<span class="gp">... </span>                <span class="s">&#39;hits&#39;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;$sum&#39;</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span> <span class="p">}</span> <span class="p">},</span>
<span class="gp">... </span>        <span class="p">])</span>
</pre></div>
</div>
<p>This command aggregates documents from the <tt class="docutils literal"><span class="pre">events</span></tt> collection with
a pipeline that:</p>
<ol class="arabic">
<li><p class="first">Uses the <a class="reference internal" href="../../reference/aggregation/match/#_S_match" title="$match"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$match</span></tt></a> to limit the documents that the
aggregation framework must process. <a class="reference internal" href="../../reference/aggregation/match/#_S_match" title="$match"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$match</span></tt></a> is
similar to a <a class="reference internal" href="../../reference/method/db.collection.find/#db.collection.find" title="db.collection.find"><tt class="xref mongodb mongodb-method docutils literal"><span class="pre">find()</span></tt></a> query.</p>
<p>This operation selects all documents where the value of the
<tt class="docutils literal"><span class="pre">time</span></tt> field represents a date that is on or after
(i.e. <a class="reference internal" href="../../reference/operators/#_S_gte" title="$gte"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$gte</span></tt></a>) <tt class="docutils literal"><span class="pre">2000-10-10</span></tt> but before
(i.e. <a class="reference internal" href="../../reference/operators/#_S_lt" title="$lt"><tt class="xref mongodb mongodb-operator docutils literal"><span class="pre">$lt</span></tt></a>) <tt class="docutils literal"><span class="pre">2000-10-11</span></tt>.</p>
</li>
<li><p class="first">Uses the <a class="reference internal" href="../../reference/aggregation/project/#_S_project" title="$project"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$project</span></tt></a> to limit the data that continues
through the pipeline. This operator:</p>
<ul class="simple">
<li>Selects the <tt class="docutils literal"><span class="pre">path</span></tt> field.</li>
<li>Creates a <tt class="docutils literal"><span class="pre">y</span></tt> field to hold the year, computed from the
<tt class="docutils literal"><span class="pre">time</span></tt> field in the original documents.</li>
<li>Creates a <tt class="docutils literal"><span class="pre">m</span></tt> field to hold the month, computed from the
<tt class="docutils literal"><span class="pre">time</span></tt> field in the original documents</li>
<li>Creates a <tt class="docutils literal"><span class="pre">d</span></tt> field to hold the day, computed from the
<tt class="docutils literal"><span class="pre">time</span></tt> field in the original documents.</li>
</ul>
</li>
<li><p class="first">Uses the <a class="reference internal" href="../../reference/aggregation/group/#_S_group" title="$group"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$group</span></tt></a> to create new computed
documents. This step will create a single new document for each
unique path/date combination. The documents take the following
form:</p>
<ul class="simple">
<li>the <tt class="docutils literal"><span class="pre">_id</span></tt> field holds a sub-document with the contents <tt class="docutils literal"><span class="pre">path</span></tt>
field from the original documents in the <tt class="docutils literal"><span class="pre">p</span></tt> field, with the
<tt class="docutils literal"><span class="pre">date</span></tt> fields from the <a class="reference internal" href="../../reference/aggregation/project/#_S_project" title="$project"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$project</span></tt></a>  as the
remaining fields.</li>
<li>the <tt class="docutils literal"><span class="pre">hits</span></tt> field use the <a class="reference internal" href="../../reference/aggregation/sum/#_S_sum" title="$sum"><tt class="xref agg agg-group docutils literal"><span class="pre">$sum</span></tt></a> statement to
increment a counter for every document in the group. In the
aggregation output, this field holds the total number of
documents at the beginning of the aggregation pipeline with this
unique date and path.</li>
</ul>
</li>
</ol>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>In sharded environments, the performance of aggregation operations
depends on the <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a>. Ideally, all the items in a
particular <a class="reference internal" href="../../reference/aggregation/group/#_S_group" title="$group"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$group</span></tt></a> operation will reside on the same
server.</p>
<p class="last">While this distribution of documents would occur if you chose the
<tt class="docutils literal"><span class="pre">time</span></tt> field as the shard key, a field like <tt class="docutils literal"><span class="pre">path</span></tt> also has
this property and is a typical choice for sharding. Also see the
&#8220;<a class="reference internal" href="#rta-storing-log-data-sharding"><em>sharding considerations</em></a>.&#8221;
of this document for additional recommendations for using sharding.</p>
</div>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">&#8220;<a class="reference internal" href="../../applications/aggregation/"><em>Aggregation Framework</em></a>&#8220;</p>
</div>
<table class="docutils footnote" frame="void" id="sql-aggregation-equivalents" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id5">[1]</a></td><td>To translate statements from the
<a class="reference internal" href="../../applications/aggregation/"><em>aggregation framework</em></a> to SQL,
you can consider the <a class="reference internal" href="../../reference/aggregation/match/#_S_match" title="$match"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$match</span></tt></a> equivalent to
<tt class="docutils literal"><span class="pre">WHERE</span></tt>, <a class="reference internal" href="../../reference/aggregation/project/#_S_project" title="$project"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$project</span></tt></a> to <tt class="docutils literal"><span class="pre">SELECT</span></tt>, and
<a class="reference internal" href="../../reference/aggregation/group/#_S_group" title="$group"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$group</span></tt></a> to <tt class="docutils literal"><span class="pre">GROUP</span> <span class="pre">BY</span></tt>.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="id6">
<h4>Index Support<a class="headerlink" href="#id6" title="Permalink to this headline">¶</a></h4>
<p>To optimize the aggregation operation, ensure that the initial
<a class="reference internal" href="../../reference/aggregation/match/#_S_match" title="$match"><tt class="xref agg agg-pipeline docutils literal"><span class="pre">$match</span></tt></a> query has an index. Use the following command
to create an index on the <tt class="docutils literal"><span class="pre">time</span></tt> field in the <tt class="docutils literal"><span class="pre">events</span></tt> collection:</p>
<div class="highlight-pycon"><div class="highlight"><pre><span class="gp">&gt;&gt;&gt; </span><span class="n">db</span><span class="o">.</span><span class="n">events</span><span class="o">.</span><span class="n">ensure_index</span><span class="p">(</span><span class="s">&#39;time&#39;</span><span class="p">)</span>
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">If you have already created a compound index on the <tt class="docutils literal"><span class="pre">time</span></tt> and
<tt class="docutils literal"><span class="pre">host</span></tt> (i.e. <tt class="docutils literal"><span class="pre">{</span> <span class="pre">time:</span> <span class="pre">1,</span> <span class="pre">host,</span> <span class="pre">1</span> <span class="pre">}</span></tt>,) MongoDB will use this
index for range queries on just the <tt class="docutils literal"><span class="pre">time</span></tt> field. Do not create
an additional index, in these situations.</p>
</div>
</div>
</div>
</div>
<div class="section" id="sharding">
<span id="rta-storing-log-data-sharding"></span><h2>Sharding<a class="headerlink" href="#sharding" title="Permalink to this headline">¶</a></h2>
<p>Eventually your system&#8217;s events will exceed the capacity of a single
event logging database instance. In these situations you will want to
use a <a class="reference internal" href="../../reference/glossary/#term-sharded-cluster"><em class="xref std std-term">sharded cluster</em></a>, which takes advantage of MongoDB&#8217;s
<a class="reference internal" href="../../reference/glossary/#term-sharding"><em class="xref std std-term">sharding</em></a> functionality. This section introduces the unique
sharding concerns for this event logging case.</p>
<div class="admonition-see-also admonition seealso">
<p class="first admonition-title">See also</p>
<p class="last">&#8220;<a class="reference internal" href="../../faq/sharding/"><em>FAQ: Sharding with MongoDB</em></a>&#8221; and the &#8220;<a class="reference external" href="http://www.mongodb.org/display/DOCS/Sharding">Sharding</a> wiki
page.</p>
</div>
<div class="section" id="limitations">
<h3>Limitations<a class="headerlink" href="#limitations" title="Permalink to this headline">¶</a></h3>
<p>In a sharded environment the limitations on the maximum insertion rate
are:</p>
<ul class="simple">
<li>the number of shards in the cluster.</li>
<li>the <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a> you chose.</li>
</ul>
<p>Because MongoDB distributed data in using &#8220;ranges&#8221; (i.e. <a class="reference internal" href="../../reference/glossary/#term-chunk"><em class="xref std std-term">chunks</em></a>) of <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">keys</em></a>, the choice of shard key can
control how MongoDB distributes data and the resulting systems&#8217;
capacity for writes and queries.</p>
<p>Ideally, your shard key should allow insertions balance evenly among
the shards <a class="footnote-reference" href="#timestamps" id="id7">[2]</a> and for most queries to only <em>need</em> to
access a single shard. <a class="footnote-reference" href="#hashes" id="id8">[3]</a> Continue reading for an analysis of
a collection of shard key choices.</p>
<table class="docutils footnote" frame="void" id="timestamps" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id7">[2]</a></td><td>For this reason, avoid shard keys based on the
timestamp or the insertion time (i.e. the <tt class="docutils literal"><span class="pre">ObjectId</span></tt>) because all
writes will end up on a single node.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="hashes" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id8">[3]</a></td><td>For this reason, avoid randomized shard keys (e.g. hash
based shard keys) because any query will have to access all shards
in the cluster.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="shard-by-time">
<span id="rta-storing-log-data-sharding-option-1"></span><h3>Shard by Time<a class="headerlink" href="#shard-by-time" title="Permalink to this headline">¶</a></h3>
<p>While using the timestamp, or the <tt class="docutils literal"><span class="pre">ObjectId</span></tt> in the <tt class="docutils literal"><span class="pre">_id</span></tt>
field, <a class="footnote-reference" href="#objid" id="id9">[4]</a> would distribute your data evenly among shards, these
keys lead to two problems:</p>
<ol class="arabic simple">
<li>All inserts always flow to the same shard, which means that your
<a class="reference internal" href="../../reference/glossary/#term-sharded-cluster"><em class="xref std std-term">sharded cluster</em></a> will have the same write throughput as a
standalone instance.</li>
<li>Most reads will tend to cluster on the same shard, as analytics
queries.</li>
</ol>
<table class="docutils footnote" frame="void" id="objid" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id9">[4]</a></td><td>The <tt class="docutils literal"><span class="pre">ObjectId</span></tt> derives from the creation time, and is
effectively a timestamp in this case.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="shard-by-a-semi-random-key">
<span id="rta-storing-log-data-sharding-option-2"></span><h3>Shard by a Semi-Random Key<a class="headerlink" href="#shard-by-a-semi-random-key" title="Permalink to this headline">¶</a></h3>
<p>To distribute data more evenly among the shards, you may consider
using a more &#8220;random&#8221; piece of data, such as a hash of the <tt class="docutils literal"><span class="pre">_id</span></tt>
field (i.e. the <tt class="docutils literal"><span class="pre">ObjectId</span></tt> as a <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a>.</p>
<p>While this introduces some additional complexity into your application,
to generate the key, it will distribute writes among the shards. In
these deployments having 5 shards will provide 5 times the write
capacity as a single instance.</p>
<p>Using this shard key, or any hashed value as a key presents the
following downsides:</p>
<ul class="simple">
<li>the shard key, and the index on the key will consume additional
space in the database.</li>
<li>queries, unless they include the shard key itself, <a class="footnote-reference" href="#queries" id="id10">[5]</a>
must run in parallel on all shards, which may lead to degraded
performance.</li>
</ul>
<p>This might be an acceptable trade-off in some situations. The workload
of event logging systems tends to be heavily skewed toward writing,
read performance may not be as critical as more robust write
performance.</p>
<table class="docutils footnote" frame="void" id="queries" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id10">[5]</a></td><td>Typically, it is difficult to use these kinds of shard
keys in queries.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="shard-by-an-evenly-distributed-key-in-the-data-set">
<span id="rta-storing-log-data-sharding-option-3"></span><h3>Shard by an Evenly-Distributed Key in the Data Set<a class="headerlink" href="#shard-by-an-evenly-distributed-key-in-the-data-set" title="Permalink to this headline">¶</a></h3>
<p>If a field in your documents has values that are evenly distributed
among the documents, you may consider using this key as a <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard
key</em></a>.</p>
<p>Continuing the example from above, you may consider using the <tt class="docutils literal"><span class="pre">path</span></tt>
field. Which may have a couple of advantages:</p>
<ol class="arabic simple">
<li>writes will tend to balance evenly among shards.</li>
<li>reads will tend to be selective and local to a single shard if the
query selects on the <tt class="docutils literal"><span class="pre">path</span></tt> field.</li>
</ol>
<p>There are a few potential problems with these kinds of shard keys:</p>
<ol class="arabic simple">
<li>If a large number of documents will have the same shard key, you
run the risk of having a portion of your data collection MongoDB
cannot distribute throughout the cluster.</li>
<li>If there are a small number of possible values, there may be a
limit to how much MongoDB will be able to distribute the data among
the shard.</li>
</ol>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">Test using your existing data to ensure that the distribution is
truly even, and that there is a sufficient quantity of distinct
values for the shard key.</p>
</div>
</div>
<div class="section" id="shard-by-combine-a-natural-and-synthetic-key">
<span id="rta-storing-log-data-sharding-option-4"></span><h3>Shard by Combine a Natural and Synthetic Key<a class="headerlink" href="#shard-by-combine-a-natural-and-synthetic-key" title="Permalink to this headline">¶</a></h3>
<p>MongoDB supports compound <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard keys</em></a> that combine
the best aspects of <a class="reference internal" href="#rta-storing-log-data-sharding-option-3"><em>sharding by a evenly distributed key in the
set</em></a> and <a class="reference internal" href="#rta-storing-log-data-sharding-option-2"><em>sharding by a
random key</em></a>. In these
situations, the shard key would resemble <tt class="docutils literal"><span class="pre">{</span> <span class="pre">path:</span> <span class="pre">1</span> <span class="pre">,</span> <span class="pre">ssk:</span> <span class="pre">1</span> <span class="pre">}</span></tt>
where, <tt class="docutils literal"><span class="pre">path</span></tt> is an often used &#8220;natural key, or value from your
data and <tt class="docutils literal"><span class="pre">ssk</span></tt> is a hash of the <tt class="docutils literal"><span class="pre">_id</span></tt> field. <a class="footnote-reference" href="#ssk" id="id11">[6]</a></p>
<p>Using this type of shard key, data is largely distributed by the
natural key, or <tt class="docutils literal"><span class="pre">path</span></tt>, which makes most queries that access the
<tt class="docutils literal"><span class="pre">path</span></tt> field local to a single shard or group of shards. At the same
time, if there is not sufficient distribution for specific values of
<tt class="docutils literal"><span class="pre">path</span></tt>, the <tt class="docutils literal"><span class="pre">ssk</span></tt> makes it possible for MongoDB to create
<a class="reference internal" href="../../reference/glossary/#term-chunk"><em class="xref std std-term">chunks</em></a> and data across the cluster.</p>
<p>In most situations, these kinds of keys provide the ideal balance
between distributing writes across the cluster and ensuring that most
queries will only need to access a select number of shards.</p>
<table class="docutils footnote" frame="void" id="ssk" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id11">[6]</a></td><td>You must still calculate the value of this synthetic key in
your application when you insert documents into your collection.</td></tr>
</tbody>
</table>
</div>
<div class="section" id="test-with-your-own-data">
<h3>Test with Your Own Data<a class="headerlink" href="#test-with-your-own-data" title="Permalink to this headline">¶</a></h3>
<p>Selecting shard keys is difficult because: there are no definitive
&#8220;best-practices,&#8221; the decision has a large impact on performance, and
it is difficult or impossible to change the shard key after making the
selection.</p>
<p>The <a class="reference internal" href="#rta-storing-log-data-sharding"><em>sharding options</em></a> provides a
good starting point for thinking about <a class="reference internal" href="../../reference/glossary/#term-shard-key"><em class="xref std std-term">shard key</em></a>
selection. Nevertheless, the best way to select a shard key is to
analyze the actual insertions and queries from your own application.</p>
</div>
</div>
<div class="section" id="managing-event-data-growth">
<h2>Managing Event Data Growth<a class="headerlink" href="#managing-event-data-growth" title="Permalink to this headline">¶</a></h2>
<p>Without some strategy for managing the size of your database, most
event logging systems can grow infinitely. This is particularly
important in the context of MongoDB may not relinquish data to the
file system in the way you might expect. Consider the following
strategies for managing data growth:</p>
<div class="section" id="capped-collections">
<span id="rta-storing-log-data-capped-collections"></span><h3>Capped Collections<a class="headerlink" href="#capped-collections" title="Permalink to this headline">¶</a></h3>
<p>Depending on your data retention requirements as well as your
reporting and analytics needs, you may consider using a <a class="reference internal" href="../../reference/glossary/#term-capped-collection"><em class="xref std std-term">capped
collection</em></a> to store your events. Capped collections have a fixed
size, and drop old data when inserting new data after reaching cap.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">In the current version, it is not possible to shard capped
collections.</p>
</div>
</div>
<div class="section" id="multiple-collections-single-database">
<span id="rta-storing-log-data-multiple-collections-single-database"></span><h3>Multiple Collections, Single Database<a class="headerlink" href="#multiple-collections-single-database" title="Permalink to this headline">¶</a></h3>
<p><strong>Strategy:</strong> Periodically rename your event collection so that your
data collection rotates in much the same way that you might rotate log
files. When needed, you can drop the oldest collection from the
database.</p>
<p>This approach has several advantages over the single collection
approach:</p>
<ol class="arabic simple">
<li>Collection renames are fast and atomic.</li>
<li>MongoDB does not bring any document into memory to drop a
collection.</li>
<li>MongoDB can effectively reuse space freed by removing entire
collections without leading to data fragmentation.</li>
</ol>
<p>Nevertheless, this operation may increase some complexity for queries,
if any of your analyses depend on events that may reside in the
current and previous collection. For most real time data collection
systems, this approach is the most ideal.</p>
</div>
<div class="section" id="multiple-databases">
<h3>Multiple Databases<a class="headerlink" href="#multiple-databases" title="Permalink to this headline">¶</a></h3>
<p><strong>Strategy:</strong> Rotate databases rather than collections, as in the
&#8220;<a class="reference internal" href="#rta-storing-log-data-multiple-collections-single-database"><em>Multiple Collections, Single Database</em></a>
example.</p>
<p>While this <em>significantly</em> increases application complexity for
insertions and queries, when you drop old databases, MongoDB will
return disk space to the file system. This approach makes the most
sense in scenarios where your event insertion rates and/or your data
retention rates were extremely variable.</p>
<p>For example, if you are performing a large backfill of event data and
want to make sure that the entire set of event data for 90 days is
available during the backfill, during normal operations you only need
30 days of event data, you might consider using multiple databases.</p>
</div>
</div>
</div>


<div id="btnv">
<ul id="btnvl">
<li id="btnvpr"><a href="../" title="Previous Section: Use Cases">&lt; &nbsp; Use Cases</a></li>
<li id="btnvup"><a href="../" title="Parent Section: Use Cases" >&#47;&#92;&nbsp; Use Cases</a></li>
<li id="btnvnx"><a href="../pre-aggregated-reports/" title="Next Section: Pre-Aggregated Reports">Pre-Aggregated Reports &nbsp;&gt;</a></li>
</ul>
</div>
</div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">

<h3><a href="../../contents/">MongoDB Manual</a>
<small>(<a href="../../genindex/">Index</a>)</small>
</h3>

<ul class="current">
<li class="toctree-l1"><a class="reference internal" href="../../about/">About MongoDB Documentation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../installation/">Installing MongoDB</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../replication/">Replication</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../sharding/">Sharding</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../administration/">Administration</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../security/">Security</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../crud/">CRUD</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../aggregation/">Aggregation</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../indexes/">Indexes</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../applications/">Application Development</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../mongo/">Using the MongoDB Shell</a></li>
<li class="toctree-l1 current"><a class="reference internal" href="../">Use Cases</a><ul class="current">
<li class="toctree-l2 current"><a class="reference internal" href="../#operational-intelligence">Operational Intelligence</a><ul class="current">
<li class="toctree-l3 current"><a class="current reference internal" href="">Storing Log Data</a><ul>
<li class="toctree-l4"><a class="reference internal" href="#overview">Overview</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#problem">Problem</a></li>
<li class="toctree-l5"><a class="reference internal" href="#solution">Solution</a></li>
<li class="toctree-l5"><a class="reference internal" href="#schema-design">Schema Design</a></li>
<li class="toctree-l5"><a class="reference internal" href="#system-architecture">System Architecture</a></li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#operations">Operations</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#inserting-a-log-record">Inserting a Log Record</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#write-concern">Write Concern</a></li>
<li class="toctree-l6"><a class="reference internal" href="#insert-performance">Insert Performance</a></li>
</ul>
</li>
<li class="toctree-l5"><a class="reference internal" href="#finding-all-events-for-a-particular-page">Finding All Events for a Particular Page</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#query">Query</a></li>
<li class="toctree-l6"><a class="reference internal" href="#index-support">Index Support</a></li>
</ul>
</li>
<li class="toctree-l5"><a class="reference internal" href="#finding-all-the-events-for-a-particular-date">Finding All the Events for a Particular Date</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#id1">Query</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id2">Index Support</a></li>
</ul>
</li>
<li class="toctree-l5"><a class="reference internal" href="#finding-all-events-for-a-particular-host-date">Finding All Events for a Particular Host/Date</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#id3">Query</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id4">Index Support</a></li>
</ul>
</li>
<li class="toctree-l5"><a class="reference internal" href="#counting-requests-by-day-and-page">Counting Requests by Day and Page</a><ul>
<li class="toctree-l6"><a class="reference internal" href="#aggregation">Aggregation</a></li>
<li class="toctree-l6"><a class="reference internal" href="#id6">Index Support</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#sharding">Sharding</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#limitations">Limitations</a></li>
<li class="toctree-l5"><a class="reference internal" href="#shard-by-time">Shard by Time</a></li>
<li class="toctree-l5"><a class="reference internal" href="#shard-by-a-semi-random-key">Shard by a Semi-Random Key</a></li>
<li class="toctree-l5"><a class="reference internal" href="#shard-by-an-evenly-distributed-key-in-the-data-set">Shard by an Evenly-Distributed Key in the Data Set</a></li>
<li class="toctree-l5"><a class="reference internal" href="#shard-by-combine-a-natural-and-synthetic-key">Shard by Combine a Natural and Synthetic Key</a></li>
<li class="toctree-l5"><a class="reference internal" href="#test-with-your-own-data">Test with Your Own Data</a></li>
</ul>
</li>
<li class="toctree-l4"><a class="reference internal" href="#managing-event-data-growth">Managing Event Data Growth</a><ul>
<li class="toctree-l5"><a class="reference internal" href="#capped-collections">Capped Collections</a></li>
<li class="toctree-l5"><a class="reference internal" href="#multiple-collections-single-database">Multiple Collections, Single Database</a></li>
<li class="toctree-l5"><a class="reference internal" href="#multiple-databases">Multiple Databases</a></li>
</ul>
</li>
</ul>
</li>
<li class="toctree-l3"><a class="reference internal" href="../pre-aggregated-reports/">Pre-Aggregated Reports</a></li>
<li class="toctree-l3"><a class="reference internal" href="../hierarchical-aggregation/">Hierarchical Aggregation</a></li>
</ul>
</li>
<li class="toctree-l2"><a class="reference internal" href="../#product-data-management">Product Data Management</a></li>
<li class="toctree-l2"><a class="reference internal" href="../#content-management-systems">Content Management Systems</a></li>
<li class="toctree-l2"><a class="reference internal" href="../#python-application-development">Python Application Development</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="../../faq/">Frequently Asked Questions</a></li>
<li class="toctree-l1"><a class="reference internal" href="../../reference/">Reference</a></li>
</ul>

<h3>Formats</h3>
<ul class="this-page-menu">
  <li><a href="/master/single/">MongoDB Manual, Single HTML Page</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.pdf" rel="nofollow">MongoDB Manual, PDF Format</a></li>
  <li><a href="http://docs.mongodb.org/master/MongoDB-Manual-master.epub" rel="nofollow">MongoDB Manual, ePub Format</a></li>
</ul>

<h3>Translations</h3>
<ul class="translation-menu">
  <li><a href="http://jp.docs.mongodb.org/master/use-cases/storing-log-data" rel="nofollow">Japanese</a></li>
  <li><a href="http://cn.docs.mongodb.org/master/use-cases/storing-log-data" rel="nofollow">Chinese</a></li>
  <!-- <li><a href="http://docs.mongodb.org/master/use-cases/storing-log-data" rel="nofollow">English</a></li> -->
</ul>
<h3>Knowledge Base </h3>
<ul class="kb-menu">
  <li><a href="../../tutorial/">Tutorials</a></li>
  <li><a href="../../faq/">Frequently Asked Questions</a></li>
  <li><a href="../">Use Cases</a></li>
</ul><h3>MongoDB Wiki</h3>

<ul>
 <li><strong>Getting Started</strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Quickstart">Quickstart</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Introduction">Introduction</a></li>
     <li><a href="http://www.mongodb.org/downloads">Downloads</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart">SQL to MongoDB Mapping</a></li> -->
   </ul>
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Developer+Zone">Developer Documentation</a></strong>
   <!-- <ul> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Connections">Connections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Databases">Databases</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Collections">Collections</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Documents">Documents</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS">GridFS</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Indexes">Indexes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Querying">Querying</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Aggregation">Aggregation</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Optimization">Optimization</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Inserting">Inserting</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Updating">Updating</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Removing">Removing</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/MapReduce">MapReduce</a></li> -->
   <!-- </ul> -->
 </li>
 <li><strong><a href="http://mongodb.org/display/DOCS/Admin+Zone">Administrative Documentation</a></strong>
   <ul>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Components">Components</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Journaling">Journaling</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Production+Notes">Production Notes</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Replication">Replication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Sharding">Sharding</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Monitoring+and+Diagnostics">Monitoring and Diagnostics</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Backups">Backups</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Durability+and+Repair">Durability and Repair</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Security+and+Authentication">Security and Authentication</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/Starting+and+Stopping+Mongo">Starting/Stopping MongoDB</a></li> -->
     <!-- <li><a href="http://mongodb.org/display/DOCS/GridFS+Tools">GridFS Tools</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/DBA+Operations+from+the+Shell">DB Operations from the Shell</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/Architecture+and+Components">Architecture and Components</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Windows">Windows</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Troubleshooting">Troubleshooting</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Community">Community and Ecosystem</a></strong>
   <ul>
     <li><a href="http://10gen.com">10gen</a></li>
     <li><a href="http://www.mongodb.org/events">MongoDB Events</a></li>
     <li><a href="http://planet.mongodb.org">Planet MongoDB</a></li>
     <li><a href="http://mongodb.org/display/DOCS/MongoDB+Masters">MongoDB Masters</a></li>
     <li><a href="http://mongodb.org/display/DOCS/Slides+and+Video">Slides and Video</a></li>
     <!-- <li><a href="http://cookbook.mongodb.org/">Cookbook</a></li> -->
     <li><a href="http://mongodb.org/display/DOCS/Hosting+Center">Hosting Center</a></li>
     <li><a href="http://mms.10gen.com/">MongoDB Monitoring Service</a> (<a href="http://mms.10gen.com/help/">docs</a>)</li>
     <li><a href="http://mongodb.org/display/DOCS/Admin+UIs">Administrative Interfaces</a></li>
     <!-- <li><a href="http://mongodb.org/display/DOCS/International+Docs">International Documentation</a></li> -->
     <li><a href="http://10gen.com/books/">MongoDB Books</a></li>
   </ul>
 </li>
 <li><strong><a href="http://www.mongodb.org/display/DOCS/Drivers">Drivers</a></strong>
   <ul>
     <li>JavaScript (<a href="http://mongodb.org/display/DOCS/Javascript+Language+Center">wiki</a>, <a href="http://api.mongodb.org/js/current">docs</a>)</li>
     <li>Python (<a href="http://mongodb.org/display/DOCS/Python+Language+Center">wiki</a>, <a href="http://api.mongodb.org/python/current">docs</a>)</li>
     <li>Ruby (<a href="http://mongodb.org/display/DOCS/Ruby+Language+Center">wiki</a>, <a href="http://api.mongodb.org/ruby/current">docs</a>)</li>
     <li>PHP (<a href="http://mongodb.org/display/DOCS/PHP+Language+Center">wiki</a>, <a href="http://php.net/mongo/">docs</a>)</li>
     <li>Perl (<a href="http://mongodb.org/display/DOCS/Perl+Language+Center">wiki</a>, <a href="http://api.mongodb.org/perl/current/">docs</a>)</li>
     <li>Java (<a href="http://mongodb.org/display/DOCS/Java+Language+Center">wiki</a>, <a href="http://api.mongodb.org/java/current">docs</a>)</li>
     <li>Scala (<a href="http://mongodb.org/display/DOCS/Scala+Language+Center">wiki</a>, <a href="http://api.mongodb.org/scala/casbah/current/">docs</a>)</li>
     <li>C# (<a href="http://mongodb.org/display/DOCS/CSharp+Language+Center">wiki</a>, <a href="http://api.mongodb.org/csharp/current/">docs</a>)</li>
     <li>C (<a href="http://mongodb.org/display/DOCS/C+Language+Center">wiki</a>, <a href="http://api.mongodb.org/c/current/">docs</a>)</li>
     <li>C++ (<a href="http://mongodb.org/pages/viewpage.action?pageId=133409">wiki</a>, <a href="http://api.mongodb.org/cplusplus/current/">docs</a>)</li>
     <li>Haskell (<a href="http://mongodb.org/display/DOCS/Haskell+Language+Center">wiki</a>, <a href="http://api.mongodb.org/haskell">docs</a>)</li>
     <li>Erlang (<a href="http://mongodb.org/display/DOCS/Erlang+Language+Center">wiki</a>, <a href="http://api.mongodb.org/erlang">docs</a>)</li>
   </ul>
 </li>
</ul>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
  <div class="footer">
        &copy; Copyright 2011-2012, 10gen, Inc.  Licensed under <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons</a>.

    <p>MongoDB&reg;, Mongo&reg;, and the leaf logo are registered trademarks of 10gen, Inc.</p>
    <p>The MongoDB Documentation Project uses <a href="https://github.com/mongodb/docs">GitHub</a>. Fork the repository and submit pull requests to contribute.</p>
    <p>If you find any issues with the documentation feel free to open a <a href="http://jira.mongodb.org/browse/DOCS">Jira Case</a> and we'll work to resolve it promptly.</p>

  </div><script type="text/javascript">
var _gaq = _gaq || [];
var pluginUrl = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.') + 'google-analytics.com/plugins/ga/inpage_linkid.js';
_gaq.push(['_require', 'inpage_linkid', pluginUrl]);
_gaq.push(['_setAccount', 'UA-7301842-8']);
_gaq.push(['_setDomainName', 'docs.mongodb.org']);
_gaq.push(['_trackPageview']);
(function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(ga, s);
        })();
</script>

<script type="text/javascript">
document.write(unescape("%3Cscript src='" + document.location.protocol + "//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>try { mktoMunchkin("017-HGS-593"); } catch(e) {}</script>
  </body>
</html>